{
	"id": "aee9e9c84e70ff0aebbd933977939dd5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"DcofferCreator.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\ninterface IERC20 {    \r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address to, uint256 amount) external returns (bool);  \r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);  \r\n}\r\n\r\n\r\ninterface IER721{\r\n    function safeMint(address to) external;\r\n}\r\n\r\n\r\ninterface ITreasury{\r\n    function payment()external payable;\r\n}\r\n\r\n\r\n\r\n\r\ncontract DcofferCreator{\r\n    using SafeMath for uint;\r\n\r\n    IERC20 dcf = IERC20(0xB1Cd8ad16899318DA9F0A2c9933d599eB9cdC10c);\r\n    IER721 dcoffer = IER721(0x9149A8Cb21f2702fCb1076f0964A17d45B5EFa85);\r\n    ITreasury treasury =  ITreasury(0xB1Cd8ad16899318DA9F0A2c9933d599eB9cdC10c);\r\n\r\n    address owner;\r\n    uint WhiteList;\r\n    uint currentSupply;\r\n    uint mintLimit;\r\n    uint mintPrice;\r\n    \r\n\r\n    modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n\r\n    constructor(){\r\n        owner = msg.sender; \r\n        WhiteList = 200000e18;  \r\n        mintLimit = 100;\r\n        mintPrice = 5e16;       \r\n    }\r\n\r\n\r\n    function SafeMint()external payable{\r\n        require(msg.value >= mintPrice);\r\n        if(dcf.balanceOf(msg.sender) >= WhiteList){\r\n            mint();            \r\n        }else{\r\n            require(currentSupply <= mintLimit);\r\n            mint();\r\n            currentSupply = currentSupply.add(1);\r\n        } \r\n       \r\n        treasury.payment{value: msg.value}();    \r\n    }\r\n\r\n\r\n\r\n\r\n    function mint()private {        \r\n        dcoffer.safeMint(msg.sender);\r\n    }\r\n\r\n\r\n\r\n\r\n    // -----------------------------admin\r\n\r\n\r\n    function setLimit(uint _supply)external onlyOwner{\r\n        mintLimit = _supply;\r\n    }\r\n\r\n    function setprice(uint _price)external onlyOwner{\r\n        mintPrice = _price;\r\n    }\r\n\r\n   \r\n\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"DcofferCreator.sol": {
				"DcofferCreator": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "SafeMint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_supply",
									"type": "uint256"
								}
							],
							"name": "setLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setprice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DcofferCreator.sol\":7461:8878  contract DcofferCreator{... */\n  mstore(0x40, 0x80)\n    /* \"DcofferCreator.sol\":7543:7585  0xB1Cd8ad16899318DA9F0A2c9933d599eB9cdC10c */\n  0xb1cd8ad16899318da9f0a2c9933d599eb9cdc10c\n    /* \"DcofferCreator.sol\":7523:7586  IERC20 dcf = IERC20(0xB1Cd8ad16899318DA9F0A2c9933d599eB9cdC10c) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"DcofferCreator.sol\":7617:7659  0x9149A8Cb21f2702fCb1076f0964A17d45B5EFa85 */\n  0x9149a8cb21f2702fcb1076f0964a17d45b5efa85\n    /* \"DcofferCreator.sol\":7593:7660  IER721 dcoffer = IER721(0x9149A8Cb21f2702fCb1076f0964A17d45B5EFa85) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"DcofferCreator.sol\":7699:7741  0xB1Cd8ad16899318DA9F0A2c9933d599eB9cdC10c */\n  0xb1cd8ad16899318da9f0a2c9933d599eb9cdc10c\n    /* \"DcofferCreator.sol\":7667:7742  ITreasury treasury =  ITreasury(0xB1Cd8ad16899318DA9F0A2c9933d599eB9cdC10c) */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"DcofferCreator.sol\":7993:8138  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"DcofferCreator.sol\":8025:8035  msg.sender */\n  caller\n    /* \"DcofferCreator.sol\":8017:8022  owner */\n  0x03\n  0x00\n    /* \"DcofferCreator.sol\":8017:8035  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"DcofferCreator.sol\":8059:8068  200000e18 */\n  0x2a5a058fc295ed000000\n    /* \"DcofferCreator.sol\":8047:8056  WhiteList */\n  0x04\n    /* \"DcofferCreator.sol\":8047:8068  WhiteList = 200000e18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"DcofferCreator.sol\":8093:8096  100 */\n  0x64\n    /* \"DcofferCreator.sol\":8081:8090  mintLimit */\n  0x06\n    /* \"DcofferCreator.sol\":8081:8096  mintLimit = 100 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"DcofferCreator.sol\":8119:8123  5e16 */\n  0xb1a2bc2ec50000\n    /* \"DcofferCreator.sol\":8107:8116  mintPrice */\n  0x07\n    /* \"DcofferCreator.sol\":8107:8123  mintPrice = 5e16 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"DcofferCreator.sol\":7461:8878  contract DcofferCreator{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DcofferCreator.sol\":7461:8878  contract DcofferCreator{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x27ea6f2b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xa9892591\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd49f0fa5\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"DcofferCreator.sol\":8682:8769  function setLimit(uint _supply)external onlyOwner{... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"DcofferCreator.sol\":8148:8529  function SafeMint()external payable{... */\n    tag_3:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"DcofferCreator.sol\":8777:8862  function setprice(uint _price)external onlyOwner{... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_14:\n      tag_15\n      jump\t// in\n    tag_13:\n      stop\n        /* \"DcofferCreator.sol\":8682:8769  function setLimit(uint _supply)external onlyOwner{... */\n    tag_9:\n        /* \"DcofferCreator.sol\":7916:7926  msg.sender */\n      caller\n        /* \"DcofferCreator.sol\":7907:7926  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DcofferCreator.sol\":7907:7912  owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DcofferCreator.sol\":7907:7926  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"DcofferCreator.sol\":7899:7963  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"DcofferCreator.sol\":8754:8761  _supply */\n      dup1\n        /* \"DcofferCreator.sol\":8742:8751  mintLimit */\n      0x06\n        /* \"DcofferCreator.sol\":8742:8761  mintLimit = _supply */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DcofferCreator.sol\":8682:8769  function setLimit(uint _supply)external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"DcofferCreator.sol\":8148:8529  function SafeMint()external payable{... */\n    tag_11:\n        /* \"DcofferCreator.sol\":8215:8224  mintPrice */\n      sload(0x07)\n        /* \"DcofferCreator.sol\":8202:8211  msg.value */\n      callvalue\n        /* \"DcofferCreator.sol\":8202:8224  msg.value >= mintPrice */\n      lt\n      iszero\n        /* \"DcofferCreator.sol\":8194:8225  require(msg.value >= mintPrice) */\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n        /* \"DcofferCreator.sol\":8268:8277  WhiteList */\n      sload(0x04)\n        /* \"DcofferCreator.sol\":8239:8242  dcf */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DcofferCreator.sol\":8239:8252  dcf.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"DcofferCreator.sol\":8253:8263  msg.sender */\n      caller\n        /* \"DcofferCreator.sol\":8239:8264  dcf.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"DcofferCreator.sol\":8239:8277  dcf.balanceOf(msg.sender) >= WhiteList */\n      lt\n        /* \"DcofferCreator.sol\":8236:8461  if(dcf.balanceOf(msg.sender) >= WhiteList){... */\n      tag_29\n      jumpi\n        /* \"DcofferCreator.sol\":8293:8299  mint() */\n      tag_30\n        /* \"DcofferCreator.sol\":8293:8297  mint */\n      tag_31\n        /* \"DcofferCreator.sol\":8293:8299  mint() */\n      jump\t// in\n    tag_30:\n        /* \"DcofferCreator.sol\":8236:8461  if(dcf.balanceOf(msg.sender) >= WhiteList){... */\n      jump(tag_32)\n    tag_29:\n        /* \"DcofferCreator.sol\":8367:8376  mintLimit */\n      sload(0x06)\n        /* \"DcofferCreator.sol\":8350:8363  currentSupply */\n      sload(0x05)\n        /* \"DcofferCreator.sol\":8350:8376  currentSupply <= mintLimit */\n      gt\n      iszero\n        /* \"DcofferCreator.sol\":8342:8377  require(currentSupply <= mintLimit) */\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n        /* \"DcofferCreator.sol\":8392:8398  mint() */\n      tag_34\n        /* \"DcofferCreator.sol\":8392:8396  mint */\n      tag_31\n        /* \"DcofferCreator.sol\":8392:8398  mint() */\n      jump\t// in\n    tag_34:\n        /* \"DcofferCreator.sol\":8429:8449  currentSupply.add(1) */\n      tag_35\n        /* \"DcofferCreator.sol\":8447:8448  1 */\n      0x01\n        /* \"DcofferCreator.sol\":8429:8442  currentSupply */\n      sload(0x05)\n        /* \"DcofferCreator.sol\":8429:8446  currentSupply.add */\n      tag_36\n      swap1\n        /* \"DcofferCreator.sol\":8429:8449  currentSupply.add(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_35:\n        /* \"DcofferCreator.sol\":8413:8426  currentSupply */\n      0x05\n        /* \"DcofferCreator.sol\":8413:8449  currentSupply = currentSupply.add(1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DcofferCreator.sol\":8236:8461  if(dcf.balanceOf(msg.sender) >= WhiteList){... */\n    tag_32:\n        /* \"DcofferCreator.sol\":8481:8489  treasury */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DcofferCreator.sol\":8481:8497  treasury.payment */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42f6487a\n        /* \"DcofferCreator.sol\":8505:8514  msg.value */\n      callvalue\n        /* \"DcofferCreator.sol\":8481:8517  treasury.payment{value: msg.value}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_39:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"DcofferCreator.sol\":8148:8529  function SafeMint()external payable{... */\n      jump\t// out\n        /* \"DcofferCreator.sol\":8777:8862  function setprice(uint _price)external onlyOwner{... */\n    tag_15:\n        /* \"DcofferCreator.sol\":7916:7926  msg.sender */\n      caller\n        /* \"DcofferCreator.sol\":7907:7926  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DcofferCreator.sol\":7907:7912  owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DcofferCreator.sol\":7907:7926  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"DcofferCreator.sol\":7899:7963  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap1\n      tag_19\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"DcofferCreator.sol\":8848:8854  _price */\n      dup1\n        /* \"DcofferCreator.sol\":8836:8845  mintPrice */\n      0x07\n        /* \"DcofferCreator.sol\":8836:8854  mintPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DcofferCreator.sol\":8777:8862  function setprice(uint _price)external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"DcofferCreator.sol\":8543:8621  function mint()private {        ... */\n    tag_31:\n        /* \"DcofferCreator.sol\":8585:8592  dcoffer */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DcofferCreator.sol\":8585:8601  dcoffer.safeMint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40d097c3\n        /* \"DcofferCreator.sol\":8602:8612  msg.sender */\n      caller\n        /* \"DcofferCreator.sol\":8585:8613  dcoffer.safeMint(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_45:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n        /* \"DcofferCreator.sol\":8543:8621  function mint()private {        ... */\n      jump\t// out\n        /* \"DcofferCreator.sol\":2773:2871  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_36:\n        /* \"DcofferCreator.sol\":2831:2838  uint256 */\n      0x00\n        /* \"DcofferCreator.sol\":2862:2863  b */\n      dup2\n        /* \"DcofferCreator.sol\":2858:2859  a */\n      dup4\n        /* \"DcofferCreator.sol\":2858:2863  a + b */\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"DcofferCreator.sol\":2851:2863  return a + b */\n      swap1\n      pop\n        /* \"DcofferCreator.sol\":2773:2871  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_53:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_55:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_56:\n        /* \"#utility.yul\":490:514   */\n      tag_72\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_55\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_73:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_57:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_75\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_56\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_8:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_78\n      tag_53\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":766:885   */\n    tag_77:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_79\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_57\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1194   */\n    tag_58:\n        /* \"#utility.yul\":1109:1120   */\n      0x00\n        /* \"#utility.yul\":1143:1149   */\n      dup3\n        /* \"#utility.yul\":1138:1141   */\n      dup3\n        /* \"#utility.yul\":1131:1150   */\n      mstore\n        /* \"#utility.yul\":1183:1187   */\n      0x20\n        /* \"#utility.yul\":1178:1181   */\n      dup3\n        /* \"#utility.yul\":1174:1188   */\n      add\n        /* \"#utility.yul\":1159:1188   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1194   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1200:1382   */\n    tag_59:\n        /* \"#utility.yul\":1340:1374   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1336:1337   */\n      0x00\n        /* \"#utility.yul\":1328:1334   */\n      dup3\n        /* \"#utility.yul\":1324:1338   */\n      add\n        /* \"#utility.yul\":1317:1375   */\n      mstore\n        /* \"#utility.yul\":1200:1382   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1388:1754   */\n    tag_60:\n        /* \"#utility.yul\":1530:1533   */\n      0x00\n        /* \"#utility.yul\":1551:1618   */\n      tag_83\n        /* \"#utility.yul\":1615:1617   */\n      0x20\n        /* \"#utility.yul\":1610:1613   */\n      dup4\n        /* \"#utility.yul\":1551:1618   */\n      tag_58\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1544:1618   */\n      swap2\n      pop\n        /* \"#utility.yul\":1627:1720   */\n      tag_84\n        /* \"#utility.yul\":1716:1719   */\n      dup3\n        /* \"#utility.yul\":1627:1720   */\n      tag_59\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1745:1747   */\n      0x20\n        /* \"#utility.yul\":1740:1743   */\n      dup3\n        /* \"#utility.yul\":1736:1748   */\n      add\n        /* \"#utility.yul\":1729:1748   */\n      swap1\n      pop\n        /* \"#utility.yul\":1388:1754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1760:2179   */\n    tag_19:\n        /* \"#utility.yul\":1926:1930   */\n      0x00\n        /* \"#utility.yul\":1964:1966   */\n      0x20\n        /* \"#utility.yul\":1953:1962   */\n      dup3\n        /* \"#utility.yul\":1949:1967   */\n      add\n        /* \"#utility.yul\":1941:1967   */\n      swap1\n      pop\n        /* \"#utility.yul\":2013:2022   */\n      dup2\n        /* \"#utility.yul\":2007:2011   */\n      dup2\n        /* \"#utility.yul\":2003:2023   */\n      sub\n        /* \"#utility.yul\":1999:2000   */\n      0x00\n        /* \"#utility.yul\":1988:1997   */\n      dup4\n        /* \"#utility.yul\":1984:2001   */\n      add\n        /* \"#utility.yul\":1977:2024   */\n      mstore\n        /* \"#utility.yul\":2041:2172   */\n      tag_86\n        /* \"#utility.yul\":2167:2171   */\n      dup2\n        /* \"#utility.yul\":2041:2172   */\n      tag_60\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2033:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":1760:2179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2185:2311   */\n    tag_61:\n        /* \"#utility.yul\":2222:2229   */\n      0x00\n        /* \"#utility.yul\":2262:2304   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2255:2260   */\n      dup3\n        /* \"#utility.yul\":2251:2305   */\n      and\n        /* \"#utility.yul\":2240:2305   */\n      swap1\n      pop\n        /* \"#utility.yul\":2185:2311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2317:2413   */\n    tag_62:\n        /* \"#utility.yul\":2354:2361   */\n      0x00\n        /* \"#utility.yul\":2383:2407   */\n      tag_89\n        /* \"#utility.yul\":2401:2406   */\n      dup3\n        /* \"#utility.yul\":2383:2407   */\n      tag_61\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2372:2407   */\n      swap1\n      pop\n        /* \"#utility.yul\":2317:2413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2419:2537   */\n    tag_63:\n        /* \"#utility.yul\":2506:2530   */\n      tag_91\n        /* \"#utility.yul\":2524:2529   */\n      dup2\n        /* \"#utility.yul\":2506:2530   */\n      tag_62\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2501:2504   */\n      dup3\n        /* \"#utility.yul\":2494:2531   */\n      mstore\n        /* \"#utility.yul\":2419:2537   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2543:2765   */\n    tag_24:\n        /* \"#utility.yul\":2636:2640   */\n      0x00\n        /* \"#utility.yul\":2674:2676   */\n      0x20\n        /* \"#utility.yul\":2663:2672   */\n      dup3\n        /* \"#utility.yul\":2659:2677   */\n      add\n        /* \"#utility.yul\":2651:2677   */\n      swap1\n      pop\n        /* \"#utility.yul\":2687:2758   */\n      tag_93\n        /* \"#utility.yul\":2755:2756   */\n      0x00\n        /* \"#utility.yul\":2744:2753   */\n      dup4\n        /* \"#utility.yul\":2740:2757   */\n      add\n        /* \"#utility.yul\":2731:2737   */\n      dup5\n        /* \"#utility.yul\":2687:2758   */\n      tag_63\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2543:2765   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2771:2914   */\n    tag_64:\n        /* \"#utility.yul\":2828:2833   */\n      0x00\n        /* \"#utility.yul\":2859:2865   */\n      dup2\n        /* \"#utility.yul\":2853:2866   */\n      mload\n        /* \"#utility.yul\":2844:2866   */\n      swap1\n      pop\n        /* \"#utility.yul\":2875:2908   */\n      tag_95\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2875:2908   */\n      tag_56\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2771:2914   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2920:3271   */\n    tag_28:\n        /* \"#utility.yul\":2990:2996   */\n      0x00\n        /* \"#utility.yul\":3039:3041   */\n      0x20\n        /* \"#utility.yul\":3027:3036   */\n      dup3\n        /* \"#utility.yul\":3018:3025   */\n      dup5\n        /* \"#utility.yul\":3014:3037   */\n      sub\n        /* \"#utility.yul\":3010:3042   */\n      slt\n        /* \"#utility.yul\":3007:3126   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":3045:3124   */\n      tag_98\n      tag_53\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":3007:3126   */\n    tag_97:\n        /* \"#utility.yul\":3165:3166   */\n      0x00\n        /* \"#utility.yul\":3190:3254   */\n      tag_99\n        /* \"#utility.yul\":3246:3253   */\n      dup5\n        /* \"#utility.yul\":3237:3243   */\n      dup3\n        /* \"#utility.yul\":3226:3235   */\n      dup6\n        /* \"#utility.yul\":3222:3244   */\n      add\n        /* \"#utility.yul\":3190:3254   */\n      tag_64\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3180:3254   */\n      swap2\n      pop\n        /* \"#utility.yul\":3136:3264   */\n      pop\n        /* \"#utility.yul\":2920:3271   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3277:3457   */\n    tag_65:\n        /* \"#utility.yul\":3325:3402   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3322:3323   */\n      0x00\n        /* \"#utility.yul\":3315:3403   */\n      mstore\n        /* \"#utility.yul\":3422:3426   */\n      0x11\n        /* \"#utility.yul\":3419:3420   */\n      0x04\n        /* \"#utility.yul\":3412:3427   */\n      mstore\n        /* \"#utility.yul\":3446:3450   */\n      0x24\n        /* \"#utility.yul\":3443:3444   */\n      0x00\n        /* \"#utility.yul\":3436:3451   */\n      revert\n        /* \"#utility.yul\":3463:3768   */\n    tag_51:\n        /* \"#utility.yul\":3503:3506   */\n      0x00\n        /* \"#utility.yul\":3522:3542   */\n      tag_102\n        /* \"#utility.yul\":3540:3541   */\n      dup3\n        /* \"#utility.yul\":3522:3542   */\n      tag_55\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3517:3542   */\n      swap2\n      pop\n        /* \"#utility.yul\":3556:3576   */\n      tag_103\n        /* \"#utility.yul\":3574:3575   */\n      dup4\n        /* \"#utility.yul\":3556:3576   */\n      tag_55\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":3551:3576   */\n      swap3\n      pop\n        /* \"#utility.yul\":3710:3711   */\n      dup3\n        /* \"#utility.yul\":3642:3708   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3638:3712   */\n      sub\n        /* \"#utility.yul\":3635:3636   */\n      dup3\n        /* \"#utility.yul\":3632:3713   */\n      gt\n        /* \"#utility.yul\":3629:3736   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":3716:3734   */\n      tag_105\n      tag_65\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3629:3736   */\n    tag_104:\n        /* \"#utility.yul\":3760:3761   */\n      dup3\n        /* \"#utility.yul\":3757:3758   */\n      dup3\n        /* \"#utility.yul\":3753:3762   */\n      add\n        /* \"#utility.yul\":3746:3762   */\n      swap1\n      pop\n        /* \"#utility.yul\":3463:3768   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122061b1b2a5c655502643617b768c0123626afec7247a26ed5872c163dfd7d0464364736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_418": {
									"entryPoint": null,
									"id": 418,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273b1cd8ad16899318da9f0a2c9933d599eb9cdc10c6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739149a8cb21f2702fcb1076f0964a17d45b5efa85600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073b1cd8ad16899318da9f0a2c9933d599eb9cdc10c600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561010e57600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550692a5a058fc295ed000000600481905550606460068190555066b1a2bc2ec50000600781905550610625806101866000396000f3fe6080604052600436106100345760003560e01c806327ea6f2b14610039578063a989259114610062578063d49f0fa51461006c575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610422565b610095565b005b61006a61012f565b005b34801561007857600080fd5b50610093600480360381019061008e9190610422565b6102a8565b005b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610125576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011c906104ac565b60405180910390fd5b8060068190555050565b60075434101561013e57600080fd5b60045460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161019a919061050d565b602060405180830381865afa1580156101b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101db919061053d565b106101ed576101e8610342565b610223565b60065460055411156101fe57600080fd5b610206610342565b61021c60016005546103d190919063ffffffff16565b6005819055505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342f6487a346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561028d57600080fd5b505af11580156102a1573d6000803e3d6000fd5b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610338576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032f906104ac565b60405180910390fd5b8060078190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340d097c3336040518263ffffffff1660e01b815260040161039d919061050d565b600060405180830381600087803b1580156103b757600080fd5b505af11580156103cb573d6000803e3d6000fd5b50505050565b600081836103df9190610599565b905092915050565b600080fd5b6000819050919050565b6103ff816103ec565b811461040a57600080fd5b50565b60008135905061041c816103f6565b92915050565b600060208284031215610438576104376103e7565b5b60006104468482850161040d565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061049660208361044f565b91506104a182610460565b602082019050919050565b600060208201905081810360008301526104c581610489565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104f7826104cc565b9050919050565b610507816104ec565b82525050565b600060208201905061052260008301846104fe565b92915050565b600081519050610537816103f6565b92915050565b600060208284031215610553576105526103e7565b5b600061056184828501610528565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105a4826103ec565b91506105af836103ec565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156105e4576105e361056a565b5b82820190509291505056fea264697066735822122061b1b2a5c655502643617b768c0123626afec7247a26ed5872c163dfd7d0464364736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xB1CD8AD16899318DA9F0A2C9933D599EB9CDC10C PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x9149A8CB21F2702FCB1076F0964A17D45B5EFA85 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xB1CD8AD16899318DA9F0A2C9933D599EB9CDC10C PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH10 0x2A5A058FC295ED000000 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH7 0xB1A2BC2EC50000 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x625 DUP1 PUSH2 0x186 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27EA6F2B EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xA9892591 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xD49F0FA5 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x422 JUMP JUMPDEST PUSH2 0x95 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0x12F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x422 JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x125 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C SWAP1 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD CALLVALUE LT ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x50D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x53D JUMP JUMPDEST LT PUSH2 0x1ED JUMPI PUSH2 0x1E8 PUSH2 0x342 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD GT ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x206 PUSH2 0x342 JUMP JUMPDEST PUSH2 0x21C PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x3D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42F6487A CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x338 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32F SWAP1 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40D097C3 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x50D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x599 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FF DUP2 PUSH2 0x3EC JUMP JUMPDEST DUP2 EQ PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x41C DUP2 PUSH2 0x3F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x438 JUMPI PUSH2 0x437 PUSH2 0x3E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x446 DUP5 DUP3 DUP6 ADD PUSH2 0x40D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x496 PUSH1 0x20 DUP4 PUSH2 0x44F JUMP JUMPDEST SWAP2 POP PUSH2 0x4A1 DUP3 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C5 DUP2 PUSH2 0x489 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7 DUP3 PUSH2 0x4CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x507 DUP2 PUSH2 0x4EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x522 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x537 DUP2 PUSH2 0x3F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x553 JUMPI PUSH2 0x552 PUSH2 0x3E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x561 DUP5 DUP3 DUP6 ADD PUSH2 0x528 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5A4 DUP3 PUSH2 0x3EC JUMP JUMPDEST SWAP2 POP PUSH2 0x5AF DUP4 PUSH2 0x3EC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x5E4 JUMPI PUSH2 0x5E3 PUSH2 0x56A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xB1B2 0xA5 0xC6 SSTORE POP 0x26 NUMBER PUSH2 0x7B76 DUP13 ADD 0x23 PUSH3 0x6AFEC7 0x24 PUSH27 0x26ED5872C163DFD7D0464364736F6C634300080D00330000000000 ",
							"sourceMap": "7461:1417:0:-:0;;;7543:42;7523:63;;;;;;;;;;;;;;;;;;;;7617:42;7593:67;;;;;;;;;;;;;;;;;;;;7699:42;7667:75;;;;;;;;;;;;;;;;;;;;7993:145;;;;;;;;;;8025:10;8017:5;;:18;;;;;;;;;;;;;;;;;;8059:9;8047;:21;;;;8093:3;8081:9;:15;;;;8119:4;8107:9;:16;;;;7461:1417;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@SafeMint_466": {
									"entryPoint": 303,
									"id": 466,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_175": {
									"entryPoint": 977,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_477": {
									"entryPoint": 834,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setLimit_489": {
									"entryPoint": 149,
									"id": 489,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setprice_501": {
									"entryPoint": 680,
									"id": 501,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1386,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3771:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1121:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1138:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1143:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1131:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1131:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1131:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1159:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1178:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1183:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1174:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1174:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1159:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1093:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1098:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1109:11:1",
														"type": ""
													}
												],
												"src": "1025:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1306:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1328:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1336:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1324:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1324:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1340:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1317:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1317:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1317:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1298:6:1",
														"type": ""
													}
												],
												"src": "1200:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1534:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1544:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1610:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1615:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1551:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1551:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1716:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "1627:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1627:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1627:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1729:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1740:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1745:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1736:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1736:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1729:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1522:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1530:3:1",
														"type": ""
													}
												],
												"src": "1388:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1931:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1941:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1953:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1949:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1941:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1988:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1999:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1984:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2007:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2013:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2003:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2003:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1977:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1977:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2033:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2167:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2041:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2041:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2033:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1911:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1926:4:1",
														"type": ""
													}
												],
												"src": "1760:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2230:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2240:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2255:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2262:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2251:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2251:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2240:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2212:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2222:7:1",
														"type": ""
													}
												],
												"src": "2185:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2362:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2372:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2401:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2383:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2383:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2372:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2344:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2354:7:1",
														"type": ""
													}
												],
												"src": "2317:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2484:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2501:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2524:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2506:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2506:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2494:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2472:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2479:3:1",
														"type": ""
													}
												],
												"src": "2419:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2641:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2651:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2663:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2674:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2659:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2659:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2651:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2731:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2744:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2755:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2740:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2740:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2687:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2687:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2687:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2613:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2625:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2636:4:1",
														"type": ""
													}
												],
												"src": "2543:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2834:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2844:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2859:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2853:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2853:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2844:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2902:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2875:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2875:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2875:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2812:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2820:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2828:5:1",
														"type": ""
													}
												],
												"src": "2771:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2997:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3045:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3018:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3027:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3014:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3014:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3039:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3010:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3010:32:1"
															},
															"nodeType": "YulIf",
															"src": "3007:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3136:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3151:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3165:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3155:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3180:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3226:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3237:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3222:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3246:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3190:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3190:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3180:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2967:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2978:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2990:6:1",
														"type": ""
													}
												],
												"src": "2920:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3305:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3322:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3325:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3315:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3315:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3315:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3419:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3422:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3412:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3412:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3412:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3443:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3446:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3436:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3436:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3436:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3277:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3507:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3517:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3540:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3522:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3522:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3517:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3551:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3574:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3556:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3556:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3551:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3714:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3716:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3716:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3716:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3635:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3642:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3710:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3638:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3632:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3632:81:1"
															},
															"nodeType": "YulIf",
															"src": "3629:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3746:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3757:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3760:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3753:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3753:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3746:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3494:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3497:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3503:3:1",
														"type": ""
													}
												],
												"src": "3463:305:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c806327ea6f2b14610039578063a989259114610062578063d49f0fa51461006c575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610422565b610095565b005b61006a61012f565b005b34801561007857600080fd5b50610093600480360381019061008e9190610422565b6102a8565b005b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610125576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011c906104ac565b60405180910390fd5b8060068190555050565b60075434101561013e57600080fd5b60045460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161019a919061050d565b602060405180830381865afa1580156101b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101db919061053d565b106101ed576101e8610342565b610223565b60065460055411156101fe57600080fd5b610206610342565b61021c60016005546103d190919063ffffffff16565b6005819055505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342f6487a346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561028d57600080fd5b505af11580156102a1573d6000803e3d6000fd5b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610338576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032f906104ac565b60405180910390fd5b8060078190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340d097c3336040518263ffffffff1660e01b815260040161039d919061050d565b600060405180830381600087803b1580156103b757600080fd5b505af11580156103cb573d6000803e3d6000fd5b50505050565b600081836103df9190610599565b905092915050565b600080fd5b6000819050919050565b6103ff816103ec565b811461040a57600080fd5b50565b60008135905061041c816103f6565b92915050565b600060208284031215610438576104376103e7565b5b60006104468482850161040d565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061049660208361044f565b91506104a182610460565b602082019050919050565b600060208201905081810360008301526104c581610489565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104f7826104cc565b9050919050565b610507816104ec565b82525050565b600060208201905061052260008301846104fe565b92915050565b600081519050610537816103f6565b92915050565b600060208284031215610553576105526103e7565b5b600061056184828501610528565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105a4826103ec565b91506105af836103ec565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156105e4576105e361056a565b5b82820190509291505056fea264697066735822122061b1b2a5c655502643617b768c0123626afec7247a26ed5872c163dfd7d0464364736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27EA6F2B EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xA9892591 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xD49F0FA5 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x422 JUMP JUMPDEST PUSH2 0x95 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0x12F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x422 JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x125 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C SWAP1 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD CALLVALUE LT ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x50D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x53D JUMP JUMPDEST LT PUSH2 0x1ED JUMPI PUSH2 0x1E8 PUSH2 0x342 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD GT ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x206 PUSH2 0x342 JUMP JUMPDEST PUSH2 0x21C PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x3D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42F6487A CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x338 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32F SWAP1 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40D097C3 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x50D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x599 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FF DUP2 PUSH2 0x3EC JUMP JUMPDEST DUP2 EQ PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x41C DUP2 PUSH2 0x3F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x438 JUMPI PUSH2 0x437 PUSH2 0x3E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x446 DUP5 DUP3 DUP6 ADD PUSH2 0x40D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x496 PUSH1 0x20 DUP4 PUSH2 0x44F JUMP JUMPDEST SWAP2 POP PUSH2 0x4A1 DUP3 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C5 DUP2 PUSH2 0x489 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7 DUP3 PUSH2 0x4CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x507 DUP2 PUSH2 0x4EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x522 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x537 DUP2 PUSH2 0x3F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x553 JUMPI PUSH2 0x552 PUSH2 0x3E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x561 DUP5 DUP3 DUP6 ADD PUSH2 0x528 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5A4 DUP3 PUSH2 0x3EC JUMP JUMPDEST SWAP2 POP PUSH2 0x5AF DUP4 PUSH2 0x3EC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x5E4 JUMPI PUSH2 0x5E3 PUSH2 0x56A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xB1B2 0xA5 0xC6 SSTORE POP 0x26 NUMBER PUSH2 0x7B76 DUP13 ADD 0x23 PUSH3 0x6AFEC7 0x24 PUSH27 0x26ED5872C163DFD7D0464364736F6C634300080D00330000000000 ",
							"sourceMap": "7461:1417:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8682:87;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8148:381;;;:::i;:::-;;8777:85;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8682:87;7916:10;7907:19;;:5;;;;;;;;;;;:19;;;7899:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;8754:7:::1;8742:9;:19;;;;8682:87:::0;:::o;8148:381::-;8215:9;;8202;:22;;8194:31;;;;;;8268:9;;8239:3;;;;;;;;;;:13;;;8253:10;8239:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;8236:225;;8293:6;:4;:6::i;:::-;8236:225;;;8367:9;;8350:13;;:26;;8342:35;;;;;;8392:6;:4;:6::i;:::-;8429:20;8447:1;8429:13;;:17;;:20;;;;:::i;:::-;8413:13;:36;;;;8236:225;8481:8;;;;;;;;;;;:16;;;8505:9;8481:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8148:381::o;8777:85::-;7916:10;7907:19;;:5;;;;;;;;;;;:19;;;7899:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;8848:6:::1;8836:9;:18;;;;8777:85:::0;:::o;8543:78::-;8585:7;;;;;;;;;;;:16;;;8602:10;8585:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8543:78::o;2773:98::-;2831:7;2862:1;2858;:5;;;;:::i;:::-;2851:12;;2773:98;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:169::-;1109:11;1143:6;1138:3;1131:19;1183:4;1178:3;1174:14;1159:29;;1025:169;;;;:::o;1200:182::-;1340:34;1336:1;1328:6;1324:14;1317:58;1200:182;:::o;1388:366::-;1530:3;1551:67;1615:2;1610:3;1551:67;:::i;:::-;1544:74;;1627:93;1716:3;1627:93;:::i;:::-;1745:2;1740:3;1736:12;1729:19;;1388:366;;;:::o;1760:419::-;1926:4;1964:2;1953:9;1949:18;1941:26;;2013:9;2007:4;2003:20;1999:1;1988:9;1984:17;1977:47;2041:131;2167:4;2041:131;:::i;:::-;2033:139;;1760:419;;;:::o;2185:126::-;2222:7;2262:42;2255:5;2251:54;2240:65;;2185:126;;;:::o;2317:96::-;2354:7;2383:24;2401:5;2383:24;:::i;:::-;2372:35;;2317:96;;;:::o;2419:118::-;2506:24;2524:5;2506:24;:::i;:::-;2501:3;2494:37;2419:118;;:::o;2543:222::-;2636:4;2674:2;2663:9;2659:18;2651:26;;2687:71;2755:1;2744:9;2740:17;2731:6;2687:71;:::i;:::-;2543:222;;;;:::o;2771:143::-;2828:5;2859:6;2853:13;2844:22;;2875:33;2902:5;2875:33;:::i;:::-;2771:143;;;;:::o;2920:351::-;2990:6;3039:2;3027:9;3018:7;3014:23;3010:32;3007:119;;;3045:79;;:::i;:::-;3007:119;3165:1;3190:64;3246:7;3237:6;3226:9;3222:22;3190:64;:::i;:::-;3180:74;;3136:128;2920:351;;;;:::o;3277:180::-;3325:77;3322:1;3315:88;3422:4;3419:1;3412:15;3446:4;3443:1;3436:15;3463:305;3503:3;3522:20;3540:1;3522:20;:::i;:::-;3517:25;;3556:20;3574:1;3556:20;:::i;:::-;3551:25;;3710:1;3642:66;3638:74;3635:1;3632:81;3629:107;;;3716:18;;:::i;:::-;3629:107;3760:1;3757;3753:9;3746:16;;3463:305;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "314600",
								"executionCost": "163764",
								"totalCost": "478364"
							},
							"external": {
								"SafeMint()": "infinite",
								"setLimit(uint256)": "24668",
								"setprice(uint256)": "24712"
							},
							"internal": {
								"mint()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7461,
									"end": 8878,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 7461,
									"end": 8878,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7461,
									"end": 8878,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7543,
									"end": 7585,
									"name": "PUSH",
									"source": 0,
									"value": "B1CD8AD16899318DA9F0A2C9933D599EB9CDC10C"
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7523,
									"end": 7586,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7617,
									"end": 7659,
									"name": "PUSH",
									"source": 0,
									"value": "9149A8CB21F2702FCB1076F0964A17D45B5EFA85"
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7593,
									"end": 7660,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7699,
									"end": 7741,
									"name": "PUSH",
									"source": 0,
									"value": "B1CD8AD16899318DA9F0A2C9933D599EB9CDC10C"
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7667,
									"end": 7742,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7993,
									"end": 8138,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 7993,
									"end": 8138,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7993,
									"end": 8138,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7993,
									"end": 8138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7993,
									"end": 8138,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7993,
									"end": 8138,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7993,
									"end": 8138,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7993,
									"end": 8138,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7993,
									"end": 8138,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7993,
									"end": 8138,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7993,
									"end": 8138,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8025,
									"end": 8035,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 8017,
									"end": 8022,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 8017,
									"end": 8022,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8017,
									"end": 8035,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8017,
									"end": 8035,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8017,
									"end": 8035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8017,
									"end": 8035,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8017,
									"end": 8035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8017,
									"end": 8035,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8017,
									"end": 8035,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8017,
									"end": 8035,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8017,
									"end": 8035,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8017,
									"end": 8035,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8017,
									"end": 8035,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8017,
									"end": 8035,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8017,
									"end": 8035,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8017,
									"end": 8035,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8017,
									"end": 8035,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8017,
									"end": 8035,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8017,
									"end": 8035,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8017,
									"end": 8035,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8068,
									"name": "PUSH",
									"source": 0,
									"value": "2A5A058FC295ED000000"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8047,
									"end": 8068,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8047,
									"end": 8068,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8047,
									"end": 8068,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8047,
									"end": 8068,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8093,
									"end": 8096,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 8081,
									"end": 8090,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 8081,
									"end": 8096,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8081,
									"end": 8096,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8081,
									"end": 8096,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8081,
									"end": 8096,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 8123,
									"name": "PUSH",
									"source": 0,
									"value": "B1A2BC2EC50000"
								},
								{
									"begin": 8107,
									"end": 8116,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8107,
									"end": 8123,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8107,
									"end": 8123,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8107,
									"end": 8123,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8107,
									"end": 8123,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7461,
									"end": 8878,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7461,
									"end": 8878,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7461,
									"end": 8878,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7461,
									"end": 8878,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7461,
									"end": 8878,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7461,
									"end": 8878,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7461,
									"end": 8878,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061b1b2a5c655502643617b768c0123626afec7247a26ed5872c163dfd7d0464364736f6c634300080d0033",
									".code": [
										{
											"begin": 7461,
											"end": 8878,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "PUSH",
											"source": 0,
											"value": "27EA6F2B"
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "PUSH",
											"source": 0,
											"value": "A9892591"
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "PUSH",
											"source": 0,
											"value": "D49F0FA5"
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 8878,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8148,
											"end": 8529,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8148,
											"end": 8529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8148,
											"end": 8529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8148,
											"end": 8529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 8148,
											"end": 8529,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8148,
											"end": 8529,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8148,
											"end": 8529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8148,
											"end": 8529,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7916,
											"end": 7926,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7926,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7907,
											"end": 7926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7926,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7907,
											"end": 7926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7926,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8754,
											"end": 8761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8742,
											"end": 8751,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8742,
											"end": 8761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8742,
											"end": 8761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8742,
											"end": 8761,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8742,
											"end": 8761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8148,
											"end": 8529,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 8148,
											"end": 8529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8215,
											"end": 8224,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8215,
											"end": 8224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8211,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8224,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8224,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8194,
											"end": 8225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8194,
											"end": 8225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8194,
											"end": 8225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8194,
											"end": 8225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8194,
											"end": 8225,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8194,
											"end": 8225,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8194,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8268,
											"end": 8277,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8268,
											"end": 8277,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8239,
											"end": 8242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8242,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8242,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8239,
											"end": 8242,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8242,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8242,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8239,
											"end": 8242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8252,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8239,
											"end": 8252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8252,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8253,
											"end": 8263,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8239,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8277,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8236,
											"end": 8461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8293,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8293,
											"end": 8299,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8293,
											"end": 8299,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8293,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8236,
											"end": 8461,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8461,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8236,
											"end": 8461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8367,
											"end": 8376,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8367,
											"end": 8376,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8350,
											"end": 8363,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8350,
											"end": 8363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8350,
											"end": 8376,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8350,
											"end": 8376,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8392,
											"end": 8398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 8392,
											"end": 8396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8392,
											"end": 8398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8392,
											"end": 8398,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 8392,
											"end": 8398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8447,
											"end": 8448,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8429,
											"end": 8442,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8429,
											"end": 8442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8429,
											"end": 8446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8449,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8429,
											"end": 8449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8429,
											"end": 8449,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8429,
											"end": 8449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8426,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8413,
											"end": 8449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8449,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8461,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8236,
											"end": 8461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8489,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8481,
											"end": 8489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8489,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8481,
											"end": 8489,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8489,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8489,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8481,
											"end": 8489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8481,
											"end": 8497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8497,
											"name": "PUSH",
											"source": 0,
											"value": "42F6487A"
										},
										{
											"begin": 8505,
											"end": 8514,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8481,
											"end": 8517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8148,
											"end": 8529,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7916,
											"end": 7926,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7926,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7907,
											"end": 7926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7926,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7907,
											"end": 7926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7926,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 7899,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8848,
											"end": 8854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8836,
											"end": 8845,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8836,
											"end": 8854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8836,
											"end": 8854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8836,
											"end": 8854,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8836,
											"end": 8854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8777,
											"end": 8862,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8543,
											"end": 8621,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8543,
											"end": 8621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8592,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8585,
											"end": 8592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8585,
											"end": 8592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8592,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8592,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8585,
											"end": 8592,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8592,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8585,
											"end": 8592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8585,
											"end": 8601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8601,
											"name": "PUSH",
											"source": 0,
											"value": "40D097C3"
										},
										{
											"begin": 8602,
											"end": 8612,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8585,
											"end": 8613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8543,
											"end": 8621,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2773,
											"end": 2871,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2773,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2862,
											"end": 2863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2859,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2871,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2871,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1025,
											"end": 1194,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1025,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1187,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1178,
											"end": 1181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1194,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1194,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1194,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1200,
											"end": 1382,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1200,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1340,
											"end": 1374,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1382,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1388,
											"end": 1754,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1388,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1551,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1615,
											"end": 1617,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1610,
											"end": 1613,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1551,
											"end": 1618,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1551,
											"end": 1618,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1551,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1716,
											"end": 1719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1627,
											"end": 1720,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1627,
											"end": 1720,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1627,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1740,
											"end": 1743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 1754,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 1754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 1754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 1754,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1760,
											"end": 2179,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1760,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1953,
											"end": 1962,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 1997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1984,
											"end": 2001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2167,
											"end": 2171,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2172,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2041,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2041,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 2179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 2179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 2179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 2179,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2185,
											"end": 2311,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2185,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2304,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2255,
											"end": 2260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2251,
											"end": 2305,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2311,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2317,
											"end": 2413,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2317,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2401,
											"end": 2406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2383,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2383,
											"end": 2407,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2383,
											"end": 2407,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2383,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2413,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2419,
											"end": 2537,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2419,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2524,
											"end": 2529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2504,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2531,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2537,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2543,
											"end": 2765,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2636,
											"end": 2640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2674,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2663,
											"end": 2672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2755,
											"end": 2756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2753,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2737,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2687,
											"end": 2758,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2687,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2687,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2765,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2765,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2765,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2771,
											"end": 2914,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2771,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2875,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2875,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2875,
											"end": 2908,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2875,
											"end": 2908,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2875,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2914,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2914,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2920,
											"end": 3271,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2920,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 2996,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3041,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3027,
											"end": 3036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3018,
											"end": 3025,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3037,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3042,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3126,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3007,
											"end": 3126,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3045,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3045,
											"end": 3124,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3045,
											"end": 3124,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3045,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3126,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3007,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3246,
											"end": 3253,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3237,
											"end": 3243,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3235,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3190,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3190,
											"end": 3254,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3190,
											"end": 3254,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3190,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 3271,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 3271,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 3271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 3271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 3271,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3277,
											"end": 3457,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3277,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3402,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3322,
											"end": 3323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3422,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3419,
											"end": 3420,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3412,
											"end": 3427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3450,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3443,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3451,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3768,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3463,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3522,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3540,
											"end": 3541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3522,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3522,
											"end": 3542,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3522,
											"end": 3542,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3522,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3574,
											"end": 3575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3576,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3708,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3712,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3635,
											"end": 3636,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3632,
											"end": 3713,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3736,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3629,
											"end": 3736,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3736,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3629,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3761,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3768,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3768,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3768,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"SafeMint()": "a9892591",
							"setLimit(uint256)": "27ea6f2b",
							"setprice(uint256)": "d49f0fa5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"SafeMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"}],\"name\":\"setLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setprice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DcofferCreator.sol\":\"DcofferCreator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DcofferCreator.sol\":{\"keccak256\":\"0xe4092472cfa95fdfebedea5e8f0b908371b78cf48d19a7cab4b654fbc45cc634\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64ff92d12b14306c7a7d70ffc961b565cc8814b598616e4863bb7306fb65ea72\",\"dweb:/ipfs/QmZqxqcvYaEBKTqsV7Wojo3sJa1F9dF9xtsai6hydMyTCa\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IER721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"safeMint(address)": "40d097c3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DcofferCreator.sol\":\"IER721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DcofferCreator.sol\":{\"keccak256\":\"0xe4092472cfa95fdfebedea5e8f0b908371b78cf48d19a7cab4b654fbc45cc634\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64ff92d12b14306c7a7d70ffc961b565cc8814b598616e4863bb7306fb65ea72\",\"dweb:/ipfs/QmZqxqcvYaEBKTqsV7Wojo3sJa1F9dF9xtsai6hydMyTCa\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DcofferCreator.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DcofferCreator.sol\":{\"keccak256\":\"0xe4092472cfa95fdfebedea5e8f0b908371b78cf48d19a7cab4b654fbc45cc634\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64ff92d12b14306c7a7d70ffc961b565cc8814b598616e4863bb7306fb65ea72\",\"dweb:/ipfs/QmZqxqcvYaEBKTqsV7Wojo3sJa1F9dF9xtsai6hydMyTCa\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ITreasury": {
					"abi": [
						{
							"inputs": [],
							"name": "payment",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"payment()": "42f6487a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"payment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DcofferCreator.sol\":\"ITreasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DcofferCreator.sol\":{\"keccak256\":\"0xe4092472cfa95fdfebedea5e8f0b908371b78cf48d19a7cab4b654fbc45cc634\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64ff92d12b14306c7a7d70ffc961b565cc8814b598616e4863bb7306fb65ea72\",\"dweb:/ipfs/QmZqxqcvYaEBKTqsV7Wojo3sJa1F9dF9xtsai6hydMyTCa\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DcofferCreator.sol\":422:6934  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"DcofferCreator.sol\":422:6934  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b3bdd8bf8dd64c25c019c0cfdece8e052968681b2b67ac56b3256ab7f61dc28164736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b3bdd8bf8dd64c25c019c0cfdece8e052968681b2b67ac56b3256ab7f61dc28164736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xBD 0xD8 0xBF DUP14 0xD6 0x4C 0x25 0xC0 NOT 0xC0 0xCF 0xDE 0xCE DUP15 SDIV 0x29 PUSH9 0x681B2B67AC56B3256A 0xB7 0xF6 SAR 0xC2 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "422:6512:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b3bdd8bf8dd64c25c019c0cfdece8e052968681b2b67ac56b3256ab7f61dc28164736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xBD 0xD8 0xBF DUP14 0xD6 0x4C 0x25 0xC0 NOT 0xC0 0xCF 0xDE 0xCE DUP15 SDIV 0x29 PUSH9 0x681B2B67AC56B3256A 0xB7 0xF6 SAR 0xC2 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "422:6512:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b3bdd8bf8dd64c25c019c0cfdece8e052968681b2b67ac56b3256ab7f61dc28164736f6c634300080d0033",
									".code": [
										{
											"begin": 422,
											"end": 6934,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 422,
											"end": 6934,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 422,
											"end": 6934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 422,
											"end": 6934,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 422,
											"end": 6934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 6934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 422,
											"end": 6934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 6934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 6934,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DcofferCreator.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"DcofferCreator.sol\":{\"keccak256\":\"0xe4092472cfa95fdfebedea5e8f0b908371b78cf48d19a7cab4b654fbc45cc634\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64ff92d12b14306c7a7d70ffc961b565cc8814b598616e4863bb7306fb65ea72\",\"dweb:/ipfs/QmZqxqcvYaEBKTqsV7Wojo3sJa1F9dF9xtsai6hydMyTCa\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"DcofferCreator.sol": {
				"ast": {
					"absolutePath": "DcofferCreator.sol",
					"exportedSymbols": {
						"DcofferCreator": [
							502
						],
						"IER721": [
							350
						],
						"IERC20": [
							344
						],
						"ITreasury": [
							354
						],
						"SafeMath": [
							311
						]
					},
					"id": 503,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "219:201:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "430:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "663:146:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "674:128:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "707:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "699:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "699:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "711:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "715:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "711:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "699:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "735:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "739:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "735:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "731:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "750:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "757:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "749:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "742:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "782:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "788:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "781:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "774:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "446:135:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "596:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "611:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "603:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "622:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "614:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "602:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "648:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "648:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "654:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:15:0"
									},
									"scope": 311,
									"src": "587:222:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1038:118:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1049:100:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1078:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1082:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1078:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1074:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1093:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1100:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1092:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1085:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1125:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1135:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1124:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1117:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "817:139:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "971:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "986:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "978:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "997:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "989:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "977:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1023:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1023:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1022:15:0"
									},
									"scope": 311,
									"src": "962:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1387:427:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1398:409:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1660:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1665:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1660:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1656:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1682:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1675:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1668:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1707:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1699:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1699:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1711:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1715:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1711:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1699:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1735:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1739:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1735:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1735:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1731:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1755:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1754:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1747:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1787:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1793:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1786:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1779:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1164:141:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1320:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1335:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1327:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1346:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1338:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1326:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1372:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1372:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1378:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1371:15:0"
									},
									"scope": 311,
									"src": "1311:503:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2046:119:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2057:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2091:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2086:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2082:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2102:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2109:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2101:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2094:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2134:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2140:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2144:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2140:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2133:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2126:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1822:142:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1979:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1985:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2031:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2031:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2037:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:15:0"
									},
									"scope": 311,
									"src": "1970:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2407:119:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2418:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2447:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2452:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2447:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2443:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2463:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2470:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2462:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2455:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2495:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2505:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2501:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2494:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2487:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2173:152:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2340:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2355:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2347:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2366:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2358:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2392:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2392:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2398:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2391:15:0"
									},
									"scope": 311,
									"src": "2331:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2840:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2858:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2862:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2851:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2534:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2782:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2794:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2786:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2805:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2797:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2785:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2831:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2830:9:0"
									},
									"scope": 311,
									"src": "2773:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3221:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3239:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3243:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3239:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3232:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2879:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3163:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3175:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3167:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3186:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3178:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3166:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3212:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3211:9:0"
									},
									"scope": 311,
									"src": "3154:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3578:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3596:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3600:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3596:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3589:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3260:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3520:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3532:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3524:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3543:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3535:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3523:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3569:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3568:9:0"
									},
									"scope": 311,
									"src": "3511:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3977:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3995:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3999:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3995:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3988:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3617:287:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3919:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3931:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3923:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3923:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3942:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3934:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3934:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3922:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3968:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3967:9:0"
									},
									"scope": 311,
									"src": "3910:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4542:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4560:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4564:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4560:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4553:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "4016:453:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4484:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4496:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4488:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4507:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4499:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4533:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4532:9:0"
									},
									"scope": 311,
									"src": "4475:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5181:111:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5192:93:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5225:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5230:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5225:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5233:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5217:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5217:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5217:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5268:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5272:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5268:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5261:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4581:465:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5061:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5083:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5103:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5095:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5095:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5129:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5115:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5064:84:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5172:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5171:9:0"
									},
									"scope": 311,
									"src": "5052:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5919:110:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5930:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5963:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5967:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5963:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5970:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5955:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5955:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5955:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "6005:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "6009:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6005:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5998:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5300:484:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5799:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5821:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5813:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5841:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5833:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5867:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5853:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5853:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5802:84:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5910:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5909:9:0"
									},
									"scope": 311,
									"src": "5790:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6821:110:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6832:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6865:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6869:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6865:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6872:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6857:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6857:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6857:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6907:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6911:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6907:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6900:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "6037:649:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6701:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6743:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6735:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6769:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6755:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6755:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6704:84:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6812:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6812:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6811:9:0"
									},
									"scope": 311,
									"src": "6692:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 503,
							"src": "422:6512:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 344,
							"linearizedBaseContracts": [
								344
							],
							"name": "IERC20",
							"nameLocation": "6952:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6979:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6990:2:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "7016:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7015:9:0"
									},
									"scope": 344,
									"src": "6970:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7040:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7058:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "7050:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7050:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7049:17:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "7090:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7089:9:0"
									},
									"scope": 344,
									"src": "7031:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "7114:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7131:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "7123:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7143:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "7135:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7122:28:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "7169:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 329,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7169:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7168:6:0"
									},
									"scope": 344,
									"src": "7105:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "7192:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7223:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "7215:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7215:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7246:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "7238:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7238:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7267:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "7259:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7259:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7204:76:0"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "7299:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7299:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7298:6:0"
									},
									"scope": 344,
									"src": "7183:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 503,
							"src": "6942:368:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IER721",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 350,
							"linearizedBaseContracts": [
								350
							],
							"name": "IER721",
							"nameLocation": "7326:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40d097c3",
									"id": 349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "7348:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7365:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "7357:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7357:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7356:12:0"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7377:0:0"
									},
									"scope": 350,
									"src": "7339:39:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 503,
							"src": "7316:65:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITreasury",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 354,
							"linearizedBaseContracts": [
								354
							],
							"name": "ITreasury",
							"nameLocation": "7397:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "42f6487a",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "payment",
									"nameLocation": "7422:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7429:2:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7447:0:0"
									},
									"scope": 354,
									"src": "7413:35:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 503,
							"src": "7387:64:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DcofferCreator",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 502,
							"linearizedBaseContracts": [
								502
							],
							"name": "DcofferCreator",
							"nameLocation": "7470:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 357,
									"libraryName": {
										"id": 355,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "7497:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "7491:24:0",
									"typeName": {
										"id": 356,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7510:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "dcf",
									"nameLocation": "7530:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 502,
									"src": "7523:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$344",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 359,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 358,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 344,
											"src": "7523:6:0"
										},
										"referencedDeclaration": 344,
										"src": "7523:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$344",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307842314364386164313638393933313844413946304132633939333364353939654239636443313063",
												"id": 361,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7543:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xB1Cd8ad16899318DA9F0A2c9933d599eB9cdC10c"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 360,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 344,
											"src": "7536:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$344_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 362,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7536:50:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$344",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 369,
									"mutability": "mutable",
									"name": "dcoffer",
									"nameLocation": "7600:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 502,
									"src": "7593:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IER721_$350",
										"typeString": "contract IER721"
									},
									"typeName": {
										"id": 365,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 364,
											"name": "IER721",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 350,
											"src": "7593:6:0"
										},
										"referencedDeclaration": 350,
										"src": "7593:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IER721_$350",
											"typeString": "contract IER721"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307839313439413843623231663237303266436231303736663039363441313764343542354546613835",
												"id": 367,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7617:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x9149A8Cb21f2702fCb1076f0964A17d45B5EFa85"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 366,
											"name": "IER721",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 350,
											"src": "7610:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IER721_$350_$",
												"typeString": "type(contract IER721)"
											}
										},
										"id": 368,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7610:50:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IER721_$350",
											"typeString": "contract IER721"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 375,
									"mutability": "mutable",
									"name": "treasury",
									"nameLocation": "7677:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 502,
									"src": "7667:75:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITreasury_$354",
										"typeString": "contract ITreasury"
									},
									"typeName": {
										"id": 371,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 370,
											"name": "ITreasury",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 354,
											"src": "7667:9:0"
										},
										"referencedDeclaration": 354,
										"src": "7667:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITreasury_$354",
											"typeString": "contract ITreasury"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307842314364386164313638393933313844413946304132633939333364353939654239636443313063",
												"id": 373,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7699:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xB1Cd8ad16899318DA9F0A2c9933d599eB9cdC10c"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 372,
											"name": "ITreasury",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 354,
											"src": "7689:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_ITreasury_$354_$",
												"typeString": "type(contract ITreasury)"
											}
										},
										"id": 374,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7689:53:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITreasury_$354",
											"typeString": "contract ITreasury"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 377,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "7759:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 502,
									"src": "7751:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 376,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7751:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 379,
									"mutability": "mutable",
									"name": "WhiteList",
									"nameLocation": "7776:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 502,
									"src": "7771:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 378,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7771:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 381,
									"mutability": "mutable",
									"name": "currentSupply",
									"nameLocation": "7797:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 502,
									"src": "7792:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 380,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7792:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 383,
									"mutability": "mutable",
									"name": "mintLimit",
									"nameLocation": "7822:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 502,
									"src": "7817:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 382,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7817:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 385,
									"mutability": "mutable",
									"name": "mintPrice",
									"nameLocation": "7843:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 502,
									"src": "7838:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 384,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7838:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "7888:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 388,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "7907:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 389,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7916:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7916:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7907:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7928:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7899:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7899:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "7899:64:0"
											},
											{
												"id": 395,
												"nodeType": "PlaceholderStatement",
												"src": "7974:1:0"
											}
										]
									},
									"id": 397,
									"name": "onlyOwner",
									"nameLocation": "7876:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7885:2:0"
									},
									"src": "7867:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "8006:132:0",
										"statements": [
											{
												"expression": {
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 400,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "8017:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 401,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8025:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8025:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8017:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "8017:18:0"
											},
											{
												"expression": {
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 405,
														"name": "WhiteList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "8047:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323030303030653138",
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8059:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200000000000000000000000_by_1",
															"typeString": "int_const 200000000000000000000000"
														},
														"value": "200000e18"
													},
													"src": "8047:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "8047:21:0"
											},
											{
												"expression": {
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 409,
														"name": "mintLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "8081:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8093:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "8081:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "8081:15:0"
											},
											{
												"expression": {
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 413,
														"name": "mintPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "8107:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35653136",
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8119:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50000000000000000_by_1",
															"typeString": "int_const 50000000000000000"
														},
														"value": "5e16"
													},
													"src": "8107:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "8107:16:0"
											}
										]
									},
									"id": 418,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8004:2:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8006:0:0"
									},
									"scope": 502,
									"src": "7993:145:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "8183:346:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 422,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8202:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "8202:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 424,
																"name": "mintPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "8215:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8202:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8194:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8194:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "8194:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 430,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8253:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8253:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 428,
																"name": "dcf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "8239:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$344",
																	"typeString": "contract IERC20"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 323,
															"src": "8239:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8239:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 433,
														"name": "WhiteList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "8268:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8239:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 455,
													"nodeType": "Block",
													"src": "8327:134:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 440,
																			"name": "currentSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 381,
																			"src": "8350:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 441,
																			"name": "mintLimit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 383,
																			"src": "8367:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8350:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 439,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8342:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8342:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 444,
															"nodeType": "ExpressionStatement",
															"src": "8342:35:0"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 445,
																	"name": "mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "8392:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8392:6:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 447,
															"nodeType": "ExpressionStatement",
															"src": "8392:6:0"
														},
														{
															"expression": {
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 448,
																	"name": "currentSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "8413:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8447:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"id": 449,
																			"name": "currentSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 381,
																			"src": "8429:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 175,
																		"src": "8429:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8429:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8413:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 454,
															"nodeType": "ExpressionStatement",
															"src": "8413:36:0"
														}
													]
												},
												"id": 456,
												"nodeType": "IfStatement",
												"src": "8236:225:0",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "8278:45:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 435,
																	"name": "mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "8293:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8293:6:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "ExpressionStatement",
															"src": "8293:6:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 457,
																"name": "treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "8481:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITreasury_$354",
																	"typeString": "contract ITreasury"
																}
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "payment",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 353,
															"src": "8481:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 460,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8505:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "8505:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8481:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8481:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "8481:36:0"
											}
										]
									},
									"functionSelector": "a9892591",
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "SafeMint",
									"nameLocation": "8157:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8165:2:0"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8183:0:0"
									},
									"scope": 502,
									"src": "8148:381:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "8566:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 472,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8602:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8602:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 469,
															"name": "dcoffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "8585:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IER721_$350",
																"typeString": "contract IER721"
															}
														},
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeMint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 349,
														"src": "8585:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "8585:28:0"
											}
										]
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "8552:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8556:2:0"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8566:0:0"
									},
									"scope": 502,
									"src": "8543:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "8731:38:0",
										"statements": [
											{
												"expression": {
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 484,
														"name": "mintLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "8742:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 485,
														"name": "_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "8754:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8742:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "8742:19:0"
											}
										]
									},
									"functionSelector": "27ea6f2b",
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 482,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 481,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 397,
												"src": "8722:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8722:9:0"
										}
									],
									"name": "setLimit",
									"nameLocation": "8691:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "_supply",
												"nameLocation": "8705:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "8700:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8700:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8699:14:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8731:0:0"
									},
									"scope": 502,
									"src": "8682:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "8825:37:0",
										"statements": [
											{
												"expression": {
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 496,
														"name": "mintPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "8836:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 497,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "8848:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8836:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "8836:18:0"
											}
										]
									},
									"functionSelector": "d49f0fa5",
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 494,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 493,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 397,
												"src": "8816:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8816:9:0"
										}
									],
									"name": "setprice",
									"nameLocation": "8786:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "8800:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "8795:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8795:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:13:0"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8825:0:0"
									},
									"scope": 502,
									"src": "8777:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 503,
							"src": "7461:1417:0",
							"usedErrors": []
						}
					],
					"src": "35:8843:0"
				},
				"id": 0
			}
		}
	}
}