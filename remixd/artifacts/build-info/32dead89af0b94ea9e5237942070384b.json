{
	"id": "32dead89af0b94ea9e5237942070384b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"subscribe.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\n\r\ninterface IERC20 {   \r\n    function transfer(address to, uint256 amount) external returns (bool);   \r\n}\r\n\r\n\r\ncontract  RaiseFunds{\r\n    using SafeMath for uint;\r\n\r\n\r\n\r\n    modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    IERC20 dcf = IERC20(address(0xB1Cd8ad16899318DA9F0A2c9933d599eB9cdC10c));\r\n\r\n    uint price =  3000000000000;\r\n    address owner;\r\n\r\n    constructor(){\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function subscribe()external payable{\r\n        require(msg.value >= 1e16);\r\n        uint dcf_amount = uint(1e18).mul(msg.value).div(price);\r\n        dcf.transfer(msg.sender,dcf_amount);        \r\n    }\r\n\r\n\r\n    function SafeTrans()external{\r\n        require(msg.sender == owner);\r\n        payable(owner).transfer(address(this).balance);\r\n    }  \r\n\r\n\r\n    function ViewPrice()public view returns(uint){\r\n        return price;\r\n    } \r\n\r\n    function setPrice(uint _price)external onlyOwner{       \r\n        price = _price;\r\n    } \r\n\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"subscribe.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"subscribe.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"subscribe.sol\":{\"keccak256\":\"0x69362c0aeaae5cc2b05c4c6915bc05db309893d59fe66f2931aa571f524b99b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cdf03e860fe40b647e368b27c0a4df6f2ba1eb58ae46b7d3a78349e7e3bf8e2\",\"dweb:/ipfs/QmUfTb11sx4QQKLa6ShP4d9v6CvWy3PnpkJBhQwe6y2aWV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"RaiseFunds": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "SafeTrans",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ViewPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "subscribe",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"subscribe.sol\":7047:7966  contract  RaiseFunds{\r... */\n  mstore(0x40, 0x80)\n    /* \"subscribe.sol\":7262:7304  0xB1Cd8ad16899318DA9F0A2c9933d599eB9cdC10c */\n  0xb1cd8ad16899318da9f0a2c9933d599eb9cdc10c\n    /* \"subscribe.sol\":7234:7306  IERC20 dcf = IERC20(address(0xB1Cd8ad16899318DA9F0A2c9933d599eB9cdC10c)) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"subscribe.sol\":7329:7342  3000000000000 */\n  0x02ba7def3000\n    /* \"subscribe.sol\":7315:7342  uint price =  3000000000000 */\n  0x01\n  sstore\n    /* \"subscribe.sol\":7371:7421  constructor(){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"subscribe.sol\":7403:7413  msg.sender */\n  caller\n    /* \"subscribe.sol\":7395:7400  owner */\n  0x02\n  0x00\n    /* \"subscribe.sol\":7395:7413  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"subscribe.sol\":7047:7966  contract  RaiseFunds{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"subscribe.sol\":7047:7966  contract  RaiseFunds{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x72dc1cae\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x7a2b37b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8f449a05\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x91b7f5ed\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"subscribe.sol\":7639:7771  function SafeTrans()external{\r... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"subscribe.sol\":7783:7859  function ViewPrice()public view returns(uint){\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"subscribe.sol\":7429:7629  function subscribe()external payable{\r... */\n    tag_4:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"subscribe.sol\":7868:7956  function setPrice(uint _price)external onlyOwner{       \r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"subscribe.sol\":7639:7771  function SafeTrans()external{\r... */\n    tag_8:\n        /* \"subscribe.sol\":7700:7705  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"subscribe.sol\":7686:7705  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"subscribe.sol\":7686:7696  msg.sender */\n      caller\n        /* \"subscribe.sol\":7686:7705  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"subscribe.sol\":7678:7706  require(msg.sender == owner) */\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n        /* \"subscribe.sol\":7725:7730  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"subscribe.sol\":7717:7740  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"subscribe.sol\":7717:7763  payable(owner).transfer(address(this).balance) */\n      0x08fc\n        /* \"subscribe.sol\":7741:7762  address(this).balance */\n      selfbalance\n        /* \"subscribe.sol\":7717:7763  payable(owner).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n        /* \"subscribe.sol\":7639:7771  function SafeTrans()external{\r... */\n      jump\t// out\n        /* \"subscribe.sol\":7783:7859  function ViewPrice()public view returns(uint){\r... */\n    tag_11:\n        /* \"subscribe.sol\":7823:7827  uint */\n      0x00\n        /* \"subscribe.sol\":7846:7851  price */\n      sload(0x01)\n        /* \"subscribe.sol\":7839:7851  return price */\n      swap1\n      pop\n        /* \"subscribe.sol\":7783:7859  function ViewPrice()public view returns(uint){\r... */\n      swap1\n      jump\t// out\n        /* \"subscribe.sol\":7429:7629  function subscribe()external payable{\r... */\n    tag_15:\n        /* \"subscribe.sol\":7497:7501  1e16 */\n      0x2386f26fc10000\n        /* \"subscribe.sol\":7484:7493  msg.value */\n      callvalue\n        /* \"subscribe.sol\":7484:7501  msg.value >= 1e16 */\n      lt\n      iszero\n        /* \"subscribe.sol\":7476:7502  require(msg.value >= 1e16) */\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n        /* \"subscribe.sol\":7513:7528  uint dcf_amount */\n      0x00\n        /* \"subscribe.sol\":7531:7567  uint(1e18).mul(msg.value).div(price) */\n      tag_28\n        /* \"subscribe.sol\":7561:7566  price */\n      sload(0x01)\n        /* \"subscribe.sol\":7531:7556  uint(1e18).mul(msg.value) */\n      tag_29\n        /* \"subscribe.sol\":7546:7555  msg.value */\n      callvalue\n        /* \"subscribe.sol\":7536:7540  1e18 */\n      0x0de0b6b3a7640000\n        /* \"subscribe.sol\":7531:7545  uint(1e18).mul */\n      tag_30\n      swap1\n        /* \"subscribe.sol\":7531:7556  uint(1e18).mul(msg.value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_29:\n        /* \"subscribe.sol\":7531:7560  uint(1e18).mul(msg.value).div */\n      tag_31\n      swap1\n        /* \"subscribe.sol\":7531:7567  uint(1e18).mul(msg.value).div(price) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_28:\n        /* \"subscribe.sol\":7513:7567  uint dcf_amount = uint(1e18).mul(msg.value).div(price) */\n      swap1\n      pop\n        /* \"subscribe.sol\":7578:7581  dcf */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"subscribe.sol\":7578:7590  dcf.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"subscribe.sol\":7591:7601  msg.sender */\n      caller\n        /* \"subscribe.sol\":7602:7612  dcf_amount */\n      dup4\n        /* \"subscribe.sol\":7578:7613  dcf.transfer(msg.sender,dcf_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_32\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_36\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      pop\n        /* \"subscribe.sol\":7465:7629  {\r... */\n      pop\n        /* \"subscribe.sol\":7429:7629  function subscribe()external payable{\r... */\n      jump\t// out\n        /* \"subscribe.sol\":7868:7956  function setPrice(uint _price)external onlyOwner{       \r... */\n    tag_20:\n        /* \"subscribe.sol\":7159:7169  msg.sender */\n      caller\n        /* \"subscribe.sol\":7150:7169  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"subscribe.sol\":7150:7155  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"subscribe.sol\":7150:7169  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"subscribe.sol\":7142:7206  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n        /* \"subscribe.sol\":7942:7948  _price */\n      dup1\n        /* \"subscribe.sol\":7934:7939  price */\n      0x01\n        /* \"subscribe.sol\":7934:7948  price = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"subscribe.sol\":7868:7956  function setPrice(uint _price)external onlyOwner{       \r... */\n      pop\n      jump\t// out\n        /* \"subscribe.sol\":3509:3607  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_30:\n        /* \"subscribe.sol\":3567:3574  uint256 */\n      0x00\n        /* \"subscribe.sol\":3598:3599  b */\n      dup2\n        /* \"subscribe.sol\":3594:3595  a */\n      dup4\n        /* \"subscribe.sol\":3594:3599  a * b */\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"subscribe.sol\":3587:3599  return a * b */\n      swap1\n      pop\n        /* \"subscribe.sol\":3509:3607  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"subscribe.sol\":3908:4006  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_31:\n        /* \"subscribe.sol\":3966:3973  uint256 */\n      0x00\n        /* \"subscribe.sol\":3997:3998  b */\n      dup2\n        /* \"subscribe.sol\":3993:3994  a */\n      dup4\n        /* \"subscribe.sol\":3993:3998  a / b */\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"subscribe.sol\":3986:3998  return a / b */\n      swap1\n      pop\n        /* \"subscribe.sol\":3908:4006  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_51:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_53\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":7:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:289   */\n    tag_55:\n        /* \"#utility.yul\":196:201   */\n      0x00\n        /* \"#utility.yul\":234:240   */\n      dup2\n        /* \"#utility.yul\":221:241   */\n      calldataload\n        /* \"#utility.yul\":212:241   */\n      swap1\n      pop\n        /* \"#utility.yul\":250:283   */\n      tag_57\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":250:283   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":150:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:640   */\n    tag_38:\n        /* \"#utility.yul\":362:368   */\n      0x00\n        /* \"#utility.yul\":411:413   */\n      0x20\n        /* \"#utility.yul\":399:408   */\n      dup3\n        /* \"#utility.yul\":390:397   */\n      dup5\n        /* \"#utility.yul\":386:409   */\n      sub\n        /* \"#utility.yul\":382:414   */\n      slt\n        /* \"#utility.yul\":379:498   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":417:496   */\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":379:498   */\n    tag_60:\n        /* \"#utility.yul\":537:538   */\n      0x00\n        /* \"#utility.yul\":562:623   */\n      tag_63\n        /* \"#utility.yul\":615:622   */\n      dup5\n        /* \"#utility.yul\":606:612   */\n      dup3\n        /* \"#utility.yul\":595:604   */\n      dup6\n        /* \"#utility.yul\":591:613   */\n      add\n        /* \"#utility.yul\":562:623   */\n      tag_51\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":552:623   */\n      swap2\n      pop\n        /* \"#utility.yul\":508:633   */\n      pop\n        /* \"#utility.yul\":295:640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":646:975   */\n    tag_19:\n        /* \"#utility.yul\":705:711   */\n      0x00\n        /* \"#utility.yul\":754:756   */\n      0x20\n        /* \"#utility.yul\":742:751   */\n      dup3\n        /* \"#utility.yul\":733:740   */\n      dup5\n        /* \"#utility.yul\":729:752   */\n      sub\n        /* \"#utility.yul\":725:757   */\n      slt\n        /* \"#utility.yul\":722:841   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":760:839   */\n      tag_66\n      tag_62\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":722:841   */\n    tag_65:\n        /* \"#utility.yul\":880:881   */\n      0x00\n        /* \"#utility.yul\":905:958   */\n      tag_67\n        /* \"#utility.yul\":950:957   */\n      dup5\n        /* \"#utility.yul\":941:947   */\n      dup3\n        /* \"#utility.yul\":930:939   */\n      dup6\n        /* \"#utility.yul\":926:948   */\n      add\n        /* \"#utility.yul\":905:958   */\n      tag_55\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":895:958   */\n      swap2\n      pop\n        /* \"#utility.yul\":851:968   */\n      pop\n        /* \"#utility.yul\":646:975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":981:1099   */\n    tag_68:\n        /* \"#utility.yul\":1068:1092   */\n      tag_70\n        /* \"#utility.yul\":1086:1091   */\n      dup2\n        /* \"#utility.yul\":1068:1092   */\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1063:1066   */\n      dup3\n        /* \"#utility.yul\":1056:1093   */\n      mstore\n        /* \"#utility.yul\":981:1099   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1105:1471   */\n    tag_72:\n        /* \"#utility.yul\":1247:1250   */\n      0x00\n        /* \"#utility.yul\":1268:1335   */\n      tag_74\n        /* \"#utility.yul\":1332:1334   */\n      0x20\n        /* \"#utility.yul\":1327:1330   */\n      dup4\n        /* \"#utility.yul\":1268:1335   */\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1261:1335   */\n      swap2\n      pop\n        /* \"#utility.yul\":1344:1437   */\n      tag_76\n        /* \"#utility.yul\":1433:1436   */\n      dup3\n        /* \"#utility.yul\":1344:1437   */\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1462:1464   */\n      0x20\n        /* \"#utility.yul\":1457:1460   */\n      dup3\n        /* \"#utility.yul\":1453:1465   */\n      add\n        /* \"#utility.yul\":1446:1465   */\n      swap1\n      pop\n        /* \"#utility.yul\":1105:1471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1477:1595   */\n    tag_78:\n        /* \"#utility.yul\":1564:1588   */\n      tag_80\n        /* \"#utility.yul\":1582:1587   */\n      dup2\n        /* \"#utility.yul\":1564:1588   */\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1559:1562   */\n      dup3\n        /* \"#utility.yul\":1552:1589   */\n      mstore\n        /* \"#utility.yul\":1477:1595   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1933   */\n    tag_33:\n        /* \"#utility.yul\":1722:1726   */\n      0x00\n        /* \"#utility.yul\":1760:1762   */\n      0x40\n        /* \"#utility.yul\":1749:1758   */\n      dup3\n        /* \"#utility.yul\":1745:1763   */\n      add\n        /* \"#utility.yul\":1737:1763   */\n      swap1\n      pop\n        /* \"#utility.yul\":1773:1844   */\n      tag_83\n        /* \"#utility.yul\":1841:1842   */\n      0x00\n        /* \"#utility.yul\":1830:1839   */\n      dup4\n        /* \"#utility.yul\":1826:1843   */\n      add\n        /* \"#utility.yul\":1817:1823   */\n      dup6\n        /* \"#utility.yul\":1773:1844   */\n      tag_68\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1854:1926   */\n      tag_84\n        /* \"#utility.yul\":1922:1924   */\n      0x20\n        /* \"#utility.yul\":1911:1920   */\n      dup4\n        /* \"#utility.yul\":1907:1925   */\n      add\n        /* \"#utility.yul\":1898:1904   */\n      dup5\n        /* \"#utility.yul\":1854:1926   */\n      tag_78\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1601:1933   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1939:2358   */\n    tag_42:\n        /* \"#utility.yul\":2105:2109   */\n      0x00\n        /* \"#utility.yul\":2143:2145   */\n      0x20\n        /* \"#utility.yul\":2132:2141   */\n      dup3\n        /* \"#utility.yul\":2128:2146   */\n      add\n        /* \"#utility.yul\":2120:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2192:2201   */\n      dup2\n        /* \"#utility.yul\":2186:2190   */\n      dup2\n        /* \"#utility.yul\":2182:2202   */\n      sub\n        /* \"#utility.yul\":2178:2179   */\n      0x00\n        /* \"#utility.yul\":2167:2176   */\n      dup4\n        /* \"#utility.yul\":2163:2180   */\n      add\n        /* \"#utility.yul\":2156:2203   */\n      mstore\n        /* \"#utility.yul\":2220:2351   */\n      tag_86\n        /* \"#utility.yul\":2346:2350   */\n      dup2\n        /* \"#utility.yul\":2220:2351   */\n      tag_72\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2212:2351   */\n      swap1\n      pop\n        /* \"#utility.yul\":1939:2358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2586   */\n    tag_13:\n        /* \"#utility.yul\":2457:2461   */\n      0x00\n        /* \"#utility.yul\":2495:2497   */\n      0x20\n        /* \"#utility.yul\":2484:2493   */\n      dup3\n        /* \"#utility.yul\":2480:2498   */\n      add\n        /* \"#utility.yul\":2472:2498   */\n      swap1\n      pop\n        /* \"#utility.yul\":2508:2579   */\n      tag_88\n        /* \"#utility.yul\":2576:2577   */\n      0x00\n        /* \"#utility.yul\":2565:2574   */\n      dup4\n        /* \"#utility.yul\":2561:2578   */\n      add\n        /* \"#utility.yul\":2552:2558   */\n      dup5\n        /* \"#utility.yul\":2508:2579   */\n      tag_78\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2364:2586   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2673:2842   */\n    tag_75:\n        /* \"#utility.yul\":2757:2768   */\n      0x00\n        /* \"#utility.yul\":2791:2797   */\n      dup3\n        /* \"#utility.yul\":2786:2789   */\n      dup3\n        /* \"#utility.yul\":2779:2798   */\n      mstore\n        /* \"#utility.yul\":2831:2835   */\n      0x20\n        /* \"#utility.yul\":2826:2829   */\n      dup3\n        /* \"#utility.yul\":2822:2836   */\n      add\n        /* \"#utility.yul\":2807:2836   */\n      swap1\n      pop\n        /* \"#utility.yul\":2673:2842   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2848:3033   */\n    tag_49:\n        /* \"#utility.yul\":2888:2889   */\n      0x00\n        /* \"#utility.yul\":2905:2925   */\n      tag_93\n        /* \"#utility.yul\":2923:2924   */\n      dup3\n        /* \"#utility.yul\":2905:2925   */\n      tag_81\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2900:2925   */\n      swap2\n      pop\n        /* \"#utility.yul\":2939:2959   */\n      tag_94\n        /* \"#utility.yul\":2957:2958   */\n      dup4\n        /* \"#utility.yul\":2939:2959   */\n      tag_81\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2934:2959   */\n      swap3\n      pop\n        /* \"#utility.yul\":2978:2979   */\n      dup3\n        /* \"#utility.yul\":2968:3003   */\n      tag_95\n      jumpi\n        /* \"#utility.yul\":2983:3001   */\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2968:3003   */\n    tag_95:\n        /* \"#utility.yul\":3025:3026   */\n      dup3\n        /* \"#utility.yul\":3022:3023   */\n      dup3\n        /* \"#utility.yul\":3018:3027   */\n      div\n        /* \"#utility.yul\":3013:3027   */\n      swap1\n      pop\n        /* \"#utility.yul\":2848:3033   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3039:3387   */\n    tag_46:\n        /* \"#utility.yul\":3079:3086   */\n      0x00\n        /* \"#utility.yul\":3102:3122   */\n      tag_99\n        /* \"#utility.yul\":3120:3121   */\n      dup3\n        /* \"#utility.yul\":3102:3122   */\n      tag_81\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3097:3122   */\n      swap2\n      pop\n        /* \"#utility.yul\":3136:3156   */\n      tag_100\n        /* \"#utility.yul\":3154:3155   */\n      dup4\n        /* \"#utility.yul\":3136:3156   */\n      tag_81\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3131:3156   */\n      swap3\n      pop\n        /* \"#utility.yul\":3324:3325   */\n      dup2\n        /* \"#utility.yul\":3256:3322   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3252:3326   */\n      div\n        /* \"#utility.yul\":3249:3250   */\n      dup4\n        /* \"#utility.yul\":3246:3327   */\n      gt\n        /* \"#utility.yul\":3241:3242   */\n      dup3\n        /* \"#utility.yul\":3234:3243   */\n      iszero\n        /* \"#utility.yul\":3227:3244   */\n      iszero\n        /* \"#utility.yul\":3223:3328   */\n      and\n        /* \"#utility.yul\":3220:3351   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":3331:3349   */\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3220:3351   */\n    tag_101:\n        /* \"#utility.yul\":3379:3380   */\n      dup3\n        /* \"#utility.yul\":3376:3377   */\n      dup3\n        /* \"#utility.yul\":3372:3381   */\n      mul\n        /* \"#utility.yul\":3361:3381   */\n      swap1\n      pop\n        /* \"#utility.yul\":3039:3387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3393:3489   */\n    tag_71:\n        /* \"#utility.yul\":3430:3437   */\n      0x00\n        /* \"#utility.yul\":3459:3483   */\n      tag_105\n        /* \"#utility.yul\":3477:3482   */\n      dup3\n        /* \"#utility.yul\":3459:3483   */\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3448:3483   */\n      swap1\n      pop\n        /* \"#utility.yul\":3393:3489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3495:3585   */\n    tag_107:\n        /* \"#utility.yul\":3529:3536   */\n      0x00\n        /* \"#utility.yul\":3572:3577   */\n      dup2\n        /* \"#utility.yul\":3565:3578   */\n      iszero\n        /* \"#utility.yul\":3558:3579   */\n      iszero\n        /* \"#utility.yul\":3547:3579   */\n      swap1\n      pop\n        /* \"#utility.yul\":3495:3585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3591:3717   */\n    tag_106:\n        /* \"#utility.yul\":3628:3635   */\n      0x00\n        /* \"#utility.yul\":3668:3710   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3661:3666   */\n      dup3\n        /* \"#utility.yul\":3657:3711   */\n      and\n        /* \"#utility.yul\":3646:3711   */\n      swap1\n      pop\n        /* \"#utility.yul\":3591:3717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3723:3800   */\n    tag_81:\n        /* \"#utility.yul\":3760:3767   */\n      0x00\n        /* \"#utility.yul\":3789:3794   */\n      dup2\n        /* \"#utility.yul\":3778:3794   */\n      swap1\n      pop\n        /* \"#utility.yul\":3723:3800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3806:3986   */\n    tag_103:\n        /* \"#utility.yul\":3854:3931   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3851:3852   */\n      0x00\n        /* \"#utility.yul\":3844:3932   */\n      mstore\n        /* \"#utility.yul\":3951:3955   */\n      0x11\n        /* \"#utility.yul\":3948:3949   */\n      0x04\n        /* \"#utility.yul\":3941:3956   */\n      mstore\n        /* \"#utility.yul\":3975:3979   */\n      0x24\n        /* \"#utility.yul\":3972:3973   */\n      0x00\n        /* \"#utility.yul\":3965:3980   */\n      revert\n        /* \"#utility.yul\":3992:4172   */\n    tag_97:\n        /* \"#utility.yul\":4040:4117   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4037:4038   */\n      0x00\n        /* \"#utility.yul\":4030:4118   */\n      mstore\n        /* \"#utility.yul\":4137:4141   */\n      0x12\n        /* \"#utility.yul\":4134:4135   */\n      0x04\n        /* \"#utility.yul\":4127:4142   */\n      mstore\n        /* \"#utility.yul\":4161:4165   */\n      0x24\n        /* \"#utility.yul\":4158:4159   */\n      0x00\n        /* \"#utility.yul\":4151:4166   */\n      revert\n        /* \"#utility.yul\":4301:4418   */\n    tag_62:\n        /* \"#utility.yul\":4410:4411   */\n      0x00\n        /* \"#utility.yul\":4407:4408   */\n      dup1\n        /* \"#utility.yul\":4400:4412   */\n      revert\n        /* \"#utility.yul\":4424:4606   */\n    tag_77:\n        /* \"#utility.yul\":4564:4598   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4560:4561   */\n      0x00\n        /* \"#utility.yul\":4552:4558   */\n      dup3\n        /* \"#utility.yul\":4548:4562   */\n      add\n        /* \"#utility.yul\":4541:4599   */\n      mstore\n        /* \"#utility.yul\":4424:4606   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4612:4728   */\n    tag_54:\n        /* \"#utility.yul\":4682:4703   */\n      tag_118\n        /* \"#utility.yul\":4697:4702   */\n      dup2\n        /* \"#utility.yul\":4682:4703   */\n      tag_107\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4675:4680   */\n      dup2\n        /* \"#utility.yul\":4672:4704   */\n      eq\n        /* \"#utility.yul\":4662:4722   */\n      tag_119\n      jumpi\n        /* \"#utility.yul\":4718:4719   */\n      0x00\n        /* \"#utility.yul\":4715:4716   */\n      dup1\n        /* \"#utility.yul\":4708:4720   */\n      revert\n        /* \"#utility.yul\":4662:4722   */\n    tag_119:\n        /* \"#utility.yul\":4612:4728   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4734:4856   */\n    tag_58:\n        /* \"#utility.yul\":4807:4831   */\n      tag_121\n        /* \"#utility.yul\":4825:4830   */\n      dup2\n        /* \"#utility.yul\":4807:4831   */\n      tag_81\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":4800:4805   */\n      dup2\n        /* \"#utility.yul\":4797:4832   */\n      eq\n        /* \"#utility.yul\":4787:4850   */\n      tag_122\n      jumpi\n        /* \"#utility.yul\":4846:4847   */\n      0x00\n        /* \"#utility.yul\":4843:4844   */\n      dup1\n        /* \"#utility.yul\":4836:4848   */\n      revert\n        /* \"#utility.yul\":4787:4850   */\n    tag_122:\n        /* \"#utility.yul\":4734:4856   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122073eda0b929a7cbd0d66798606e1f7a6d960f94966e87aadfbe9acf66cd0fb6c964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_359": {
									"entryPoint": null,
									"id": 359,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273b1cd8ad16899318da9f0a2c9933d599eb9cdc10c6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506502ba7def300060015534801561006e57600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610643806100bf6000396000f3fe60806040526004361061003f5760003560e01c806372dc1cae146100445780637a2b37b31461005b5780638f449a051461008657806391b7f5ed14610090575b600080fd5b34801561005057600080fd5b506100596100b9565b005b34801561006757600080fd5b5061007061017e565b60405161007d9190610454565b60405180910390f35b61008e610188565b005b34801561009c57600080fd5b506100b760048036038101906100b2919061039d565b610280565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011357600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561017b573d6000803e3d6000fd5b50565b6000600154905090565b662386f26fc1000034101561019c57600080fd5b60006101cd6001546101bf34670de0b6b3a764000061031a90919063ffffffff16565b61033090919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161022a92919061040b565b602060405180830381600087803b15801561024457600080fd5b505af1158015610258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027c9190610370565b5050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610310576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030790610434565b60405180910390fd5b8060018190555050565b6000818361032891906104b1565b905092915050565b6000818361033e9190610480565b905092915050565b600081519050610355816105df565b92915050565b60008135905061036a816105f6565b92915050565b600060208284031215610386576103856105b1565b5b600061039484828501610346565b91505092915050565b6000602082840312156103b3576103b26105b1565b5b60006103c18482850161035b565b91505092915050565b6103d38161050b565b82525050565b60006103e660208361046f565b91506103f1826105b6565b602082019050919050565b61040581610549565b82525050565b600060408201905061042060008301856103ca565b61042d60208301846103fc565b9392505050565b6000602082019050818103600083015261044d816103d9565b9050919050565b600060208201905061046960008301846103fc565b92915050565b600082825260208201905092915050565b600061048b82610549565b915061049683610549565b9250826104a6576104a5610582565b5b828204905092915050565b60006104bc82610549565b91506104c783610549565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610500576104ff610553565b5b828202905092915050565b600061051682610529565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6105e88161051d565b81146105f357600080fd5b50565b6105ff81610549565b811461060a57600080fd5b5056fea264697066735822122073eda0b929a7cbd0d66798606e1f7a6d960f94966e87aadfbe9acf66cd0fb6c964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xB1CD8AD16899318DA9F0A2C9933D599EB9CDC10C PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH6 0x2BA7DEF3000 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x643 DUP1 PUSH2 0xBF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72DC1CAE EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x7A2B37B3 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8F449A05 EQ PUSH2 0x86 JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0x90 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xB9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E PUSH2 0x188 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x39D JUMP JUMPDEST PUSH2 0x280 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x17B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE LT ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CD PUSH1 0x1 SLOAD PUSH2 0x1BF CALLVALUE PUSH8 0xDE0B6B3A7640000 PUSH2 0x31A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x330 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22A SWAP3 SWAP2 SWAP1 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x258 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x370 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x310 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307 SWAP1 PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x480 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x355 DUP2 PUSH2 0x5DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36A DUP2 PUSH2 0x5F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x386 JUMPI PUSH2 0x385 PUSH2 0x5B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x394 DUP5 DUP3 DUP6 ADD PUSH2 0x346 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0x3B2 PUSH2 0x5B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C1 DUP5 DUP3 DUP6 ADD PUSH2 0x35B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D3 DUP2 PUSH2 0x50B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E6 PUSH1 0x20 DUP4 PUSH2 0x46F JUMP JUMPDEST SWAP2 POP PUSH2 0x3F1 DUP3 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x405 DUP2 PUSH2 0x549 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x420 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x42D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3FC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44D DUP2 PUSH2 0x3D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x469 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48B DUP3 PUSH2 0x549 JUMP JUMPDEST SWAP2 POP PUSH2 0x496 DUP4 PUSH2 0x549 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4A6 JUMPI PUSH2 0x4A5 PUSH2 0x582 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BC DUP3 PUSH2 0x549 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C7 DUP4 PUSH2 0x549 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x500 JUMPI PUSH2 0x4FF PUSH2 0x553 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x516 DUP3 PUSH2 0x529 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x5E8 DUP2 PUSH2 0x51D JUMP JUMPDEST DUP2 EQ PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5FF DUP2 PUSH2 0x549 JUMP JUMPDEST DUP2 EQ PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xEDA0B929A7CBD0D66798606E1F7A6D960F94966E DUP8 0xAA 0xDF 0xBE SWAP11 0xCF PUSH7 0xCD0FB6C964736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "7047:919:0:-:0;;;7262:42;7234:72;;;;;;;;;;;;;;;;;;;;7329:13;7315:27;;7371:50;;;;;;;;;;7403:10;7395:5;;:18;;;;;;;;;;;;;;;;;;7047:919;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@SafeTrans_415": {
									"entryPoint": 185,
									"id": 415,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ViewPrice_423": {
									"entryPoint": 382,
									"id": 423,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@div_220": {
									"entryPoint": 816,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_205": {
									"entryPoint": 794,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@setPrice_435": {
									"entryPoint": 640,
									"id": 435,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@subscribe_392": {
									"entryPoint": 392,
									"id": 392,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1035,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1363,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1410,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1457,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4859:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:1",
														"type": ""
													}
												],
												"src": "7:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "202:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "212:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "234:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "221:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "212:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "250:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "250:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "250:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "180:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "188:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "196:5:1",
														"type": ""
													}
												],
												"src": "150:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "369:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "415:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "417:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "417:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "417:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "390:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "399:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "386:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "386:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "382:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:32:1"
															},
															"nodeType": "YulIf",
															"src": "379:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "508:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "523:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "537:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "527:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "552:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "595:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "606:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "591:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "591:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "615:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "562:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "552:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "339:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "350:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "362:6:1",
														"type": ""
													}
												],
												"src": "295:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "712:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "758:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "760:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "760:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "760:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "733:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "742:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "729:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "729:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "725:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:32:1"
															},
															"nodeType": "YulIf",
															"src": "722:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "851:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "866:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "870:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "895:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "930:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "941:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "926:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "926:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "950:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "905:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "905:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "895:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "682:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "693:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "705:6:1",
														"type": ""
													}
												],
												"src": "646:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1063:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1086:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1068:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1068:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1056:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1056:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1056:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1034:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1041:3:1",
														"type": ""
													}
												],
												"src": "981:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1251:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1261:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1327:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1332:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1268:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1261:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1433:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "1344:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1344:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1344:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1446:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1457:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1462:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1453:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1453:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1446:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1239:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1247:3:1",
														"type": ""
													}
												],
												"src": "1105:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1542:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1559:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1582:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1564:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1564:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1552:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1552:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1552:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1530:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1537:3:1",
														"type": ""
													}
												],
												"src": "1477:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1727:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1737:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1749:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1745:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1745:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1737:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1830:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1841:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1826:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1826:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1773:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1773:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1773:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1898:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1911:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1922:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1907:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1907:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1854:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1854:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1854:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1691:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1703:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1711:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1722:4:1",
														"type": ""
													}
												],
												"src": "1601:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2110:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2120:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2132:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2143:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2128:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2128:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2120:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2167:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2178:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2163:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2163:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2186:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2182:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2182:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2156:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2156:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2156:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2212:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2346:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2220:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2220:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2212:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2090:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2105:4:1",
														"type": ""
													}
												],
												"src": "1939:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2462:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2472:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2484:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2495:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2472:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2552:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2565:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2576:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2561:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2561:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2508:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2508:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2508:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2434:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2446:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2457:4:1",
														"type": ""
													}
												],
												"src": "2364:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2632:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2642:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2658:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2652:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2625:6:1",
														"type": ""
													}
												],
												"src": "2592:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2769:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2786:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2791:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2779:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2779:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2779:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2807:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2826:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2831:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2822:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2822:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2807:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2741:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2746:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2757:11:1",
														"type": ""
													}
												],
												"src": "2673:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2890:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2900:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2923:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2905:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2905:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2900:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2934:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2957:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2939:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2939:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2934:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2981:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2983:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2983:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2983:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2978:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2971:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2971:9:1"
															},
															"nodeType": "YulIf",
															"src": "2968:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3013:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3022:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3025:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3018:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3018:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3013:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2879:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2882:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2888:1:1",
														"type": ""
													}
												],
												"src": "2848:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3087:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3097:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3120:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3102:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3102:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3097:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3131:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3154:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3136:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3136:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3131:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3329:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3331:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3331:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3331:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3241:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3234:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3234:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3227:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3227:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3249:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3256:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3324:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "3252:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3252:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3246:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3246:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3223:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3223:105:1"
															},
															"nodeType": "YulIf",
															"src": "3220:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3361:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3376:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3379:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3372:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3372:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3361:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3070:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3073:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3079:7:1",
														"type": ""
													}
												],
												"src": "3039:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3438:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3448:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3477:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3459:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3459:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3448:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3420:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3430:7:1",
														"type": ""
													}
												],
												"src": "3393:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3537:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3547:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3572:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3565:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3565:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3547:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3519:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3529:7:1",
														"type": ""
													}
												],
												"src": "3495:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3636:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3646:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3661:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3668:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3657:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3657:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3646:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3618:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3628:7:1",
														"type": ""
													}
												],
												"src": "3591:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3768:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3778:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3789:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3778:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3750:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3760:7:1",
														"type": ""
													}
												],
												"src": "3723:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3834:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3854:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3844:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3844:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3844:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3948:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3951:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3941:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3941:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3941:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3972:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3975:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3965:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3965:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3965:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3806:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4020:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4037:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4030:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4030:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4030:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4134:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4137:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4127:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4127:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4158:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4161:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4151:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4151:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4151:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "3992:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4267:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4284:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4287:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4277:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4277:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4178:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4390:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4407:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4410:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4400:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4400:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4400:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4301:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4530:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4552:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4560:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4548:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4564:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4541:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4541:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4541:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4522:6:1",
														"type": ""
													}
												],
												"src": "4424:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4652:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4706:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4715:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4718:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4708:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4708:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4708:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4675:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4697:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "4682:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4682:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4672:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4672:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4665:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4665:40:1"
															},
															"nodeType": "YulIf",
															"src": "4662:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4645:5:1",
														"type": ""
													}
												],
												"src": "4612:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4777:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4834:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4843:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4846:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4836:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4836:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4836:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4800:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4825:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4807:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4807:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4797:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4797:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4790:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4790:43:1"
															},
															"nodeType": "YulIf",
															"src": "4787:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4770:5:1",
														"type": ""
													}
												],
												"src": "4734:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061003f5760003560e01c806372dc1cae146100445780637a2b37b31461005b5780638f449a051461008657806391b7f5ed14610090575b600080fd5b34801561005057600080fd5b506100596100b9565b005b34801561006757600080fd5b5061007061017e565b60405161007d9190610454565b60405180910390f35b61008e610188565b005b34801561009c57600080fd5b506100b760048036038101906100b2919061039d565b610280565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011357600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561017b573d6000803e3d6000fd5b50565b6000600154905090565b662386f26fc1000034101561019c57600080fd5b60006101cd6001546101bf34670de0b6b3a764000061031a90919063ffffffff16565b61033090919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161022a92919061040b565b602060405180830381600087803b15801561024457600080fd5b505af1158015610258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027c9190610370565b5050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610310576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030790610434565b60405180910390fd5b8060018190555050565b6000818361032891906104b1565b905092915050565b6000818361033e9190610480565b905092915050565b600081519050610355816105df565b92915050565b60008135905061036a816105f6565b92915050565b600060208284031215610386576103856105b1565b5b600061039484828501610346565b91505092915050565b6000602082840312156103b3576103b26105b1565b5b60006103c18482850161035b565b91505092915050565b6103d38161050b565b82525050565b60006103e660208361046f565b91506103f1826105b6565b602082019050919050565b61040581610549565b82525050565b600060408201905061042060008301856103ca565b61042d60208301846103fc565b9392505050565b6000602082019050818103600083015261044d816103d9565b9050919050565b600060208201905061046960008301846103fc565b92915050565b600082825260208201905092915050565b600061048b82610549565b915061049683610549565b9250826104a6576104a5610582565b5b828204905092915050565b60006104bc82610549565b91506104c783610549565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610500576104ff610553565b5b828202905092915050565b600061051682610529565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6105e88161051d565b81146105f357600080fd5b50565b6105ff81610549565b811461060a57600080fd5b5056fea264697066735822122073eda0b929a7cbd0d66798606e1f7a6d960f94966e87aadfbe9acf66cd0fb6c964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72DC1CAE EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x7A2B37B3 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8F449A05 EQ PUSH2 0x86 JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0x90 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xB9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E PUSH2 0x188 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x39D JUMP JUMPDEST PUSH2 0x280 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x17B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE LT ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CD PUSH1 0x1 SLOAD PUSH2 0x1BF CALLVALUE PUSH8 0xDE0B6B3A7640000 PUSH2 0x31A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x330 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22A SWAP3 SWAP2 SWAP1 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x258 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x370 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x310 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307 SWAP1 PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x480 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x355 DUP2 PUSH2 0x5DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36A DUP2 PUSH2 0x5F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x386 JUMPI PUSH2 0x385 PUSH2 0x5B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x394 DUP5 DUP3 DUP6 ADD PUSH2 0x346 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0x3B2 PUSH2 0x5B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C1 DUP5 DUP3 DUP6 ADD PUSH2 0x35B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D3 DUP2 PUSH2 0x50B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E6 PUSH1 0x20 DUP4 PUSH2 0x46F JUMP JUMPDEST SWAP2 POP PUSH2 0x3F1 DUP3 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x405 DUP2 PUSH2 0x549 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x420 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x42D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3FC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44D DUP2 PUSH2 0x3D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x469 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48B DUP3 PUSH2 0x549 JUMP JUMPDEST SWAP2 POP PUSH2 0x496 DUP4 PUSH2 0x549 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4A6 JUMPI PUSH2 0x4A5 PUSH2 0x582 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BC DUP3 PUSH2 0x549 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C7 DUP4 PUSH2 0x549 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x500 JUMPI PUSH2 0x4FF PUSH2 0x553 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x516 DUP3 PUSH2 0x529 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x5E8 DUP2 PUSH2 0x51D JUMP JUMPDEST DUP2 EQ PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5FF DUP2 PUSH2 0x549 JUMP JUMPDEST DUP2 EQ PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xEDA0B929A7CBD0D66798606E1F7A6D960F94966E DUP8 0xAA 0xDF 0xBE SWAP11 0xCF PUSH7 0xCD0FB6C964736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "7047:919:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7639:132;;;;;;;;;;;;;:::i;:::-;;7783:76;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7429:200;;;:::i;:::-;;7868:88;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7639:132;7700:5;;;;;;;;;;;7686:19;;:10;:19;;;7678:28;;;;;;7725:5;;;;;;;;;;;7717:23;;:46;7741:21;7717:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7639:132::o;7783:76::-;7823:4;7846:5;;7839:12;;7783:76;:::o;7429:200::-;7497:4;7484:9;:17;;7476:26;;;;;;7513:15;7531:36;7561:5;;7531:25;7546:9;7536:4;7531:14;;:25;;;;:::i;:::-;:29;;:36;;;;:::i;:::-;7513:54;;7578:3;;;;;;;;;;:12;;;7591:10;7602;7578:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7465:164;7429:200::o;7868:88::-;7159:10;7150:19;;:5;;;;;;;;;;;:19;;;7142:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7942:6:::1;7934:5;:14;;;;7868:88:::0;:::o;3509:98::-;3567:7;3598:1;3594;:5;;;;:::i;:::-;3587:12;;3509:98;;;;:::o;3908:::-;3966:7;3997:1;3993;:5;;;;:::i;:::-;3986:12;;3908:98;;;;:::o;7:137:1:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;7:137;;;;:::o;150:139::-;196:5;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;150:139;;;;:::o;295:345::-;362:6;411:2;399:9;390:7;386:23;382:32;379:119;;;417:79;;:::i;:::-;379:119;537:1;562:61;615:7;606:6;595:9;591:22;562:61;:::i;:::-;552:71;;508:125;295:345;;;;:::o;646:329::-;705:6;754:2;742:9;733:7;729:23;725:32;722:119;;;760:79;;:::i;:::-;722:119;880:1;905:53;950:7;941:6;930:9;926:22;905:53;:::i;:::-;895:63;;851:117;646:329;;;;:::o;981:118::-;1068:24;1086:5;1068:24;:::i;:::-;1063:3;1056:37;981:118;;:::o;1105:366::-;1247:3;1268:67;1332:2;1327:3;1268:67;:::i;:::-;1261:74;;1344:93;1433:3;1344:93;:::i;:::-;1462:2;1457:3;1453:12;1446:19;;1105:366;;;:::o;1477:118::-;1564:24;1582:5;1564:24;:::i;:::-;1559:3;1552:37;1477:118;;:::o;1601:332::-;1722:4;1760:2;1749:9;1745:18;1737:26;;1773:71;1841:1;1830:9;1826:17;1817:6;1773:71;:::i;:::-;1854:72;1922:2;1911:9;1907:18;1898:6;1854:72;:::i;:::-;1601:332;;;;;:::o;1939:419::-;2105:4;2143:2;2132:9;2128:18;2120:26;;2192:9;2186:4;2182:20;2178:1;2167:9;2163:17;2156:47;2220:131;2346:4;2220:131;:::i;:::-;2212:139;;1939:419;;;:::o;2364:222::-;2457:4;2495:2;2484:9;2480:18;2472:26;;2508:71;2576:1;2565:9;2561:17;2552:6;2508:71;:::i;:::-;2364:222;;;;:::o;2673:169::-;2757:11;2791:6;2786:3;2779:19;2831:4;2826:3;2822:14;2807:29;;2673:169;;;;:::o;2848:185::-;2888:1;2905:20;2923:1;2905:20;:::i;:::-;2900:25;;2939:20;2957:1;2939:20;:::i;:::-;2934:25;;2978:1;2968:35;;2983:18;;:::i;:::-;2968:35;3025:1;3022;3018:9;3013:14;;2848:185;;;;:::o;3039:348::-;3079:7;3102:20;3120:1;3102:20;:::i;:::-;3097:25;;3136:20;3154:1;3136:20;:::i;:::-;3131:25;;3324:1;3256:66;3252:74;3249:1;3246:81;3241:1;3234:9;3227:17;3223:105;3220:131;;;3331:18;;:::i;:::-;3220:131;3379:1;3376;3372:9;3361:20;;3039:348;;;;:::o;3393:96::-;3430:7;3459:24;3477:5;3459:24;:::i;:::-;3448:35;;3393:96;;;:::o;3495:90::-;3529:7;3572:5;3565:13;3558:21;3547:32;;3495:90;;;:::o;3591:126::-;3628:7;3668:42;3661:5;3657:54;3646:65;;3591:126;;;:::o;3723:77::-;3760:7;3789:5;3778:16;;3723:77;;;:::o;3806:180::-;3854:77;3851:1;3844:88;3951:4;3948:1;3941:15;3975:4;3972:1;3965:15;3992:180;4040:77;4037:1;4030:88;4137:4;4134:1;4127:15;4161:4;4158:1;4151:15;4301:117;4410:1;4407;4400:12;4424:182;4564:34;4560:1;4552:6;4548:14;4541:58;4424:182;:::o;4612:116::-;4682:21;4697:5;4682:21;:::i;:::-;4675:5;4672:32;4662:60;;4718:1;4715;4708:12;4662:60;4612:116;:::o;4734:122::-;4807:24;4825:5;4807:24;:::i;:::-;4800:5;4797:35;4787:63;;4846:1;4843;4836:12;4787:63;4734:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "320600",
								"executionCost": "71001",
								"totalCost": "391601"
							},
							"external": {
								"SafeTrans()": "infinite",
								"ViewPrice()": "2437",
								"setPrice(uint256)": "24734",
								"subscribe()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7047,
									"end": 7966,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 7047,
									"end": 7966,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7047,
									"end": 7966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7262,
									"end": 7304,
									"name": "PUSH",
									"source": 0,
									"value": "B1CD8AD16899318DA9F0A2C9933D599EB9CDC10C"
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7234,
									"end": 7306,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7329,
									"end": 7342,
									"name": "PUSH",
									"source": 0,
									"value": "2BA7DEF3000"
								},
								{
									"begin": 7315,
									"end": 7342,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7315,
									"end": 7342,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7371,
									"end": 7421,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 7371,
									"end": 7421,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7371,
									"end": 7421,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7371,
									"end": 7421,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7371,
									"end": 7421,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7371,
									"end": 7421,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7371,
									"end": 7421,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7371,
									"end": 7421,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7371,
									"end": 7421,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7371,
									"end": 7421,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7371,
									"end": 7421,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7403,
									"end": 7413,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 7395,
									"end": 7400,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7395,
									"end": 7400,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7047,
									"end": 7966,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7047,
									"end": 7966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7047,
									"end": 7966,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7047,
									"end": 7966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7047,
									"end": 7966,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7047,
									"end": 7966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7047,
									"end": 7966,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073eda0b929a7cbd0d66798606e1f7a6d960f94966e87aadfbe9acf66cd0fb6c964736f6c63430008070033",
									".code": [
										{
											"begin": 7047,
											"end": 7966,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "PUSH",
											"source": 0,
											"value": "72DC1CAE"
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "PUSH",
											"source": 0,
											"value": "7A2B37B3"
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "PUSH",
											"source": 0,
											"value": "8F449A05"
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "PUSH",
											"source": 0,
											"value": "91B7F5ED"
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7966,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7429,
											"end": 7629,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7429,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7429,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7429,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7429,
											"end": 7629,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7429,
											"end": 7629,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7429,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7429,
											"end": 7629,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7705,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7700,
											"end": 7705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7700,
											"end": 7705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7705,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7705,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7700,
											"end": 7705,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7705,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7705,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7700,
											"end": 7705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7686,
											"end": 7705,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7686,
											"end": 7705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7686,
											"end": 7696,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7686,
											"end": 7705,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7686,
											"end": 7705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7686,
											"end": 7705,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7678,
											"end": 7706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7678,
											"end": 7706,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7678,
											"end": 7706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7678,
											"end": 7706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7678,
											"end": 7706,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7678,
											"end": 7706,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7678,
											"end": 7706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7725,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7725,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7725,
											"end": 7730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7725,
											"end": 7730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7725,
											"end": 7730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7725,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7725,
											"end": 7730,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7725,
											"end": 7730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7725,
											"end": 7730,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7725,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7725,
											"end": 7730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7717,
											"end": 7740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 7741,
											"end": 7762,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7771,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7823,
											"end": 7827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7851,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7846,
											"end": 7851,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7839,
											"end": 7851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7839,
											"end": 7851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7783,
											"end": 7859,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7429,
											"end": 7629,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7429,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7501,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 7484,
											"end": 7493,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7501,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7501,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7476,
											"end": 7502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7502,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7502,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7476,
											"end": 7502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7513,
											"end": 7528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7531,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7561,
											"end": 7566,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7561,
											"end": 7566,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 7546,
											"end": 7555,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7540,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7531,
											"end": 7545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7531,
											"end": 7545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7556,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7531,
											"end": 7556,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7531,
											"end": 7556,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 7531,
											"end": 7556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7531,
											"end": 7560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7567,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7531,
											"end": 7567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7567,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7531,
											"end": 7567,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7531,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7513,
											"end": 7567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7513,
											"end": 7567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7581,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7581,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7578,
											"end": 7581,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7581,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7578,
											"end": 7581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 7591,
											"end": 7601,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7612,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7578,
											"end": 7613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7429,
											"end": 7629,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7159,
											"end": 7169,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7169,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7150,
											"end": 7169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7155,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7150,
											"end": 7155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7150,
											"end": 7155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7155,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7155,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7150,
											"end": 7155,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7155,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7150,
											"end": 7155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7169,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7150,
											"end": 7169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7169,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7142,
											"end": 7206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7942,
											"end": 7948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7934,
											"end": 7948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7934,
											"end": 7948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7934,
											"end": 7948,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7934,
											"end": 7948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7956,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3509,
											"end": 3607,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3509,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 3574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3594,
											"end": 3595,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3594,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3594,
											"end": 3599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3594,
											"end": 3599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3594,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3594,
											"end": 3599,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3594,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3594,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3587,
											"end": 3599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3587,
											"end": 3599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3607,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3607,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3908,
											"end": 4006,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3908,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 3998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3993,
											"end": 3994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 3998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 3998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 4006,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 4006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 4006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 4006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 4006,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 221,
											"end": 241,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 212,
											"end": 241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 150,
											"end": 289,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 150,
											"end": 289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 150,
											"end": 289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 289,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 295,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 362,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 413,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 399,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 390,
											"end": 397,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 386,
											"end": 409,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 379,
											"end": 498,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 379,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 379,
											"end": 498,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 417,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 379,
											"end": 498,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 379,
											"end": 498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 537,
											"end": 538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 615,
											"end": 622,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 595,
											"end": 604,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 591,
											"end": 613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 562,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 552,
											"end": 623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 508,
											"end": 633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 295,
											"end": 640,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 295,
											"end": 640,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 295,
											"end": 640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 295,
											"end": 640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 295,
											"end": 640,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 646,
											"end": 975,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 646,
											"end": 975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 705,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 733,
											"end": 740,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 729,
											"end": 752,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 725,
											"end": 757,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 722,
											"end": 841,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 722,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 722,
											"end": 841,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 760,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 722,
											"end": 841,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 722,
											"end": 841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 880,
											"end": 881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 950,
											"end": 957,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 941,
											"end": 947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 926,
											"end": 948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 905,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 895,
											"end": 958,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 895,
											"end": 958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 851,
											"end": 968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 646,
											"end": 975,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 646,
											"end": 975,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 646,
											"end": 975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 646,
											"end": 975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 646,
											"end": 975,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1105,
											"end": 1471,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1105,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1332,
											"end": 1334,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1327,
											"end": 1330,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1268,
											"end": 1335,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1335,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1268,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1344,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1433,
											"end": 1436,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1344,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1344,
											"end": 1437,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1344,
											"end": 1437,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1344,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1462,
											"end": 1464,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1457,
											"end": 1460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1453,
											"end": 1465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1471,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1477,
											"end": 1595,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1477,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1589,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1595,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1601,
											"end": 1933,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1601,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1762,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1839,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1773,
											"end": 1844,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1773,
											"end": 1844,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1773,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1922,
											"end": 1924,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1911,
											"end": 1920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1854,
											"end": 1926,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1854,
											"end": 1926,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1854,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1933,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1933,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1933,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1939,
											"end": 2358,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1939,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2132,
											"end": 2141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2202,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2176,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2346,
											"end": 2350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2220,
											"end": 2351,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2220,
											"end": 2351,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2220,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 2358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 2358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 2358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 2358,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2364,
											"end": 2586,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2364,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2497,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2484,
											"end": 2493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2472,
											"end": 2498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2472,
											"end": 2498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2576,
											"end": 2577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2574,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2586,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2586,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2586,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2673,
											"end": 2842,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2673,
											"end": 2842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2791,
											"end": 2797,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2789,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2835,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 2829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2842,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2848,
											"end": 3033,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2848,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2905,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2923,
											"end": 2924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2905,
											"end": 2925,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2905,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2905,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2900,
											"end": 2925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2900,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2957,
											"end": 2958,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2939,
											"end": 2959,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2939,
											"end": 2959,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2939,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2959,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 2979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2968,
											"end": 3003,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3003,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2968,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3025,
											"end": 3026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3022,
											"end": 3023,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3018,
											"end": 3027,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 3033,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 3033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 3033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 3033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 3033,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3039,
											"end": 3387,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3039,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3086,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3120,
											"end": 3121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3102,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3102,
											"end": 3122,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3102,
											"end": 3122,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3102,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3154,
											"end": 3155,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3136,
											"end": 3156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3136,
											"end": 3156,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3136,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3252,
											"end": 3326,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3249,
											"end": 3250,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3327,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3234,
											"end": 3243,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3227,
											"end": 3244,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3328,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3351,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3220,
											"end": 3351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3331,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3331,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3331,
											"end": 3349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3331,
											"end": 3349,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3331,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3351,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3220,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3379,
											"end": 3380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3381,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3387,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3387,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3387,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3393,
											"end": 3489,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3393,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3477,
											"end": 3482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3459,
											"end": 3483,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3459,
											"end": 3483,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3459,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3489,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3489,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3495,
											"end": 3585,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3495,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3536,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3547,
											"end": 3579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3547,
											"end": 3579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3585,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3591,
											"end": 3717,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3591,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3668,
											"end": 3710,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3661,
											"end": 3666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3711,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3717,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3723,
											"end": 3800,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3723,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3789,
											"end": 3794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3800,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3806,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3806,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3931,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3851,
											"end": 3852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3844,
											"end": 3932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3955,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3972,
											"end": 3973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3965,
											"end": 3980,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4172,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3992,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4117,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4037,
											"end": 4038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4141,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4134,
											"end": 4135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4158,
											"end": 4159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4151,
											"end": 4166,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4418,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4301,
											"end": 4418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4411,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4407,
											"end": 4408,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4412,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4606,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4424,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4564,
											"end": 4598,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4560,
											"end": 4561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4606,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4612,
											"end": 4728,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4612,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4682,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4697,
											"end": 4702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4682,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4682,
											"end": 4703,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4682,
											"end": 4703,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4682,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4680,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4672,
											"end": 4704,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4662,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4662,
											"end": 4722,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4715,
											"end": 4716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4708,
											"end": 4720,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4662,
											"end": 4722,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4662,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4728,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4734,
											"end": 4856,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4734,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4825,
											"end": 4830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4807,
											"end": 4831,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4807,
											"end": 4831,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4807,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4800,
											"end": 4805,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4797,
											"end": 4832,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4787,
											"end": 4850,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4843,
											"end": 4844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4848,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4850,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4787,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4734,
											"end": 4856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4734,
											"end": 4856,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"SafeTrans()": "72dc1cae",
							"ViewPrice()": "7a2b37b3",
							"setPrice(uint256)": "91b7f5ed",
							"subscribe()": "8f449a05"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"SafeTrans\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ViewPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subscribe\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"subscribe.sol\":\"RaiseFunds\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"subscribe.sol\":{\"keccak256\":\"0x69362c0aeaae5cc2b05c4c6915bc05db309893d59fe66f2931aa571f524b99b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cdf03e860fe40b647e368b27c0a4df6f2ba1eb58ae46b7d3a78349e7e3bf8e2\",\"dweb:/ipfs/QmUfTb11sx4QQKLa6ShP4d9v6CvWy3PnpkJBhQwe6y2aWV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"subscribe.sol\":420:6932  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"subscribe.sol\":420:6932  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d0dc5f0919867348c7bd7adb09951aae22bd898a39b0a3833be404ed5ac2708564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d0dc5f0919867348c7bd7adb09951aae22bd898a39b0a3833be404ed5ac2708564736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xDC 0x5F MULMOD NOT DUP7 PUSH20 0x48C7BD7ADB09951AAE22BD898A39B0A3833BE404 0xED GAS 0xC2 PUSH17 0x8564736F6C634300080700330000000000 ",
							"sourceMap": "420:6512:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d0dc5f0919867348c7bd7adb09951aae22bd898a39b0a3833be404ed5ac2708564736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xDC 0x5F MULMOD NOT DUP7 PUSH20 0x48C7BD7ADB09951AAE22BD898A39B0A3833BE404 0xED GAS 0xC2 PUSH17 0x8564736F6C634300080700330000000000 ",
							"sourceMap": "420:6512:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d0dc5f0919867348c7bd7adb09951aae22bd898a39b0a3833be404ed5ac2708564736f6c63430008070033",
									".code": [
										{
											"begin": 420,
											"end": 6932,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 420,
											"end": 6932,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 420,
											"end": 6932,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 420,
											"end": 6932,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 420,
											"end": 6932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 6932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 6932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 6932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 6932,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"subscribe.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"subscribe.sol\":{\"keccak256\":\"0x69362c0aeaae5cc2b05c4c6915bc05db309893d59fe66f2931aa571f524b99b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cdf03e860fe40b647e368b27c0a4df6f2ba1eb58ae46b7d3a78349e7e3bf8e2\",\"dweb:/ipfs/QmUfTb11sx4QQKLa6ShP4d9v6CvWy3PnpkJBhQwe6y2aWV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"subscribe.sol": {
				"ast": {
					"absolutePath": "subscribe.sol",
					"exportedSymbols": {
						"IERC20": [
							321
						],
						"RaiseFunds": [
							436
						],
						"SafeMath": [
							311
						]
					},
					"id": 437,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "217:201:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "428:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "661:146:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "672:128:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "705:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "697:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "697:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "709:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "713:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "709:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "697:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "729:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "748:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "755:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "747:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "740:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "780:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "786:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "779:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "772:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "444:135:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "601:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "612:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "646:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:0"
									},
									"scope": 311,
									"src": "585:222:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1036:118:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1047:100:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1076:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1080:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1076:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1072:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1091:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1098:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1090:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1083:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1123:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1129:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1133:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1129:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1122:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1115:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "815:139:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "969:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "984:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "976:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "995:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "987:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1021:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1021:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1027:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:15:0"
									},
									"scope": 311,
									"src": "960:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1385:427:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1396:409:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1658:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1663:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1658:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1654:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1674:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1680:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1673:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1666:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1705:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1697:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1697:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1709:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1713:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1709:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1697:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1733:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1737:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1733:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1742:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1729:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1753:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1760:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1752:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1745:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1785:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1791:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1784:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1777:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1162:141:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1318:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1333:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1325:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1344:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1336:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1370:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1370:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1376:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1369:15:0"
									},
									"scope": 311,
									"src": "1309:503:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2044:119:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2055:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2084:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2089:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2084:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2080:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2100:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2107:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2099:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2092:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2132:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2142:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2138:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2131:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2124:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1820:142:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1977:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1992:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1984:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2003:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1995:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1983:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2029:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2029:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2035:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2028:15:0"
									},
									"scope": 311,
									"src": "1968:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2405:119:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2445:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2450:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2445:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2441:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2461:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2468:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2460:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2453:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2493:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2499:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2503:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2499:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2492:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2485:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2171:152:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2338:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2353:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2345:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2364:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2356:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2344:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2390:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2390:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2389:15:0"
									},
									"scope": 311,
									"src": "2329:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2838:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2856:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2860:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2856:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2849:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2532:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2780:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2792:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2784:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2803:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2795:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2783:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2829:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2828:9:0"
									},
									"scope": 311,
									"src": "2771:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3219:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3237:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3241:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3237:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3230:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2877:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3161:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3165:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3176:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3210:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:0"
									},
									"scope": 311,
									"src": "3152:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3576:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3594:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3598:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3594:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3587:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3258:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3518:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3530:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3522:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3541:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3533:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3521:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3567:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3566:9:0"
									},
									"scope": 311,
									"src": "3509:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3975:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3993:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3997:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3993:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3986:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3615:287:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3917:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3929:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3921:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3940:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3932:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3920:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3966:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3965:9:0"
									},
									"scope": 311,
									"src": "3908:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4540:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4558:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4562:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4558:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4551:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "4014:453:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4482:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4494:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4486:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4505:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4497:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4485:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4531:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4530:9:0"
									},
									"scope": 311,
									"src": "4473:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5179:111:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5190:93:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5223:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5228:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5223:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5231:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5215:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5215:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5215:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5266:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5270:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5266:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5259:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4579:465:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5059:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5081:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5073:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5101:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5093:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5127:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5113:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5113:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5062:84:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5170:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5169:9:0"
									},
									"scope": 311,
									"src": "5050:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5917:110:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5928:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5961:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5965:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5961:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5968:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5953:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5953:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5953:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "6003:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "6007:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6003:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5996:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5298:484:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5797:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5819:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5811:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5839:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5831:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5865:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5851:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5851:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5800:84:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5907:9:0"
									},
									"scope": 311,
									"src": "5788:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6819:110:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6830:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6863:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6867:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6863:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6870:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6855:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6855:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6855:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6905:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6909:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6905:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6898:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "6035:649:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6699:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6721:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6713:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6741:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6733:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6767:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6753:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6753:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6702:84:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6810:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6810:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6809:9:0"
									},
									"scope": 311,
									"src": "6690:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 437,
							"src": "420:6512:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 321,
							"linearizedBaseContracts": [
								321
							],
							"name": "IERC20",
							"nameLocation": "6948:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a9059cbb",
									"id": 320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "6974:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6991:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "6983:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7003:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "6995:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6982:28:0"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "7029:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7029:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7028:6:0"
									},
									"scope": 321,
									"src": "6965:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 437,
							"src": "6938:103:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 436,
							"linearizedBaseContracts": [
								436
							],
							"name": "RaiseFunds",
							"nameLocation": "7057:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 324,
									"libraryName": {
										"id": 322,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "7080:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "7074:24:0",
									"typeName": {
										"id": 323,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7093:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "7131:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 327,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "7150:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 328,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7159:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7159:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7150:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7171:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7142:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7142:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "7142:64:0"
											},
											{
												"id": 334,
												"nodeType": "PlaceholderStatement",
												"src": "7217:1:0"
											}
										]
									},
									"id": 336,
									"name": "onlyOwner",
									"nameLocation": "7119:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7128:2:0"
									},
									"src": "7110:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 345,
									"mutability": "mutable",
									"name": "dcf",
									"nameLocation": "7241:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 436,
									"src": "7234:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$321",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 338,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 337,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 321,
											"src": "7234:6:0"
										},
										"referencedDeclaration": 321,
										"src": "7234:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$321",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "307842314364386164313638393933313844413946304132633939333364353939654239636443313063",
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7262:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xB1Cd8ad16899318DA9F0A2c9933d599eB9cdC10c"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													],
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "7254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 340,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7254:7:0",
														"typeDescriptions": {}
													}
												},
												"id": 343,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "7254:51:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 339,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 321,
											"src": "7247:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$321_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 344,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7247:59:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$321",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 348,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "7320:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 436,
									"src": "7315:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 346,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7315:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33303030303030303030303030",
										"id": 347,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7329:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3000000000000_by_1",
											"typeString": "int_const 3000000000000"
										},
										"value": "3000000000000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 350,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "7357:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 436,
									"src": "7349:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 349,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7349:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "7384:37:0",
										"statements": [
											{
												"expression": {
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 353,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "7395:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 354,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7403:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7403:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7395:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "7395:18:0"
											}
										]
									},
									"id": 359,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7382:2:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7384:0:0"
									},
									"scope": 436,
									"src": "7371:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "7465:164:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 363,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7484:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "7484:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31653136",
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7497:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"value": "1e16"
															},
															"src": "7484:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 362,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7476:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7476:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "7476:26:0"
											},
											{
												"assignments": [
													370
												],
												"declarations": [
													{
														"constant": false,
														"id": 370,
														"mutability": "mutable",
														"name": "dcf_amount",
														"nameLocation": "7518:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 391,
														"src": "7513:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 369,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7513:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 382,
												"initialValue": {
													"arguments": [
														{
															"id": 380,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "7561:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 376,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7546:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "7546:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31653138",
																			"id": 373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7536:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"id": 372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7531:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 371,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "7531:4:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7531:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "7531:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7531:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "7531:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7531:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7513:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 386,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7591:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7591:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "7602:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 383,
															"name": "dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "7578:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$321",
																"typeString": "contract IERC20"
															}
														},
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 320,
														"src": "7578:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7578:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "7578:35:0"
											}
										]
									},
									"functionSelector": "8f449a05",
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "subscribe",
									"nameLocation": "7438:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7447:2:0"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7465:0:0"
									},
									"scope": 436,
									"src": "7429:200:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "7667:104:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 396,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7686:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7686:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 398,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "7700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7686:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 395,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7678:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7678:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "7678:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 409,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7749:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_RaiseFunds_$436",
																			"typeString": "contract RaiseFunds"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_RaiseFunds_$436",
																			"typeString": "contract RaiseFunds"
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7741:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 407,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7741:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7741:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "7741:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 404,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "7725:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7717:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 402,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7717:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7717:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "7717:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7717:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "7717:46:0"
											}
										]
									},
									"functionSelector": "72dc1cae",
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "SafeTrans",
									"nameLocation": "7648:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7657:2:0"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7667:0:0"
									},
									"scope": 436,
									"src": "7639:132:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "7828:31:0",
										"statements": [
											{
												"expression": {
													"id": 420,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 348,
													"src": "7846:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 419,
												"id": 421,
												"nodeType": "Return",
												"src": "7839:12:0"
											}
										]
									},
									"functionSelector": "7a2b37b3",
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ViewPrice",
									"nameLocation": "7792:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7801:2:0"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "7823:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7823:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7822:6:0"
									},
									"scope": 436,
									"src": "7783:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "7916:40:0",
										"statements": [
											{
												"expression": {
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 430,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7934:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 431,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "7942:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7934:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "7934:14:0"
											}
										]
									},
									"functionSelector": "91b7f5ed",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 428,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 427,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 336,
												"src": "7907:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7907:9:0"
										}
									],
									"name": "setPrice",
									"nameLocation": "7877:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "7891:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "7886:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7886:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7885:13:0"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7916:0:0"
									},
									"scope": 436,
									"src": "7868:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 437,
							"src": "7047:919:0",
							"usedErrors": []
						}
					],
					"src": "33:7933:0"
				},
				"id": 0
			}
		}
	}
}