{
	"id": "224287ec12fe8265aa74b0a98aa02741",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"treasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\ninterface IERC20 {    \r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address to, uint256 amount) external returns (bool); \r\n    function burnFrom(address account, uint256 amount) external;     \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\ncontract bigTreasury{\r\n    using SafeMath for uint;\r\n\r\n    IERC20 dcf = IERC20(0xC77f56De066fE50C3e1564bA1cec85aC0aD663cE);\r\n    \r\n    address owner;\r\n    uint profitRate;\r\n    uint profitSharing;\r\n    uint treasury;\r\n    uint tax;\r\n    \r\n    \r\n\r\n    modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n\r\n    constructor(){\r\n        owner = msg.sender; \r\n        profitRate = 500;\r\n        tax = 10;        \r\n    }\r\n\r\n    \r\n\r\n    function payment()external payable{\r\n        require(msg.value > 0);  \r\n        allocation();      \r\n    }  \r\n\r\n\r\n\r\n    function subscribe()external payable{\r\n        require(msg.value >= 1e16);\r\n        uint price = dcfPrice();        \r\n        uint dcf_amount = uint(1e18).mul(msg.value).div(price);\r\n        uint fee = dcf_amount.mul(tax).div(1000);\r\n        dcf_amount = dcf_amount.sub(fee);\r\n\r\n        dcf.transfer(msg.sender,dcf_amount);\r\n        allocation();\r\n    }\r\n\r\n\r\n    function allocation()private{\r\n        uint profit = msg.value.mul(profitRate).div(1000);        \r\n        profitSharing = profitSharing.add(profit);\r\n        treasury = treasury.add(msg.value.sub(profit));\r\n    }\r\n\r\n     \r\n\r\n\r\n    //----withdraw\r\n\r\n    function sell(uint dcf_amount)external{\r\n       require(dcf.balanceOf(msg.sender) >= dcf_amount);\r\n       uint price = dcfPrice();\r\n       uint eth_amount = dcf_amount.mul(price).div(1e18);  \r\n       uint fee = eth_amount.mul(tax).div(1000);\r\n\r\n       \r\n       eth_amount = eth_amount.sub(fee);    \r\n\r\n       payable(msg.sender).transfer(eth_amount);\r\n       profitSharing = profitSharing.sub(eth_amount);\r\n\r\n       burn(dcf_amount);\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n    function dcfPrice()public view returns(uint){        \r\n        uint dcfTotlaSupply = dcf.totalSupply();\r\n        uint price = uint(1e18).mul(profitSharing).div(dcfTotlaSupply);\r\n        return price;\r\n    }\r\n\r\n    function burn(uint dcf_amount)private{\r\n        dcf.burnFrom(msg.sender,dcf_amount);\r\n    }\r\n\r\n\r\n    // -----------------------------admin\r\n\r\n    function publicWorks()external onlyOwner{\r\n        payable(owner).transfer(treasury);\r\n        treasury = 0; \r\n    }\r\n\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"treasury.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"burnFrom(address,uint256)": "79cc6790",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"treasury.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"treasury.sol\":{\"keccak256\":\"0x9f785e8cd5584985cdb5b5ac51c68613da178a8fbbae7108dc2af6f730caba0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3460877aa0bb6e521e6391626f639a8ccd9950d5c4e7ac26a2c046f9095a5e23\",\"dweb:/ipfs/QmQoZdctjnk1VTe7UgTgYvFf8AgyfjHsFj7DqAPMhhSrWR\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"treasury.sol\":422:6934  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"treasury.sol\":422:6934  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a6d7d8e1316073ce678dfdd03023effc41434c273c826cfecfab6f356e395c4c64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6d7d8e1316073ce678dfdd03023effc41434c273c826cfecfab6f356e395c4c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xD7 0xD8 0xE1 BALANCE PUSH1 0x73 0xCE PUSH8 0x8DFDD03023EFFC41 NUMBER 0x4C 0x27 EXTCODECOPY DUP3 PUSH13 0xFECFAB6F356E395C4C64736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "422:6512:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6d7d8e1316073ce678dfdd03023effc41434c273c826cfecfab6f356e395c4c64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xD7 0xD8 0xE1 BALANCE PUSH1 0x73 0xCE PUSH8 0x8DFDD03023EFFC41 NUMBER 0x4C 0x27 EXTCODECOPY DUP3 PUSH13 0xFECFAB6F356E395C4C64736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "422:6512:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 422,
									"end": 6934,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a6d7d8e1316073ce678dfdd03023effc41434c273c826cfecfab6f356e395c4c64736f6c634300080d0033",
									".code": [
										{
											"begin": 422,
											"end": 6934,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 422,
											"end": 6934,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 422,
											"end": 6934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 422,
											"end": 6934,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 422,
											"end": 6934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 6934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 422,
											"end": 6934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 6934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 6934,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"treasury.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"treasury.sol\":{\"keccak256\":\"0x9f785e8cd5584985cdb5b5ac51c68613da178a8fbbae7108dc2af6f730caba0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3460877aa0bb6e521e6391626f639a8ccd9950d5c4e7ac26a2c046f9095a5e23\",\"dweb:/ipfs/QmQoZdctjnk1VTe7UgTgYvFf8AgyfjHsFj7DqAPMhhSrWR\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"bigTreasury": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "dcfPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "payment",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "publicWorks",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "sell",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "subscribe",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"treasury.sol\":7264:9444  contract bigTreasury{... */\n  mstore(0x40, 0x80)\n    /* \"treasury.sol\":7343:7385  0xC77f56De066fE50C3e1564bA1cec85aC0aD663cE */\n  0xc77f56de066fe50c3e1564ba1cec85ac0ad663ce\n    /* \"treasury.sol\":7323:7386  IERC20 dcf = IERC20(0xC77f56De066fE50C3e1564bA1cec85aC0aD663cE) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"treasury.sol\":7641:7746  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"treasury.sol\":7673:7683  msg.sender */\n  caller\n    /* \"treasury.sol\":7665:7670  owner */\n  0x01\n  0x00\n    /* \"treasury.sol\":7665:7683  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"treasury.sol\":7708:7711  500 */\n  0x01f4\n    /* \"treasury.sol\":7695:7705  profitRate */\n  0x02\n    /* \"treasury.sol\":7695:7711  profitRate = 500 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"treasury.sol\":7728:7730  10 */\n  0x0a\n    /* \"treasury.sol\":7722:7725  tax */\n  0x05\n    /* \"treasury.sol\":7722:7730  tax = 10 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"treasury.sol\":7264:9444  contract bigTreasury{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"treasury.sol\":7264:9444  contract bigTreasury{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x42f6487a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x6bb4e283\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8f449a05\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa7d9c57e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xe4849b32\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"treasury.sol\":7762:7868  function payment()external payable{... */\n    tag_2:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"treasury.sol\":8959:9165  function dcfPrice()public view returns(uint){        ... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"treasury.sol\":7882:8235  function subscribe()external payable{... */\n    tag_4:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"treasury.sol\":9319:9435  function publicWorks()external onlyOwner{... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"treasury.sol\":8499:8939  function sell(uint dcf_amount)external{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"treasury.sol\":7762:7868  function payment()external payable{... */\n    tag_8:\n        /* \"treasury.sol\":7827:7828  0 */\n      0x00\n        /* \"treasury.sol\":7815:7824  msg.value */\n      callvalue\n        /* \"treasury.sol\":7815:7828  msg.value > 0 */\n      gt\n        /* \"treasury.sol\":7807:7829  require(msg.value > 0) */\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n        /* \"treasury.sol\":7842:7854  allocation() */\n      tag_26\n        /* \"treasury.sol\":7842:7852  allocation */\n      tag_27\n        /* \"treasury.sol\":7842:7854  allocation() */\n      jump\t// in\n    tag_26:\n        /* \"treasury.sol\":7762:7868  function payment()external payable{... */\n      jump\t// out\n        /* \"treasury.sol\":8959:9165  function dcfPrice()public view returns(uint){        ... */\n    tag_11:\n        /* \"treasury.sol\":8998:9002  uint */\n      0x00\n        /* \"treasury.sol\":9022:9041  uint dcfTotlaSupply */\n      dup1\n        /* \"treasury.sol\":9044:9047  dcf */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury.sol\":9044:9059  dcf.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"treasury.sol\":9044:9061  dcf.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"treasury.sol\":9022:9061  uint dcfTotlaSupply = dcf.totalSupply() */\n      swap1\n      pop\n        /* \"treasury.sol\":9072:9082  uint price */\n      0x00\n        /* \"treasury.sol\":9085:9134  uint(1e18).mul(profitSharing).div(dcfTotlaSupply) */\n      tag_33\n        /* \"treasury.sol\":9119:9133  dcfTotlaSupply */\n      dup3\n        /* \"treasury.sol\":9085:9114  uint(1e18).mul(profitSharing) */\n      tag_34\n        /* \"treasury.sol\":9100:9113  profitSharing */\n      sload(0x03)\n        /* \"treasury.sol\":9090:9094  1e18 */\n      0x0de0b6b3a7640000\n        /* \"treasury.sol\":9085:9099  uint(1e18).mul */\n      tag_35\n      swap1\n        /* \"treasury.sol\":9085:9114  uint(1e18).mul(profitSharing) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_34:\n        /* \"treasury.sol\":9085:9118  uint(1e18).mul(profitSharing).div */\n      tag_36\n      swap1\n        /* \"treasury.sol\":9085:9134  uint(1e18).mul(profitSharing).div(dcfTotlaSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_33:\n        /* \"treasury.sol\":9072:9134  uint price = uint(1e18).mul(profitSharing).div(dcfTotlaSupply) */\n      swap1\n      pop\n        /* \"treasury.sol\":9152:9157  price */\n      dup1\n        /* \"treasury.sol\":9145:9157  return price */\n      swap3\n      pop\n      pop\n      pop\n        /* \"treasury.sol\":8959:9165  function dcfPrice()public view returns(uint){        ... */\n      swap1\n      jump\t// out\n        /* \"treasury.sol\":7882:8235  function subscribe()external payable{... */\n    tag_15:\n        /* \"treasury.sol\":7950:7954  1e16 */\n      0x2386f26fc10000\n        /* \"treasury.sol\":7937:7946  msg.value */\n      callvalue\n        /* \"treasury.sol\":7937:7954  msg.value >= 1e16 */\n      lt\n      iszero\n        /* \"treasury.sol\":7929:7955  require(msg.value >= 1e16) */\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n        /* \"treasury.sol\":7966:7976  uint price */\n      0x00\n        /* \"treasury.sol\":7979:7989  dcfPrice() */\n      tag_39\n        /* \"treasury.sol\":7979:7987  dcfPrice */\n      tag_11\n        /* \"treasury.sol\":7979:7989  dcfPrice() */\n      jump\t// in\n    tag_39:\n        /* \"treasury.sol\":7966:7989  uint price = dcfPrice() */\n      swap1\n      pop\n        /* \"treasury.sol\":8008:8023  uint dcf_amount */\n      0x00\n        /* \"treasury.sol\":8026:8062  uint(1e18).mul(msg.value).div(price) */\n      tag_40\n        /* \"treasury.sol\":8056:8061  price */\n      dup3\n        /* \"treasury.sol\":8026:8051  uint(1e18).mul(msg.value) */\n      tag_41\n        /* \"treasury.sol\":8041:8050  msg.value */\n      callvalue\n        /* \"treasury.sol\":8031:8035  1e18 */\n      0x0de0b6b3a7640000\n        /* \"treasury.sol\":8026:8040  uint(1e18).mul */\n      tag_35\n      swap1\n        /* \"treasury.sol\":8026:8051  uint(1e18).mul(msg.value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_41:\n        /* \"treasury.sol\":8026:8055  uint(1e18).mul(msg.value).div */\n      tag_36\n      swap1\n        /* \"treasury.sol\":8026:8062  uint(1e18).mul(msg.value).div(price) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_40:\n        /* \"treasury.sol\":8008:8062  uint dcf_amount = uint(1e18).mul(msg.value).div(price) */\n      swap1\n      pop\n        /* \"treasury.sol\":8073:8081  uint fee */\n      0x00\n        /* \"treasury.sol\":8084:8113  dcf_amount.mul(tax).div(1000) */\n      tag_42\n        /* \"treasury.sol\":8108:8112  1000 */\n      0x03e8\n        /* \"treasury.sol\":8084:8103  dcf_amount.mul(tax) */\n      tag_43\n        /* \"treasury.sol\":8099:8102  tax */\n      sload(0x05)\n        /* \"treasury.sol\":8084:8094  dcf_amount */\n      dup6\n        /* \"treasury.sol\":8084:8098  dcf_amount.mul */\n      tag_35\n      swap1\n        /* \"treasury.sol\":8084:8103  dcf_amount.mul(tax) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_43:\n        /* \"treasury.sol\":8084:8107  dcf_amount.mul(tax).div */\n      tag_36\n      swap1\n        /* \"treasury.sol\":8084:8113  dcf_amount.mul(tax).div(1000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_42:\n        /* \"treasury.sol\":8073:8113  uint fee = dcf_amount.mul(tax).div(1000) */\n      swap1\n      pop\n        /* \"treasury.sol\":8137:8156  dcf_amount.sub(fee) */\n      tag_44\n        /* \"treasury.sol\":8152:8155  fee */\n      dup2\n        /* \"treasury.sol\":8137:8147  dcf_amount */\n      dup4\n        /* \"treasury.sol\":8137:8151  dcf_amount.sub */\n      tag_45\n      swap1\n        /* \"treasury.sol\":8137:8156  dcf_amount.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_44:\n        /* \"treasury.sol\":8124:8156  dcf_amount = dcf_amount.sub(fee) */\n      swap2\n      pop\n        /* \"treasury.sol\":8169:8172  dcf */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury.sol\":8169:8181  dcf.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"treasury.sol\":8182:8192  msg.sender */\n      caller\n        /* \"treasury.sol\":8193:8203  dcf_amount */\n      dup5\n        /* \"treasury.sol\":8169:8204  dcf.transfer(msg.sender,dcf_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_46\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      pop\n        /* \"treasury.sol\":8215:8227  allocation() */\n      tag_52\n        /* \"treasury.sol\":8215:8225  allocation */\n      tag_27\n        /* \"treasury.sol\":8215:8227  allocation() */\n      jump\t// in\n    tag_52:\n        /* \"treasury.sol\":7918:8235  {... */\n      pop\n      pop\n      pop\n        /* \"treasury.sol\":7882:8235  function subscribe()external payable{... */\n      jump\t// out\n        /* \"treasury.sol\":9319:9435  function publicWorks()external onlyOwner{... */\n    tag_18:\n        /* \"treasury.sol\":7564:7574  msg.sender */\n      caller\n        /* \"treasury.sol\":7555:7574  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury.sol\":7555:7560  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury.sol\":7555:7574  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"treasury.sol\":7547:7611  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"treasury.sol\":9378:9383  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury.sol\":9370:9393  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury.sol\":9370:9403  payable(owner).transfer(treasury) */\n      0x08fc\n        /* \"treasury.sol\":9394:9402  treasury */\n      sload(0x04)\n        /* \"treasury.sol\":9370:9403  payable(owner).transfer(treasury) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n        /* \"treasury.sol\":9425:9426  0 */\n      0x00\n        /* \"treasury.sol\":9414:9422  treasury */\n      0x04\n        /* \"treasury.sol\":9414:9426  treasury = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"treasury.sol\":9319:9435  function publicWorks()external onlyOwner{... */\n      jump\t// out\n        /* \"treasury.sol\":8499:8939  function sell(uint dcf_amount)external{... */\n    tag_23:\n        /* \"treasury.sol\":8584:8594  dcf_amount */\n      dup1\n        /* \"treasury.sol\":8555:8558  dcf */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury.sol\":8555:8568  dcf.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"treasury.sol\":8569:8579  msg.sender */\n      caller\n        /* \"treasury.sol\":8555:8580  dcf.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_65:\n        /* \"treasury.sol\":8555:8594  dcf.balanceOf(msg.sender) >= dcf_amount */\n      lt\n      iszero\n        /* \"treasury.sol\":8547:8595  require(dcf.balanceOf(msg.sender) >= dcf_amount) */\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n        /* \"treasury.sol\":8605:8615  uint price */\n      0x00\n        /* \"treasury.sol\":8618:8628  dcfPrice() */\n      tag_67\n        /* \"treasury.sol\":8618:8626  dcfPrice */\n      tag_11\n        /* \"treasury.sol\":8618:8628  dcfPrice() */\n      jump\t// in\n    tag_67:\n        /* \"treasury.sol\":8605:8628  uint price = dcfPrice() */\n      swap1\n      pop\n        /* \"treasury.sol\":8638:8653  uint eth_amount */\n      0x00\n        /* \"treasury.sol\":8656:8687  dcf_amount.mul(price).div(1e18) */\n      tag_68\n        /* \"treasury.sol\":8682:8686  1e18 */\n      0x0de0b6b3a7640000\n        /* \"treasury.sol\":8656:8677  dcf_amount.mul(price) */\n      tag_69\n        /* \"treasury.sol\":8671:8676  price */\n      dup5\n        /* \"treasury.sol\":8656:8666  dcf_amount */\n      dup7\n        /* \"treasury.sol\":8656:8670  dcf_amount.mul */\n      tag_35\n      swap1\n        /* \"treasury.sol\":8656:8677  dcf_amount.mul(price) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_69:\n        /* \"treasury.sol\":8656:8681  dcf_amount.mul(price).div */\n      tag_36\n      swap1\n        /* \"treasury.sol\":8656:8687  dcf_amount.mul(price).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_68:\n        /* \"treasury.sol\":8638:8687  uint eth_amount = dcf_amount.mul(price).div(1e18) */\n      swap1\n      pop\n        /* \"treasury.sol\":8699:8707  uint fee */\n      0x00\n        /* \"treasury.sol\":8710:8739  eth_amount.mul(tax).div(1000) */\n      tag_70\n        /* \"treasury.sol\":8734:8738  1000 */\n      0x03e8\n        /* \"treasury.sol\":8710:8729  eth_amount.mul(tax) */\n      tag_71\n        /* \"treasury.sol\":8725:8728  tax */\n      sload(0x05)\n        /* \"treasury.sol\":8710:8720  eth_amount */\n      dup6\n        /* \"treasury.sol\":8710:8724  eth_amount.mul */\n      tag_35\n      swap1\n        /* \"treasury.sol\":8710:8729  eth_amount.mul(tax) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_71:\n        /* \"treasury.sol\":8710:8733  eth_amount.mul(tax).div */\n      tag_36\n      swap1\n        /* \"treasury.sol\":8710:8739  eth_amount.mul(tax).div(1000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"treasury.sol\":8699:8739  uint fee = eth_amount.mul(tax).div(1000) */\n      swap1\n      pop\n        /* \"treasury.sol\":8773:8792  eth_amount.sub(fee) */\n      tag_72\n        /* \"treasury.sol\":8788:8791  fee */\n      dup2\n        /* \"treasury.sol\":8773:8783  eth_amount */\n      dup4\n        /* \"treasury.sol\":8773:8787  eth_amount.sub */\n      tag_45\n      swap1\n        /* \"treasury.sol\":8773:8792  eth_amount.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"treasury.sol\":8760:8792  eth_amount = eth_amount.sub(fee) */\n      swap2\n      pop\n        /* \"treasury.sol\":8816:8826  msg.sender */\n      caller\n        /* \"treasury.sol\":8808:8836  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury.sol\":8808:8848  payable(msg.sender).transfer(eth_amount) */\n      0x08fc\n        /* \"treasury.sol\":8837:8847  eth_amount */\n      dup4\n        /* \"treasury.sol\":8808:8848  payable(msg.sender).transfer(eth_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n        /* \"treasury.sol\":8874:8903  profitSharing.sub(eth_amount) */\n      tag_75\n        /* \"treasury.sol\":8892:8902  eth_amount */\n      dup3\n        /* \"treasury.sol\":8874:8887  profitSharing */\n      sload(0x03)\n        /* \"treasury.sol\":8874:8891  profitSharing.sub */\n      tag_45\n      swap1\n        /* \"treasury.sol\":8874:8903  profitSharing.sub(eth_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_75:\n        /* \"treasury.sol\":8858:8871  profitSharing */\n      0x03\n        /* \"treasury.sol\":8858:8903  profitSharing = profitSharing.sub(eth_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"treasury.sol\":8915:8931  burn(dcf_amount) */\n      tag_76\n        /* \"treasury.sol\":8920:8930  dcf_amount */\n      dup5\n        /* \"treasury.sol\":8915:8919  burn */\n      tag_77\n        /* \"treasury.sol\":8915:8931  burn(dcf_amount) */\n      jump\t// in\n    tag_76:\n        /* \"treasury.sol\":8537:8939  {... */\n      pop\n      pop\n      pop\n        /* \"treasury.sol\":8499:8939  function sell(uint dcf_amount)external{... */\n      pop\n      jump\t// out\n        /* \"treasury.sol\":8245:8458  function allocation()private{... */\n    tag_27:\n        /* \"treasury.sol\":8284:8295  uint profit */\n      0x00\n        /* \"treasury.sol\":8298:8333  msg.value.mul(profitRate).div(1000) */\n      tag_79\n        /* \"treasury.sol\":8328:8332  1000 */\n      0x03e8\n        /* \"treasury.sol\":8298:8323  msg.value.mul(profitRate) */\n      tag_80\n        /* \"treasury.sol\":8312:8322  profitRate */\n      sload(0x02)\n        /* \"treasury.sol\":8298:8307  msg.value */\n      callvalue\n        /* \"treasury.sol\":8298:8311  msg.value.mul */\n      tag_35\n      swap1\n        /* \"treasury.sol\":8298:8323  msg.value.mul(profitRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_80:\n        /* \"treasury.sol\":8298:8327  msg.value.mul(profitRate).div */\n      tag_36\n      swap1\n        /* \"treasury.sol\":8298:8333  msg.value.mul(profitRate).div(1000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_79:\n        /* \"treasury.sol\":8284:8333  uint profit = msg.value.mul(profitRate).div(1000) */\n      swap1\n      pop\n        /* \"treasury.sol\":8368:8393  profitSharing.add(profit) */\n      tag_81\n        /* \"treasury.sol\":8386:8392  profit */\n      dup2\n        /* \"treasury.sol\":8368:8381  profitSharing */\n      sload(0x03)\n        /* \"treasury.sol\":8368:8385  profitSharing.add */\n      tag_82\n      swap1\n        /* \"treasury.sol\":8368:8393  profitSharing.add(profit) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"treasury.sol\":8352:8365  profitSharing */\n      0x03\n        /* \"treasury.sol\":8352:8393  profitSharing = profitSharing.add(profit) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"treasury.sol\":8415:8450  treasury.add(msg.value.sub(profit)) */\n      tag_83\n        /* \"treasury.sol\":8428:8449  msg.value.sub(profit) */\n      tag_84\n        /* \"treasury.sol\":8442:8448  profit */\n      dup3\n        /* \"treasury.sol\":8428:8437  msg.value */\n      callvalue\n        /* \"treasury.sol\":8428:8441  msg.value.sub */\n      tag_45\n      swap1\n        /* \"treasury.sol\":8428:8449  msg.value.sub(profit) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_84:\n        /* \"treasury.sol\":8415:8423  treasury */\n      sload(0x04)\n        /* \"treasury.sol\":8415:8427  treasury.add */\n      tag_82\n      swap1\n        /* \"treasury.sol\":8415:8450  treasury.add(msg.value.sub(profit)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_83:\n        /* \"treasury.sol\":8404:8412  treasury */\n      0x04\n        /* \"treasury.sol\":8404:8450  treasury = treasury.add(msg.value.sub(profit)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"treasury.sol\":8273:8458  {... */\n      pop\n        /* \"treasury.sol\":8245:8458  function allocation()private{... */\n      jump\t// out\n        /* \"treasury.sol\":3511:3609  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_35:\n        /* \"treasury.sol\":3569:3576  uint256 */\n      0x00\n        /* \"treasury.sol\":3600:3601  b */\n      dup2\n        /* \"treasury.sol\":3596:3597  a */\n      dup4\n        /* \"treasury.sol\":3596:3601  a * b */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"treasury.sol\":3589:3601  return a * b */\n      swap1\n      pop\n        /* \"treasury.sol\":3511:3609  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"treasury.sol\":3910:4008  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_36:\n        /* \"treasury.sol\":3968:3975  uint256 */\n      0x00\n        /* \"treasury.sol\":3999:4000  b */\n      dup2\n        /* \"treasury.sol\":3995:3996  a */\n      dup4\n        /* \"treasury.sol\":3995:4000  a / b */\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"treasury.sol\":3988:4000  return a / b */\n      swap1\n      pop\n        /* \"treasury.sol\":3910:4008  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"treasury.sol\":3154:3252  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_45:\n        /* \"treasury.sol\":3212:3219  uint256 */\n      0x00\n        /* \"treasury.sol\":3243:3244  b */\n      dup2\n        /* \"treasury.sol\":3239:3240  a */\n      dup4\n        /* \"treasury.sol\":3239:3244  a - b */\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"treasury.sol\":3232:3244  return a - b */\n      swap1\n      pop\n        /* \"treasury.sol\":3154:3252  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"treasury.sol\":9173:9264  function burn(uint dcf_amount)private{... */\n    tag_77:\n        /* \"treasury.sol\":9221:9224  dcf */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury.sol\":9221:9233  dcf.burnFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x79cc6790\n        /* \"treasury.sol\":9234:9244  msg.sender */\n      caller\n        /* \"treasury.sol\":9245:9255  dcf_amount */\n      dup4\n        /* \"treasury.sol\":9221:9256  dcf.burnFrom(msg.sender,dcf_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_95:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n        /* \"treasury.sol\":9173:9264  function burn(uint dcf_amount)private{... */\n      pop\n      jump\t// out\n        /* \"treasury.sol\":2773:2871  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_82:\n        /* \"treasury.sol\":2831:2838  uint256 */\n      0x00\n        /* \"treasury.sol\":2862:2863  b */\n      dup2\n        /* \"treasury.sol\":2858:2859  a */\n      dup4\n        /* \"treasury.sol\":2858:2863  a + b */\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"treasury.sol\":2851:2863  return a + b */\n      swap1\n      pop\n        /* \"treasury.sol\":2773:2871  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_102:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_103:\n        /* \"#utility.yul\":177:201   */\n      tag_124\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_102\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_13:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_126\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_103\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_105:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_107:\n        /* \"#utility.yul\":842:866   */\n      tag_131\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_102\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_132\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_132:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_108:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_134\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_107\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_22:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_137\n      tag_105\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1118:1237   */\n    tag_136:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_138\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_108\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1520   */\n    tag_109:\n        /* \"#utility.yul\":1434:1439   */\n      0x00\n        /* \"#utility.yul\":1465:1471   */\n      dup2\n        /* \"#utility.yul\":1459:1472   */\n      mload\n        /* \"#utility.yul\":1450:1472   */\n      swap1\n      pop\n        /* \"#utility.yul\":1481:1514   */\n      tag_140\n        /* \"#utility.yul\":1508:1513   */\n      dup2\n        /* \"#utility.yul\":1481:1514   */\n      tag_107\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1377:1520   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1526:1877   */\n    tag_32:\n        /* \"#utility.yul\":1596:1602   */\n      0x00\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1633:1642   */\n      dup3\n        /* \"#utility.yul\":1624:1631   */\n      dup5\n        /* \"#utility.yul\":1620:1643   */\n      sub\n        /* \"#utility.yul\":1616:1648   */\n      slt\n        /* \"#utility.yul\":1613:1732   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":1651:1730   */\n      tag_143\n      tag_105\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1613:1732   */\n    tag_142:\n        /* \"#utility.yul\":1771:1772   */\n      0x00\n        /* \"#utility.yul\":1796:1860   */\n      tag_144\n        /* \"#utility.yul\":1852:1859   */\n      dup5\n        /* \"#utility.yul\":1843:1849   */\n      dup3\n        /* \"#utility.yul\":1832:1841   */\n      dup6\n        /* \"#utility.yul\":1828:1850   */\n      add\n        /* \"#utility.yul\":1796:1860   */\n      tag_109\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1786:1860   */\n      swap2\n      pop\n        /* \"#utility.yul\":1742:1870   */\n      pop\n        /* \"#utility.yul\":1526:1877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1883:2009   */\n    tag_110:\n        /* \"#utility.yul\":1920:1927   */\n      0x00\n        /* \"#utility.yul\":1960:2002   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1953:1958   */\n      dup3\n        /* \"#utility.yul\":1949:2003   */\n      and\n        /* \"#utility.yul\":1938:2003   */\n      swap1\n      pop\n        /* \"#utility.yul\":1883:2009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2015:2111   */\n    tag_111:\n        /* \"#utility.yul\":2052:2059   */\n      0x00\n        /* \"#utility.yul\":2081:2105   */\n      tag_147\n        /* \"#utility.yul\":2099:2104   */\n      dup3\n        /* \"#utility.yul\":2081:2105   */\n      tag_110\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2070:2105   */\n      swap1\n      pop\n        /* \"#utility.yul\":2015:2111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2117:2235   */\n    tag_112:\n        /* \"#utility.yul\":2204:2228   */\n      tag_149\n        /* \"#utility.yul\":2222:2227   */\n      dup2\n        /* \"#utility.yul\":2204:2228   */\n      tag_111\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2199:2202   */\n      dup3\n        /* \"#utility.yul\":2192:2229   */\n      mstore\n        /* \"#utility.yul\":2117:2235   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2241:2573   */\n    tag_47:\n        /* \"#utility.yul\":2362:2366   */\n      0x00\n        /* \"#utility.yul\":2400:2402   */\n      0x40\n        /* \"#utility.yul\":2389:2398   */\n      dup3\n        /* \"#utility.yul\":2385:2403   */\n      add\n        /* \"#utility.yul\":2377:2403   */\n      swap1\n      pop\n        /* \"#utility.yul\":2413:2484   */\n      tag_151\n        /* \"#utility.yul\":2481:2482   */\n      0x00\n        /* \"#utility.yul\":2470:2479   */\n      dup4\n        /* \"#utility.yul\":2466:2483   */\n      add\n        /* \"#utility.yul\":2457:2463   */\n      dup6\n        /* \"#utility.yul\":2413:2484   */\n      tag_112\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2494:2566   */\n      tag_152\n        /* \"#utility.yul\":2562:2564   */\n      0x20\n        /* \"#utility.yul\":2551:2560   */\n      dup4\n        /* \"#utility.yul\":2547:2565   */\n      add\n        /* \"#utility.yul\":2538:2544   */\n      dup5\n        /* \"#utility.yul\":2494:2566   */\n      tag_103\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":2241:2573   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2579:2669   */\n    tag_113:\n        /* \"#utility.yul\":2613:2620   */\n      0x00\n        /* \"#utility.yul\":2656:2661   */\n      dup2\n        /* \"#utility.yul\":2649:2662   */\n      iszero\n        /* \"#utility.yul\":2642:2663   */\n      iszero\n        /* \"#utility.yul\":2631:2663   */\n      swap1\n      pop\n        /* \"#utility.yul\":2579:2669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2675:2791   */\n    tag_114:\n        /* \"#utility.yul\":2745:2766   */\n      tag_155\n        /* \"#utility.yul\":2760:2765   */\n      dup2\n        /* \"#utility.yul\":2745:2766   */\n      tag_113\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2738:2743   */\n      dup2\n        /* \"#utility.yul\":2735:2767   */\n      eq\n        /* \"#utility.yul\":2725:2785   */\n      tag_156\n      jumpi\n        /* \"#utility.yul\":2781:2782   */\n      0x00\n        /* \"#utility.yul\":2778:2779   */\n      dup1\n        /* \"#utility.yul\":2771:2783   */\n      revert\n        /* \"#utility.yul\":2725:2785   */\n    tag_156:\n        /* \"#utility.yul\":2675:2791   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2797:2934   */\n    tag_115:\n        /* \"#utility.yul\":2851:2856   */\n      0x00\n        /* \"#utility.yul\":2882:2888   */\n      dup2\n        /* \"#utility.yul\":2876:2889   */\n      mload\n        /* \"#utility.yul\":2867:2889   */\n      swap1\n      pop\n        /* \"#utility.yul\":2898:2928   */\n      tag_158\n        /* \"#utility.yul\":2922:2927   */\n      dup2\n        /* \"#utility.yul\":2898:2928   */\n      tag_114\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2797:2934   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2940:3285   */\n    tag_51:\n        /* \"#utility.yul\":3007:3013   */\n      0x00\n        /* \"#utility.yul\":3056:3058   */\n      0x20\n        /* \"#utility.yul\":3044:3053   */\n      dup3\n        /* \"#utility.yul\":3035:3042   */\n      dup5\n        /* \"#utility.yul\":3031:3054   */\n      sub\n        /* \"#utility.yul\":3027:3059   */\n      slt\n        /* \"#utility.yul\":3024:3143   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":3062:3141   */\n      tag_161\n      tag_105\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3024:3143   */\n    tag_160:\n        /* \"#utility.yul\":3182:3183   */\n      0x00\n        /* \"#utility.yul\":3207:3268   */\n      tag_162\n        /* \"#utility.yul\":3260:3267   */\n      dup5\n        /* \"#utility.yul\":3251:3257   */\n      dup3\n        /* \"#utility.yul\":3240:3249   */\n      dup6\n        /* \"#utility.yul\":3236:3258   */\n      add\n        /* \"#utility.yul\":3207:3268   */\n      tag_115\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3197:3268   */\n      swap2\n      pop\n        /* \"#utility.yul\":3153:3278   */\n      pop\n        /* \"#utility.yul\":2940:3285   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3291:3460   */\n    tag_116:\n        /* \"#utility.yul\":3375:3386   */\n      0x00\n        /* \"#utility.yul\":3409:3415   */\n      dup3\n        /* \"#utility.yul\":3404:3407   */\n      dup3\n        /* \"#utility.yul\":3397:3416   */\n      mstore\n        /* \"#utility.yul\":3449:3453   */\n      0x20\n        /* \"#utility.yul\":3444:3447   */\n      dup3\n        /* \"#utility.yul\":3440:3454   */\n      add\n        /* \"#utility.yul\":3425:3454   */\n      swap1\n      pop\n        /* \"#utility.yul\":3291:3460   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3466:3648   */\n    tag_117:\n        /* \"#utility.yul\":3606:3640   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3602:3603   */\n      0x00\n        /* \"#utility.yul\":3594:3600   */\n      dup3\n        /* \"#utility.yul\":3590:3604   */\n      add\n        /* \"#utility.yul\":3583:3641   */\n      mstore\n        /* \"#utility.yul\":3466:3648   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3654:4020   */\n    tag_118:\n        /* \"#utility.yul\":3796:3799   */\n      0x00\n        /* \"#utility.yul\":3817:3884   */\n      tag_166\n        /* \"#utility.yul\":3881:3883   */\n      0x20\n        /* \"#utility.yul\":3876:3879   */\n      dup4\n        /* \"#utility.yul\":3817:3884   */\n      tag_116\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":3810:3884   */\n      swap2\n      pop\n        /* \"#utility.yul\":3893:3986   */\n      tag_167\n        /* \"#utility.yul\":3982:3985   */\n      dup3\n        /* \"#utility.yul\":3893:3986   */\n      tag_117\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":4011:4013   */\n      0x20\n        /* \"#utility.yul\":4006:4009   */\n      dup3\n        /* \"#utility.yul\":4002:4014   */\n      add\n        /* \"#utility.yul\":3995:4014   */\n      swap1\n      pop\n        /* \"#utility.yul\":3654:4020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4445   */\n    tag_56:\n        /* \"#utility.yul\":4192:4196   */\n      0x00\n        /* \"#utility.yul\":4230:4232   */\n      0x20\n        /* \"#utility.yul\":4219:4228   */\n      dup3\n        /* \"#utility.yul\":4215:4233   */\n      add\n        /* \"#utility.yul\":4207:4233   */\n      swap1\n      pop\n        /* \"#utility.yul\":4279:4288   */\n      dup2\n        /* \"#utility.yul\":4273:4277   */\n      dup2\n        /* \"#utility.yul\":4269:4289   */\n      sub\n        /* \"#utility.yul\":4265:4266   */\n      0x00\n        /* \"#utility.yul\":4254:4263   */\n      dup4\n        /* \"#utility.yul\":4250:4267   */\n      add\n        /* \"#utility.yul\":4243:4290   */\n      mstore\n        /* \"#utility.yul\":4307:4438   */\n      tag_169\n        /* \"#utility.yul\":4433:4437   */\n      dup2\n        /* \"#utility.yul\":4307:4438   */\n      tag_118\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":4299:4438   */\n      swap1\n      pop\n        /* \"#utility.yul\":4026:4445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4451:4673   */\n    tag_62:\n        /* \"#utility.yul\":4544:4548   */\n      0x00\n        /* \"#utility.yul\":4582:4584   */\n      0x20\n        /* \"#utility.yul\":4571:4580   */\n      dup3\n        /* \"#utility.yul\":4567:4585   */\n      add\n        /* \"#utility.yul\":4559:4585   */\n      swap1\n      pop\n        /* \"#utility.yul\":4595:4666   */\n      tag_171\n        /* \"#utility.yul\":4663:4664   */\n      0x00\n        /* \"#utility.yul\":4652:4661   */\n      dup4\n        /* \"#utility.yul\":4648:4665   */\n      add\n        /* \"#utility.yul\":4639:4645   */\n      dup5\n        /* \"#utility.yul\":4595:4666   */\n      tag_112\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":4451:4673   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4679:4859   */\n    tag_119:\n        /* \"#utility.yul\":4727:4804   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4724:4725   */\n      0x00\n        /* \"#utility.yul\":4717:4805   */\n      mstore\n        /* \"#utility.yul\":4824:4828   */\n      0x11\n        /* \"#utility.yul\":4821:4822   */\n      0x04\n        /* \"#utility.yul\":4814:4829   */\n      mstore\n        /* \"#utility.yul\":4848:4852   */\n      0x24\n        /* \"#utility.yul\":4845:4846   */\n      0x00\n        /* \"#utility.yul\":4838:4853   */\n      revert\n        /* \"#utility.yul\":4865:5213   */\n    tag_87:\n        /* \"#utility.yul\":4905:4912   */\n      0x00\n        /* \"#utility.yul\":4928:4948   */\n      tag_174\n        /* \"#utility.yul\":4946:4947   */\n      dup3\n        /* \"#utility.yul\":4928:4948   */\n      tag_102\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":4923:4948   */\n      swap2\n      pop\n        /* \"#utility.yul\":4962:4982   */\n      tag_175\n        /* \"#utility.yul\":4980:4981   */\n      dup4\n        /* \"#utility.yul\":4962:4982   */\n      tag_102\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4957:4982   */\n      swap3\n      pop\n        /* \"#utility.yul\":5150:5151   */\n      dup2\n        /* \"#utility.yul\":5082:5148   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5078:5152   */\n      div\n        /* \"#utility.yul\":5075:5076   */\n      dup4\n        /* \"#utility.yul\":5072:5153   */\n      gt\n        /* \"#utility.yul\":5067:5068   */\n      dup3\n        /* \"#utility.yul\":5060:5069   */\n      iszero\n        /* \"#utility.yul\":5053:5070   */\n      iszero\n        /* \"#utility.yul\":5049:5154   */\n      and\n        /* \"#utility.yul\":5046:5177   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":5157:5175   */\n      tag_177\n      tag_119\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":5046:5177   */\n    tag_176:\n        /* \"#utility.yul\":5205:5206   */\n      dup3\n        /* \"#utility.yul\":5202:5203   */\n      dup3\n        /* \"#utility.yul\":5198:5207   */\n      mul\n        /* \"#utility.yul\":5187:5207   */\n      swap1\n      pop\n        /* \"#utility.yul\":4865:5213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5219:5399   */\n    tag_120:\n        /* \"#utility.yul\":5267:5344   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5264:5265   */\n      0x00\n        /* \"#utility.yul\":5257:5345   */\n      mstore\n        /* \"#utility.yul\":5364:5368   */\n      0x12\n        /* \"#utility.yul\":5361:5362   */\n      0x04\n        /* \"#utility.yul\":5354:5369   */\n      mstore\n        /* \"#utility.yul\":5388:5392   */\n      0x24\n        /* \"#utility.yul\":5385:5386   */\n      0x00\n        /* \"#utility.yul\":5378:5393   */\n      revert\n        /* \"#utility.yul\":5405:5590   */\n    tag_90:\n        /* \"#utility.yul\":5445:5446   */\n      0x00\n        /* \"#utility.yul\":5462:5482   */\n      tag_180\n        /* \"#utility.yul\":5480:5481   */\n      dup3\n        /* \"#utility.yul\":5462:5482   */\n      tag_102\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":5457:5482   */\n      swap2\n      pop\n        /* \"#utility.yul\":5496:5516   */\n      tag_181\n        /* \"#utility.yul\":5514:5515   */\n      dup4\n        /* \"#utility.yul\":5496:5516   */\n      tag_102\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5491:5516   */\n      swap3\n      pop\n        /* \"#utility.yul\":5535:5536   */\n      dup3\n        /* \"#utility.yul\":5525:5560   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":5540:5558   */\n      tag_183\n      tag_120\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":5525:5560   */\n    tag_182:\n        /* \"#utility.yul\":5582:5583   */\n      dup3\n        /* \"#utility.yul\":5579:5580   */\n      dup3\n        /* \"#utility.yul\":5575:5584   */\n      div\n        /* \"#utility.yul\":5570:5584   */\n      swap1\n      pop\n        /* \"#utility.yul\":5405:5590   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5596:5787   */\n    tag_93:\n        /* \"#utility.yul\":5636:5640   */\n      0x00\n        /* \"#utility.yul\":5656:5676   */\n      tag_185\n        /* \"#utility.yul\":5674:5675   */\n      dup3\n        /* \"#utility.yul\":5656:5676   */\n      tag_102\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":5651:5676   */\n      swap2\n      pop\n        /* \"#utility.yul\":5690:5710   */\n      tag_186\n        /* \"#utility.yul\":5708:5709   */\n      dup4\n        /* \"#utility.yul\":5690:5710   */\n      tag_102\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":5685:5710   */\n      swap3\n      pop\n        /* \"#utility.yul\":5729:5730   */\n      dup3\n        /* \"#utility.yul\":5726:5727   */\n      dup3\n        /* \"#utility.yul\":5723:5731   */\n      lt\n        /* \"#utility.yul\":5720:5754   */\n      iszero\n      tag_187\n      jumpi\n        /* \"#utility.yul\":5734:5752   */\n      tag_188\n      tag_119\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":5720:5754   */\n    tag_187:\n        /* \"#utility.yul\":5779:5780   */\n      dup3\n        /* \"#utility.yul\":5776:5777   */\n      dup3\n        /* \"#utility.yul\":5772:5781   */\n      sub\n        /* \"#utility.yul\":5764:5781   */\n      swap1\n      pop\n        /* \"#utility.yul\":5596:5787   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5793:6098   */\n    tag_101:\n        /* \"#utility.yul\":5833:5836   */\n      0x00\n        /* \"#utility.yul\":5852:5872   */\n      tag_190\n        /* \"#utility.yul\":5870:5871   */\n      dup3\n        /* \"#utility.yul\":5852:5872   */\n      tag_102\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":5847:5872   */\n      swap2\n      pop\n        /* \"#utility.yul\":5886:5906   */\n      tag_191\n        /* \"#utility.yul\":5904:5905   */\n      dup4\n        /* \"#utility.yul\":5886:5906   */\n      tag_102\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":5881:5906   */\n      swap3\n      pop\n        /* \"#utility.yul\":6040:6041   */\n      dup3\n        /* \"#utility.yul\":5972:6038   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5968:6042   */\n      sub\n        /* \"#utility.yul\":5965:5966   */\n      dup3\n        /* \"#utility.yul\":5962:6043   */\n      gt\n        /* \"#utility.yul\":5959:6066   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":6046:6064   */\n      tag_193\n      tag_119\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":5959:6066   */\n    tag_192:\n        /* \"#utility.yul\":6090:6091   */\n      dup3\n        /* \"#utility.yul\":6087:6088   */\n      dup3\n        /* \"#utility.yul\":6083:6092   */\n      add\n        /* \"#utility.yul\":6076:6092   */\n      swap1\n      pop\n        /* \"#utility.yul\":5793:6098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122091ffd20bc6a5a7b7d37c475efb77aed35a5600b46892b3e7d86797e2c5eb87d964736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_388": {
									"entryPoint": null,
									"id": 388,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273c77f56de066fe50c3e1564ba1cec85ac0ad663ce6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101f4600281905550600a600581905550610ad2806100c66000396000f3fe60806040526004361061004a5760003560e01c806342f6487a1461004f5780636bb4e283146100595780638f449a0514610084578063a7d9c57e1461008e578063e4849b32146100a5575b600080fd5b6100576100ce565b005b34801561006557600080fd5b5061006e6100e5565b60405161007b9190610707565b60405180910390f35b61008c6101b4565b005b34801561009a57600080fd5b506100a36102f3565b005b3480156100b157600080fd5b506100cc60048036038101906100c79190610753565b6103f8565b005b600034116100db57600080fd5b6100e361058e565b565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610153573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101779190610795565b905060006101aa8261019c600354670de0b6b3a764000061060690919063ffffffff16565b61061c90919063ffffffff16565b9050809250505090565b662386f26fc100003410156101c857600080fd5b60006101d26100e5565b90506000610203826101f534670de0b6b3a764000061060690919063ffffffff16565b61061c90919063ffffffff16565b905060006102306103e86102226005548561060690919063ffffffff16565b61061c90919063ffffffff16565b9050610245818361063290919063ffffffff16565b915060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016102a2929190610803565b6020604051808303816000875af11580156102c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e59190610864565b506102ee61058e565b505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610383576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037a906108ee565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f193505050501580156103ed573d6000803e3d6000fd5b506000600481905550565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610452919061090e565b602060405180830381865afa15801561046f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104939190610795565b101561049e57600080fd5b60006104a86100e5565b905060006104d9670de0b6b3a76400006104cb848661060690919063ffffffff16565b61061c90919063ffffffff16565b905060006105066103e86104f86005548561060690919063ffffffff16565b61061c90919063ffffffff16565b905061051b818361063290919063ffffffff16565b91503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610563573d6000803e3d6000fd5b506105798260035461063290919063ffffffff16565b60038190555061058884610648565b50505050565b60006105b96103e86105ab6002543461060690919063ffffffff16565b61061c90919063ffffffff16565b90506105d0816003546106d890919063ffffffff16565b6003819055506105fd6105ec823461063290919063ffffffff16565b6004546106d890919063ffffffff16565b60048190555050565b600081836106149190610958565b905092915050565b6000818361062a91906109e1565b905092915050565b600081836106409190610a12565b905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379cc679033836040518363ffffffff1660e01b81526004016106a3929190610803565b600060405180830381600087803b1580156106bd57600080fd5b505af11580156106d1573d6000803e3d6000fd5b5050505050565b600081836106e69190610a46565b905092915050565b6000819050919050565b610701816106ee565b82525050565b600060208201905061071c60008301846106f8565b92915050565b600080fd5b610730816106ee565b811461073b57600080fd5b50565b60008135905061074d81610727565b92915050565b60006020828403121561076957610768610722565b5b60006107778482850161073e565b91505092915050565b60008151905061078f81610727565b92915050565b6000602082840312156107ab576107aa610722565b5b60006107b984828501610780565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107ed826107c2565b9050919050565b6107fd816107e2565b82525050565b600060408201905061081860008301856107f4565b61082560208301846106f8565b9392505050565b60008115159050919050565b6108418161082c565b811461084c57600080fd5b50565b60008151905061085e81610838565b92915050565b60006020828403121561087a57610879610722565b5b60006108888482850161084f565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006108d8602083610891565b91506108e3826108a2565b602082019050919050565b60006020820190508181036000830152610907816108cb565b9050919050565b600060208201905061092360008301846107f4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610963826106ee565b915061096e836106ee565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156109a7576109a6610929565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006109ec826106ee565b91506109f7836106ee565b925082610a0757610a066109b2565b5b828204905092915050565b6000610a1d826106ee565b9150610a28836106ee565b925082821015610a3b57610a3a610929565b5b828203905092915050565b6000610a51826106ee565b9150610a5c836106ee565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a9157610a90610929565b5b82820190509291505056fea264697066735822122091ffd20bc6a5a7b7d37c475efb77aed35a5600b46892b3e7d86797e2c5eb87d964736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xC77F56DE066FE50C3E1564BA1CEC85AC0AD663CE PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1F4 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0xAD2 DUP1 PUSH2 0xC6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42F6487A EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x6BB4E283 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x8F449A05 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xA7D9C57E EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x57 PUSH2 0xCE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E PUSH2 0xE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C PUSH2 0x1B4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA3 PUSH2 0x2F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x753 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE3 PUSH2 0x58E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x153 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AA DUP3 PUSH2 0x19C PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x606 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x61C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE LT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D2 PUSH2 0xE5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x203 DUP3 PUSH2 0x1F5 CALLVALUE PUSH8 0xDE0B6B3A7640000 PUSH2 0x606 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x61C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x230 PUSH2 0x3E8 PUSH2 0x222 PUSH1 0x5 SLOAD DUP6 PUSH2 0x606 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x61C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x245 DUP2 DUP4 PUSH2 0x632 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A2 SWAP3 SWAP2 SWAP1 PUSH2 0x803 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST POP PUSH2 0x2EE PUSH2 0x58E JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x383 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37A SWAP1 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x4 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST LT ISZERO PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4A8 PUSH2 0xE5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D9 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4CB DUP5 DUP7 PUSH2 0x606 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x61C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x506 PUSH2 0x3E8 PUSH2 0x4F8 PUSH1 0x5 SLOAD DUP6 PUSH2 0x606 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x61C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x51B DUP2 DUP4 PUSH2 0x632 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x563 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x579 DUP3 PUSH1 0x3 SLOAD PUSH2 0x632 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x588 DUP5 PUSH2 0x648 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B9 PUSH2 0x3E8 PUSH2 0x5AB PUSH1 0x2 SLOAD CALLVALUE PUSH2 0x606 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x61C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x5D0 DUP2 PUSH1 0x3 SLOAD PUSH2 0x6D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x5FD PUSH2 0x5EC DUP3 CALLVALUE PUSH2 0x632 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x6D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x958 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x9E1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x640 SWAP2 SWAP1 PUSH2 0xA12 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x79CC6790 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A3 SWAP3 SWAP2 SWAP1 PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0xA46 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x701 DUP2 PUSH2 0x6EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x71C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x730 DUP2 PUSH2 0x6EE JUMP JUMPDEST DUP2 EQ PUSH2 0x73B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x74D DUP2 PUSH2 0x727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x769 JUMPI PUSH2 0x768 PUSH2 0x722 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x777 DUP5 DUP3 DUP6 ADD PUSH2 0x73E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x78F DUP2 PUSH2 0x727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AB JUMPI PUSH2 0x7AA PUSH2 0x722 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7B9 DUP5 DUP3 DUP6 ADD PUSH2 0x780 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7ED DUP3 PUSH2 0x7C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FD DUP2 PUSH2 0x7E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x818 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7F4 JUMP JUMPDEST PUSH2 0x825 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6F8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x841 DUP2 PUSH2 0x82C JUMP JUMPDEST DUP2 EQ PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x85E DUP2 PUSH2 0x838 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x87A JUMPI PUSH2 0x879 PUSH2 0x722 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x888 DUP5 DUP3 DUP6 ADD PUSH2 0x84F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D8 PUSH1 0x20 DUP4 PUSH2 0x891 JUMP JUMPDEST SWAP2 POP PUSH2 0x8E3 DUP3 PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x907 DUP2 PUSH2 0x8CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x923 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x963 DUP3 PUSH2 0x6EE JUMP JUMPDEST SWAP2 POP PUSH2 0x96E DUP4 PUSH2 0x6EE JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x9A7 JUMPI PUSH2 0x9A6 PUSH2 0x929 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9EC DUP3 PUSH2 0x6EE JUMP JUMPDEST SWAP2 POP PUSH2 0x9F7 DUP4 PUSH2 0x6EE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA07 JUMPI PUSH2 0xA06 PUSH2 0x9B2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1D DUP3 PUSH2 0x6EE JUMP JUMPDEST SWAP2 POP PUSH2 0xA28 DUP4 PUSH2 0x6EE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xA3B JUMPI PUSH2 0xA3A PUSH2 0x929 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA51 DUP3 PUSH2 0x6EE JUMP JUMPDEST SWAP2 POP PUSH2 0xA5C DUP4 PUSH2 0x6EE JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xA91 JUMPI PUSH2 0xA90 PUSH2 0x929 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 SELFDESTRUCT 0xD2 SIGNEXTEND 0xC6 0xA5 0xA7 0xB7 0xD3 PUSH29 0x475EFB77AED35A5600B46892B3E7D86797E2C5EB87D964736F6C634300 ADDMOD 0xD STOP CALLER ",
							"sourceMap": "7264:2180:0:-:0;;;7343:42;7323:63;;;;;;;;;;;;;;;;;;;;7641:105;;;;;;;;;;7673:10;7665:5;;:18;;;;;;;;;;;;;;;;;;7708:3;7695:10;:16;;;;7728:2;7722:3;:8;;;;7264:2180;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_175": {
									"entryPoint": 1752,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allocation_493": {
									"entryPoint": 1422,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burn_602": {
									"entryPoint": 1608,
									"id": 602,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@dcfPrice_588": {
									"entryPoint": 229,
									"id": 588,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@div_220": {
									"entryPoint": 1564,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_205": {
									"entryPoint": 1542,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@payment_402": {
									"entryPoint": 206,
									"id": 402,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@publicWorks_620": {
									"entryPoint": 755,
									"id": 620,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sell_561": {
									"entryPoint": 1016,
									"id": 561,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_190": {
									"entryPoint": 1586,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@subscribe_460": {
									"entryPoint": 436,
									"id": 460,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2051,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2345,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2482,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1826,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6101:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"src": "442:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:1"
															},
															"nodeType": "YulIf",
															"src": "822:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:1",
														"type": ""
													}
												],
												"src": "769:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:1",
														"type": ""
													}
												],
												"src": "897:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:1"
															},
															"nodeType": "YulIf",
															"src": "1118:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1247:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1291:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:1",
														"type": ""
													}
												],
												"src": "1042:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1440:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1450:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1465:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1459:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1459:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1450:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1508:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1481:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1481:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1481:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1418:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1426:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1434:5:1",
														"type": ""
													}
												],
												"src": "1377:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1603:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1649:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1651:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1651:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1651:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1624:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1633:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1620:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1620:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1616:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1616:32:1"
															},
															"nodeType": "YulIf",
															"src": "1613:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1742:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1757:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1771:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1761:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1786:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1832:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1843:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1828:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1828:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1852:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1796:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1796:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1786:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1573:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1584:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1596:6:1",
														"type": ""
													}
												],
												"src": "1526:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1928:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1938:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1953:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1960:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1949:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1938:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1910:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1920:7:1",
														"type": ""
													}
												],
												"src": "1883:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2060:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2070:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2099:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2081:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2081:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2070:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2042:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2052:7:1",
														"type": ""
													}
												],
												"src": "2015:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2182:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2199:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2222:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2204:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2204:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2192:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2192:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2192:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2170:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2177:3:1",
														"type": ""
													}
												],
												"src": "2117:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2367:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2377:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2389:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2400:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2385:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2385:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2377:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2457:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2470:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2481:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2466:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2466:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2413:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2413:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2413:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2538:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2551:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2562:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2547:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2547:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2494:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2331:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2343:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2351:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2362:4:1",
														"type": ""
													}
												],
												"src": "2241:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2621:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2631:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2656:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2649:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2649:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2642:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2631:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2603:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2613:7:1",
														"type": ""
													}
												],
												"src": "2579:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2715:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2769:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2778:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2781:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2771:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2771:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2771:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2738:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2760:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2745:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2745:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2735:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2735:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2728:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2728:40:1"
															},
															"nodeType": "YulIf",
															"src": "2725:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2708:5:1",
														"type": ""
													}
												],
												"src": "2675:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2857:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2867:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2882:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2876:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2867:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2922:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2898:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2898:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2898:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2835:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2843:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2851:5:1",
														"type": ""
													}
												],
												"src": "2797:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3014:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3060:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3062:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3062:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3062:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3035:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3044:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3031:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3031:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3056:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3027:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3027:32:1"
															},
															"nodeType": "YulIf",
															"src": "3024:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3153:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3168:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3182:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3172:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3197:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3240:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3251:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3236:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3236:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3260:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3207:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3207:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3197:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2984:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2995:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3007:6:1",
														"type": ""
													}
												],
												"src": "2940:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3387:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3404:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3409:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3397:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3397:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3397:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3425:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3444:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3449:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3440:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3440:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3425:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3359:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3364:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3375:11:1",
														"type": ""
													}
												],
												"src": "3291:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3572:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3594:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3602:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3590:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3590:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3606:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3583:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3583:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3583:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3564:6:1",
														"type": ""
													}
												],
												"src": "3466:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3800:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3810:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3876:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3881:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3817:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3817:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3810:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3982:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "3893:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3893:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3893:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3995:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4006:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4011:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4002:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4002:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3995:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3788:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3796:3:1",
														"type": ""
													}
												],
												"src": "3654:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4197:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4207:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4219:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4230:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4215:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4215:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4207:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4254:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4265:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4250:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4273:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4279:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4269:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4269:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4243:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4243:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4243:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4299:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4433:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4307:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4307:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4299:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4177:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4192:4:1",
														"type": ""
													}
												],
												"src": "4026:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4549:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4559:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4571:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4582:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4567:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4567:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4559:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4639:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4652:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4663:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4648:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4648:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4595:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4595:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4595:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4521:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4533:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4544:4:1",
														"type": ""
													}
												],
												"src": "4451:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4707:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4724:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4727:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4717:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4717:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4821:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4824:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4814:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4814:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4845:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4848:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4838:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4838:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4838:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4679:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4913:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4923:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4946:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4928:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4928:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4923:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4957:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4980:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4962:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4962:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4957:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5155:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5157:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5157:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5157:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5067:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5060:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5060:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5053:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5053:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5075:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5082:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5150:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "5078:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5078:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5072:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5072:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5049:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5049:105:1"
															},
															"nodeType": "YulIf",
															"src": "5046:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5187:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5202:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5205:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5198:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5187:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4896:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4899:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4905:7:1",
														"type": ""
													}
												],
												"src": "4865:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5247:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5264:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5267:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5257:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5257:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5257:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5361:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5364:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5354:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5354:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5354:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5385:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5388:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5378:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5378:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5378:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5219:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5447:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5457:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5480:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5462:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5462:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5457:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5491:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5514:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5496:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5496:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5491:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5538:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5540:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5540:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5540:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5535:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5528:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5528:9:1"
															},
															"nodeType": "YulIf",
															"src": "5525:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5570:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5579:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5582:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5575:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5575:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5570:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5436:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5439:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5445:1:1",
														"type": ""
													}
												],
												"src": "5405:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5641:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5651:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5674:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5656:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5656:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5651:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5685:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5708:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5690:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5690:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5685:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5732:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5734:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5734:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5734:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5726:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5729:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5723:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5723:8:1"
															},
															"nodeType": "YulIf",
															"src": "5720:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5764:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5776:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5779:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5772:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5772:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5764:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5627:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5630:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5636:4:1",
														"type": ""
													}
												],
												"src": "5596:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5837:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5847:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5870:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5852:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5852:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5847:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5881:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5904:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5886:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5886:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5881:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6044:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6046:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6046:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6046:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5965:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5972:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6040:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5968:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5968:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5962:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5962:81:1"
															},
															"nodeType": "YulIf",
															"src": "5959:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6076:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6087:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6090:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6083:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6083:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6076:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5824:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5827:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5833:3:1",
														"type": ""
													}
												],
												"src": "5793:305:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c806342f6487a1461004f5780636bb4e283146100595780638f449a0514610084578063a7d9c57e1461008e578063e4849b32146100a5575b600080fd5b6100576100ce565b005b34801561006557600080fd5b5061006e6100e5565b60405161007b9190610707565b60405180910390f35b61008c6101b4565b005b34801561009a57600080fd5b506100a36102f3565b005b3480156100b157600080fd5b506100cc60048036038101906100c79190610753565b6103f8565b005b600034116100db57600080fd5b6100e361058e565b565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610153573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101779190610795565b905060006101aa8261019c600354670de0b6b3a764000061060690919063ffffffff16565b61061c90919063ffffffff16565b9050809250505090565b662386f26fc100003410156101c857600080fd5b60006101d26100e5565b90506000610203826101f534670de0b6b3a764000061060690919063ffffffff16565b61061c90919063ffffffff16565b905060006102306103e86102226005548561060690919063ffffffff16565b61061c90919063ffffffff16565b9050610245818361063290919063ffffffff16565b915060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016102a2929190610803565b6020604051808303816000875af11580156102c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e59190610864565b506102ee61058e565b505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610383576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037a906108ee565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f193505050501580156103ed573d6000803e3d6000fd5b506000600481905550565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610452919061090e565b602060405180830381865afa15801561046f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104939190610795565b101561049e57600080fd5b60006104a86100e5565b905060006104d9670de0b6b3a76400006104cb848661060690919063ffffffff16565b61061c90919063ffffffff16565b905060006105066103e86104f86005548561060690919063ffffffff16565b61061c90919063ffffffff16565b905061051b818361063290919063ffffffff16565b91503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610563573d6000803e3d6000fd5b506105798260035461063290919063ffffffff16565b60038190555061058884610648565b50505050565b60006105b96103e86105ab6002543461060690919063ffffffff16565b61061c90919063ffffffff16565b90506105d0816003546106d890919063ffffffff16565b6003819055506105fd6105ec823461063290919063ffffffff16565b6004546106d890919063ffffffff16565b60048190555050565b600081836106149190610958565b905092915050565b6000818361062a91906109e1565b905092915050565b600081836106409190610a12565b905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379cc679033836040518363ffffffff1660e01b81526004016106a3929190610803565b600060405180830381600087803b1580156106bd57600080fd5b505af11580156106d1573d6000803e3d6000fd5b5050505050565b600081836106e69190610a46565b905092915050565b6000819050919050565b610701816106ee565b82525050565b600060208201905061071c60008301846106f8565b92915050565b600080fd5b610730816106ee565b811461073b57600080fd5b50565b60008135905061074d81610727565b92915050565b60006020828403121561076957610768610722565b5b60006107778482850161073e565b91505092915050565b60008151905061078f81610727565b92915050565b6000602082840312156107ab576107aa610722565b5b60006107b984828501610780565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107ed826107c2565b9050919050565b6107fd816107e2565b82525050565b600060408201905061081860008301856107f4565b61082560208301846106f8565b9392505050565b60008115159050919050565b6108418161082c565b811461084c57600080fd5b50565b60008151905061085e81610838565b92915050565b60006020828403121561087a57610879610722565b5b60006108888482850161084f565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006108d8602083610891565b91506108e3826108a2565b602082019050919050565b60006020820190508181036000830152610907816108cb565b9050919050565b600060208201905061092360008301846107f4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610963826106ee565b915061096e836106ee565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156109a7576109a6610929565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006109ec826106ee565b91506109f7836106ee565b925082610a0757610a066109b2565b5b828204905092915050565b6000610a1d826106ee565b9150610a28836106ee565b925082821015610a3b57610a3a610929565b5b828203905092915050565b6000610a51826106ee565b9150610a5c836106ee565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a9157610a90610929565b5b82820190509291505056fea264697066735822122091ffd20bc6a5a7b7d37c475efb77aed35a5600b46892b3e7d86797e2c5eb87d964736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42F6487A EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x6BB4E283 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x8F449A05 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xA7D9C57E EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x57 PUSH2 0xCE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E PUSH2 0xE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C PUSH2 0x1B4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA3 PUSH2 0x2F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x753 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE3 PUSH2 0x58E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x153 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AA DUP3 PUSH2 0x19C PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x606 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x61C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE LT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D2 PUSH2 0xE5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x203 DUP3 PUSH2 0x1F5 CALLVALUE PUSH8 0xDE0B6B3A7640000 PUSH2 0x606 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x61C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x230 PUSH2 0x3E8 PUSH2 0x222 PUSH1 0x5 SLOAD DUP6 PUSH2 0x606 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x61C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x245 DUP2 DUP4 PUSH2 0x632 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A2 SWAP3 SWAP2 SWAP1 PUSH2 0x803 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST POP PUSH2 0x2EE PUSH2 0x58E JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x383 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37A SWAP1 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x4 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST LT ISZERO PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4A8 PUSH2 0xE5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D9 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4CB DUP5 DUP7 PUSH2 0x606 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x61C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x506 PUSH2 0x3E8 PUSH2 0x4F8 PUSH1 0x5 SLOAD DUP6 PUSH2 0x606 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x61C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x51B DUP2 DUP4 PUSH2 0x632 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x563 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x579 DUP3 PUSH1 0x3 SLOAD PUSH2 0x632 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x588 DUP5 PUSH2 0x648 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B9 PUSH2 0x3E8 PUSH2 0x5AB PUSH1 0x2 SLOAD CALLVALUE PUSH2 0x606 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x61C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x5D0 DUP2 PUSH1 0x3 SLOAD PUSH2 0x6D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x5FD PUSH2 0x5EC DUP3 CALLVALUE PUSH2 0x632 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x6D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x958 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x9E1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x640 SWAP2 SWAP1 PUSH2 0xA12 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x79CC6790 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A3 SWAP3 SWAP2 SWAP1 PUSH2 0x803 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0xA46 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x701 DUP2 PUSH2 0x6EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x71C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x730 DUP2 PUSH2 0x6EE JUMP JUMPDEST DUP2 EQ PUSH2 0x73B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x74D DUP2 PUSH2 0x727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x769 JUMPI PUSH2 0x768 PUSH2 0x722 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x777 DUP5 DUP3 DUP6 ADD PUSH2 0x73E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x78F DUP2 PUSH2 0x727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AB JUMPI PUSH2 0x7AA PUSH2 0x722 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7B9 DUP5 DUP3 DUP6 ADD PUSH2 0x780 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7ED DUP3 PUSH2 0x7C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FD DUP2 PUSH2 0x7E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x818 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7F4 JUMP JUMPDEST PUSH2 0x825 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6F8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x841 DUP2 PUSH2 0x82C JUMP JUMPDEST DUP2 EQ PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x85E DUP2 PUSH2 0x838 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x87A JUMPI PUSH2 0x879 PUSH2 0x722 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x888 DUP5 DUP3 DUP6 ADD PUSH2 0x84F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D8 PUSH1 0x20 DUP4 PUSH2 0x891 JUMP JUMPDEST SWAP2 POP PUSH2 0x8E3 DUP3 PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x907 DUP2 PUSH2 0x8CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x923 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x963 DUP3 PUSH2 0x6EE JUMP JUMPDEST SWAP2 POP PUSH2 0x96E DUP4 PUSH2 0x6EE JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x9A7 JUMPI PUSH2 0x9A6 PUSH2 0x929 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9EC DUP3 PUSH2 0x6EE JUMP JUMPDEST SWAP2 POP PUSH2 0x9F7 DUP4 PUSH2 0x6EE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA07 JUMPI PUSH2 0xA06 PUSH2 0x9B2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1D DUP3 PUSH2 0x6EE JUMP JUMPDEST SWAP2 POP PUSH2 0xA28 DUP4 PUSH2 0x6EE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xA3B JUMPI PUSH2 0xA3A PUSH2 0x929 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA51 DUP3 PUSH2 0x6EE JUMP JUMPDEST SWAP2 POP PUSH2 0xA5C DUP4 PUSH2 0x6EE JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xA91 JUMPI PUSH2 0xA90 PUSH2 0x929 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 SELFDESTRUCT 0xD2 SIGNEXTEND 0xC6 0xA5 0xA7 0xB7 0xD3 PUSH29 0x475EFB77AED35A5600B46892B3E7D86797E2C5EB87D964736F6C634300 ADDMOD 0xD STOP CALLER ",
							"sourceMap": "7264:2180:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7762:106;;;:::i;:::-;;8959:206;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7882:353;;;:::i;:::-;;9319:116;;;;;;;;;;;;;:::i;:::-;;8499:440;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7762:106;7827:1;7815:9;:13;7807:22;;;;;;7842:12;:10;:12::i;:::-;7762:106::o;8959:206::-;8998:4;9022:19;9044:3;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9022:39;;9072:10;9085:49;9119:14;9085:29;9100:13;;9090:4;9085:14;;:29;;;;:::i;:::-;:33;;:49;;;;:::i;:::-;9072:62;;9152:5;9145:12;;;;8959:206;:::o;7882:353::-;7950:4;7937:9;:17;;7929:26;;;;;;7966:10;7979;:8;:10::i;:::-;7966:23;;8008:15;8026:36;8056:5;8026:25;8041:9;8031:4;8026:14;;:25;;;;:::i;:::-;:29;;:36;;;;:::i;:::-;8008:54;;8073:8;8084:29;8108:4;8084:19;8099:3;;8084:10;:14;;:19;;;;:::i;:::-;:23;;:29;;;;:::i;:::-;8073:40;;8137:19;8152:3;8137:10;:14;;:19;;;;:::i;:::-;8124:32;;8169:3;;;;;;;;;;:12;;;8182:10;8193;8169:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8215:12;:10;:12::i;:::-;7918:317;;;7882:353::o;9319:116::-;7564:10;7555:19;;:5;;;;;;;;;;;:19;;;7547:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;9378:5:::1;;;;;;;;;;;9370:23;;:33;9394:8;;9370:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;9425:1;9414:8;:12;;;;9319:116::o:0;8499:440::-;8584:10;8555:3;;;;;;;;;;:13;;;8569:10;8555:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;8547:48;;;;;;8605:10;8618;:8;:10::i;:::-;8605:23;;8638:15;8656:31;8682:4;8656:21;8671:5;8656:10;:14;;:21;;;;:::i;:::-;:25;;:31;;;;:::i;:::-;8638:49;;8699:8;8710:29;8734:4;8710:19;8725:3;;8710:10;:14;;:19;;;;:::i;:::-;:23;;:29;;;;:::i;:::-;8699:40;;8773:19;8788:3;8773:10;:14;;:19;;;;:::i;:::-;8760:32;;8816:10;8808:28;;:40;8837:10;8808:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8874:29;8892:10;8874:13;;:17;;:29;;;;:::i;:::-;8858:13;:45;;;;8915:16;8920:10;8915:4;:16::i;:::-;8537:402;;;8499:440;:::o;8245:213::-;8284:11;8298:35;8328:4;8298:25;8312:10;;8298:9;:13;;:25;;;;:::i;:::-;:29;;:35;;;;:::i;:::-;8284:49;;8368:25;8386:6;8368:13;;:17;;:25;;;;:::i;:::-;8352:13;:41;;;;8415:35;8428:21;8442:6;8428:9;:13;;:21;;;;:::i;:::-;8415:8;;:12;;:35;;;;:::i;:::-;8404:8;:46;;;;8273:185;8245:213::o;3511:98::-;3569:7;3600:1;3596;:5;;;;:::i;:::-;3589:12;;3511:98;;;;:::o;3910:::-;3968:7;3999:1;3995;:5;;;;:::i;:::-;3988:12;;3910:98;;;;:::o;3154:::-;3212:7;3243:1;3239;:5;;;;:::i;:::-;3232:12;;3154:98;;;;:::o;9173:91::-;9221:3;;;;;;;;;;:12;;;9234:10;9245;9221:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9173:91;:::o;2773:98::-;2831:7;2862:1;2858;:5;;;;:::i;:::-;2851:12;;2773:98;;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:143::-;1434:5;1465:6;1459:13;1450:22;;1481:33;1508:5;1481:33;:::i;:::-;1377:143;;;;:::o;1526:351::-;1596:6;1645:2;1633:9;1624:7;1620:23;1616:32;1613:119;;;1651:79;;:::i;:::-;1613:119;1771:1;1796:64;1852:7;1843:6;1832:9;1828:22;1796:64;:::i;:::-;1786:74;;1742:128;1526:351;;;;:::o;1883:126::-;1920:7;1960:42;1953:5;1949:54;1938:65;;1883:126;;;:::o;2015:96::-;2052:7;2081:24;2099:5;2081:24;:::i;:::-;2070:35;;2015:96;;;:::o;2117:118::-;2204:24;2222:5;2204:24;:::i;:::-;2199:3;2192:37;2117:118;;:::o;2241:332::-;2362:4;2400:2;2389:9;2385:18;2377:26;;2413:71;2481:1;2470:9;2466:17;2457:6;2413:71;:::i;:::-;2494:72;2562:2;2551:9;2547:18;2538:6;2494:72;:::i;:::-;2241:332;;;;;:::o;2579:90::-;2613:7;2656:5;2649:13;2642:21;2631:32;;2579:90;;;:::o;2675:116::-;2745:21;2760:5;2745:21;:::i;:::-;2738:5;2735:32;2725:60;;2781:1;2778;2771:12;2725:60;2675:116;:::o;2797:137::-;2851:5;2882:6;2876:13;2867:22;;2898:30;2922:5;2898:30;:::i;:::-;2797:137;;;;:::o;2940:345::-;3007:6;3056:2;3044:9;3035:7;3031:23;3027:32;3024:119;;;3062:79;;:::i;:::-;3024:119;3182:1;3207:61;3260:7;3251:6;3240:9;3236:22;3207:61;:::i;:::-;3197:71;;3153:125;2940:345;;;;:::o;3291:169::-;3375:11;3409:6;3404:3;3397:19;3449:4;3444:3;3440:14;3425:29;;3291:169;;;;:::o;3466:182::-;3606:34;3602:1;3594:6;3590:14;3583:58;3466:182;:::o;3654:366::-;3796:3;3817:67;3881:2;3876:3;3817:67;:::i;:::-;3810:74;;3893:93;3982:3;3893:93;:::i;:::-;4011:2;4006:3;4002:12;3995:19;;3654:366;;;:::o;4026:419::-;4192:4;4230:2;4219:9;4215:18;4207:26;;4279:9;4273:4;4269:20;4265:1;4254:9;4250:17;4243:47;4307:131;4433:4;4307:131;:::i;:::-;4299:139;;4026:419;;;:::o;4451:222::-;4544:4;4582:2;4571:9;4567:18;4559:26;;4595:71;4663:1;4652:9;4648:17;4639:6;4595:71;:::i;:::-;4451:222;;;;:::o;4679:180::-;4727:77;4724:1;4717:88;4824:4;4821:1;4814:15;4848:4;4845:1;4838:15;4865:348;4905:7;4928:20;4946:1;4928:20;:::i;:::-;4923:25;;4962:20;4980:1;4962:20;:::i;:::-;4957:25;;5150:1;5082:66;5078:74;5075:1;5072:81;5067:1;5060:9;5053:17;5049:105;5046:131;;;5157:18;;:::i;:::-;5046:131;5205:1;5202;5198:9;5187:20;;4865:348;;;;:::o;5219:180::-;5267:77;5264:1;5257:88;5364:4;5361:1;5354:15;5388:4;5385:1;5378:15;5405:185;5445:1;5462:20;5480:1;5462:20;:::i;:::-;5457:25;;5496:20;5514:1;5496:20;:::i;:::-;5491:25;;5535:1;5525:35;;5540:18;;:::i;:::-;5525:35;5582:1;5579;5575:9;5570:14;;5405:185;;;;:::o;5596:191::-;5636:4;5656:20;5674:1;5656:20;:::i;:::-;5651:25;;5690:20;5708:1;5690:20;:::i;:::-;5685:25;;5729:1;5726;5723:8;5720:34;;;5734:18;;:::i;:::-;5720:34;5779:1;5776;5772:9;5764:17;;5596:191;;;;:::o;5793:305::-;5833:3;5852:20;5870:1;5852:20;:::i;:::-;5847:25;;5886:20;5904:1;5886:20;:::i;:::-;5881:25;;6040:1;5972:66;5968:74;5965:1;5962:81;5959:107;;;6046:18;;:::i;:::-;5959:107;6090:1;6087;6083:9;6076:16;;5793:305;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "554000",
								"executionCost": "93348",
								"totalCost": "647348"
							},
							"external": {
								"dcfPrice()": "infinite",
								"payment()": "infinite",
								"publicWorks()": "infinite",
								"sell(uint256)": "infinite",
								"subscribe()": "infinite"
							},
							"internal": {
								"allocation()": "infinite",
								"burn(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7264,
									"end": 9444,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 7264,
									"end": 9444,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7264,
									"end": 9444,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7343,
									"end": 7385,
									"name": "PUSH",
									"source": 0,
									"value": "C77F56DE066FE50C3E1564BA1CEC85AC0AD663CE"
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7323,
									"end": 7386,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7641,
									"end": 7746,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 7641,
									"end": 7746,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7641,
									"end": 7746,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7641,
									"end": 7746,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7641,
									"end": 7746,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7641,
									"end": 7746,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7641,
									"end": 7746,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7641,
									"end": 7746,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7641,
									"end": 7746,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7641,
									"end": 7746,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7641,
									"end": 7746,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7673,
									"end": 7683,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7670,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7665,
									"end": 7670,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7665,
									"end": 7683,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7665,
									"end": 7683,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7683,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7683,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7683,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7683,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7665,
									"end": 7683,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7683,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7683,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7683,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7683,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7683,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7665,
									"end": 7683,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7683,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7683,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7683,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7683,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7683,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7711,
									"name": "PUSH",
									"source": 0,
									"value": "1F4"
								},
								{
									"begin": 7695,
									"end": 7705,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7695,
									"end": 7711,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7695,
									"end": 7711,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7695,
									"end": 7711,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7695,
									"end": 7711,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7728,
									"end": 7730,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 7722,
									"end": 7725,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 7722,
									"end": 7730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7722,
									"end": 7730,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7722,
									"end": 7730,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7722,
									"end": 7730,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7264,
									"end": 9444,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7264,
									"end": 9444,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7264,
									"end": 9444,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7264,
									"end": 9444,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7264,
									"end": 9444,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7264,
									"end": 9444,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7264,
									"end": 9444,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122091ffd20bc6a5a7b7d37c475efb77aed35a5600b46892b3e7d86797e2c5eb87d964736f6c634300080d0033",
									".code": [
										{
											"begin": 7264,
											"end": 9444,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "PUSH",
											"source": 0,
											"value": "42F6487A"
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "PUSH",
											"source": 0,
											"value": "6BB4E283"
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "PUSH",
											"source": 0,
											"value": "8F449A05"
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "PUSH",
											"source": 0,
											"value": "A7D9C57E"
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "PUSH",
											"source": 0,
											"value": "E4849B32"
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 9444,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7762,
											"end": 7868,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7762,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7762,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7762,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7762,
											"end": 7868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7762,
											"end": 7868,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7762,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7762,
											"end": 7868,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8235,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7882,
											"end": 8235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7882,
											"end": 8235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7882,
											"end": 8235,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7882,
											"end": 8235,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7882,
											"end": 8235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8235,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7762,
											"end": 7868,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7762,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7827,
											"end": 7828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7824,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7828,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7807,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7807,
											"end": 7829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7807,
											"end": 7829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7807,
											"end": 7829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7807,
											"end": 7829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7807,
											"end": 7829,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7807,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7842,
											"end": 7852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7842,
											"end": 7854,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7842,
											"end": 7854,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7842,
											"end": 7854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7762,
											"end": 7868,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8998,
											"end": 9002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9022,
											"end": 9041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9044,
											"end": 9047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9047,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9047,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9044,
											"end": 9047,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9047,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9047,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9044,
											"end": 9047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9059,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9044,
											"end": 9059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9059,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9022,
											"end": 9061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9022,
											"end": 9061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9072,
											"end": 9082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9085,
											"end": 9134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9119,
											"end": 9133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9085,
											"end": 9114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9100,
											"end": 9113,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9100,
											"end": 9113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9094,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9085,
											"end": 9099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9085,
											"end": 9099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9085,
											"end": 9114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9085,
											"end": 9114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9085,
											"end": 9114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9085,
											"end": 9114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9085,
											"end": 9114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9085,
											"end": 9114,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9085,
											"end": 9114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9085,
											"end": 9118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9085,
											"end": 9118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9085,
											"end": 9134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9085,
											"end": 9134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9085,
											"end": 9134,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9085,
											"end": 9134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9085,
											"end": 9134,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9085,
											"end": 9134,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9085,
											"end": 9134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9072,
											"end": 9134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9072,
											"end": 9134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9152,
											"end": 9157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9145,
											"end": 9157,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9145,
											"end": 9157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9145,
											"end": 9157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9145,
											"end": 9157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 9165,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7882,
											"end": 8235,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7882,
											"end": 8235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7950,
											"end": 7954,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 7937,
											"end": 7946,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7937,
											"end": 7954,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7937,
											"end": 7954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 7929,
											"end": 7955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7929,
											"end": 7955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7955,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7955,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 7929,
											"end": 7955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7979,
											"end": 7989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 7979,
											"end": 7987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7979,
											"end": 7989,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7979,
											"end": 7989,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 7979,
											"end": 7989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8008,
											"end": 8023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8026,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8056,
											"end": 8061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8026,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 8041,
											"end": 8050,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8035,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8026,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8026,
											"end": 8040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8026,
											"end": 8051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8026,
											"end": 8051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8026,
											"end": 8051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8026,
											"end": 8051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8026,
											"end": 8051,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8026,
											"end": 8051,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 8026,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8026,
											"end": 8055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8026,
											"end": 8055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8026,
											"end": 8062,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8026,
											"end": 8062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8026,
											"end": 8062,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8026,
											"end": 8062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8026,
											"end": 8062,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8026,
											"end": 8062,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8026,
											"end": 8062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8008,
											"end": 8062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8008,
											"end": 8062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8084,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 8108,
											"end": 8112,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 8084,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8099,
											"end": 8102,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8099,
											"end": 8102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8094,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8084,
											"end": 8098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8084,
											"end": 8103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8103,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8084,
											"end": 8103,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8084,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8084,
											"end": 8107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8084,
											"end": 8113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8084,
											"end": 8113,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 8084,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8152,
											"end": 8155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8147,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8137,
											"end": 8151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8137,
											"end": 8156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8137,
											"end": 8156,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8137,
											"end": 8156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8124,
											"end": 8156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8124,
											"end": 8156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8169,
											"end": 8172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8172,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8169,
											"end": 8172,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8172,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8172,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8169,
											"end": 8172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8181,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8169,
											"end": 8181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8181,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 8182,
											"end": 8192,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8193,
											"end": 8203,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 8204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 8215,
											"end": 8225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 8215,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 8235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 8235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 8235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7882,
											"end": 8235,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7574,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7555,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7555,
											"end": 7574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7555,
											"end": 7560,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7555,
											"end": 7560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7555,
											"end": 7560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7555,
											"end": 7560,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7555,
											"end": 7560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7555,
											"end": 7560,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7555,
											"end": 7560,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7555,
											"end": 7560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7555,
											"end": 7560,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7555,
											"end": 7560,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7555,
											"end": 7560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7555,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7555,
											"end": 7574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7555,
											"end": 7574,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7547,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9378,
											"end": 9383,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9378,
											"end": 9383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9378,
											"end": 9383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9378,
											"end": 9383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9378,
											"end": 9383,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9378,
											"end": 9383,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9378,
											"end": 9383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9378,
											"end": 9383,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9378,
											"end": 9383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9378,
											"end": 9383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9370,
											"end": 9393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 9394,
											"end": 9402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9394,
											"end": 9402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9370,
											"end": 9403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9425,
											"end": 9426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9422,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9414,
											"end": 9426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9426,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9319,
											"end": 9435,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8555,
											"end": 8558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8555,
											"end": 8558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8558,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8555,
											"end": 8558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8555,
											"end": 8568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8568,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8569,
											"end": 8579,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8555,
											"end": 8580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8594,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 8594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8547,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8547,
											"end": 8595,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8547,
											"end": 8595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8547,
											"end": 8595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8547,
											"end": 8595,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8547,
											"end": 8595,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8547,
											"end": 8595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8605,
											"end": 8615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8618,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8618,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8605,
											"end": 8628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8605,
											"end": 8628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8656,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8682,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8656,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8671,
											"end": 8676,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8656,
											"end": 8666,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8656,
											"end": 8670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8656,
											"end": 8670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8656,
											"end": 8677,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8656,
											"end": 8677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8656,
											"end": 8677,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8656,
											"end": 8677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8656,
											"end": 8677,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8656,
											"end": 8677,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8656,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8656,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8656,
											"end": 8681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8656,
											"end": 8687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8656,
											"end": 8687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8656,
											"end": 8687,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8656,
											"end": 8687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8656,
											"end": 8687,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8656,
											"end": 8687,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8656,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8710,
											"end": 8739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8734,
											"end": 8738,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 8710,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8725,
											"end": 8728,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8725,
											"end": 8728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8710,
											"end": 8720,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8710,
											"end": 8724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8710,
											"end": 8724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8710,
											"end": 8729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8710,
											"end": 8729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8710,
											"end": 8729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8710,
											"end": 8729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8710,
											"end": 8729,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8710,
											"end": 8729,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8710,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8710,
											"end": 8733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8710,
											"end": 8733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8710,
											"end": 8739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8710,
											"end": 8739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8710,
											"end": 8739,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8710,
											"end": 8739,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8710,
											"end": 8739,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8710,
											"end": 8739,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8710,
											"end": 8739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8788,
											"end": 8791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8773,
											"end": 8787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8773,
											"end": 8792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8792,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8773,
											"end": 8792,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8773,
											"end": 8792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8760,
											"end": 8792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8760,
											"end": 8792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8816,
											"end": 8826,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8808,
											"end": 8836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 8837,
											"end": 8847,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8892,
											"end": 8902,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8887,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8874,
											"end": 8887,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8874,
											"end": 8891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8903,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8874,
											"end": 8903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8903,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8874,
											"end": 8903,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8874,
											"end": 8903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8871,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8858,
											"end": 8903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 8920,
											"end": 8930,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 8915,
											"end": 8931,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8915,
											"end": 8931,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 8915,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8537,
											"end": 8939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8537,
											"end": 8939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8537,
											"end": 8939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8939,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8245,
											"end": 8458,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8245,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8284,
											"end": 8295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8298,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8328,
											"end": 8332,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 8298,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8298,
											"end": 8307,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8298,
											"end": 8323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8298,
											"end": 8323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8298,
											"end": 8323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8298,
											"end": 8323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8298,
											"end": 8323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8298,
											"end": 8323,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8298,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8298,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8298,
											"end": 8327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8298,
											"end": 8333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8298,
											"end": 8333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8298,
											"end": 8333,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8298,
											"end": 8333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8298,
											"end": 8333,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8298,
											"end": 8333,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8298,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8284,
											"end": 8333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8284,
											"end": 8333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8386,
											"end": 8392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8381,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8368,
											"end": 8381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 8368,
											"end": 8385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8368,
											"end": 8393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8368,
											"end": 8393,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8368,
											"end": 8393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8365,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8352,
											"end": 8393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8393,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 8428,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 8442,
											"end": 8448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8437,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8428,
											"end": 8441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8449,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8428,
											"end": 8449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8428,
											"end": 8449,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 8428,
											"end": 8449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8423,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8415,
											"end": 8423,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 8415,
											"end": 8427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8415,
											"end": 8450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8415,
											"end": 8450,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 8415,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8404,
											"end": 8450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8450,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8273,
											"end": 8458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8245,
											"end": 8458,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3511,
											"end": 3609,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3511,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3596,
											"end": 3597,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3596,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3596,
											"end": 3601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3596,
											"end": 3601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3596,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3596,
											"end": 3601,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3596,
											"end": 3601,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3596,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3511,
											"end": 3609,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3511,
											"end": 3609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3511,
											"end": 3609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3511,
											"end": 3609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3511,
											"end": 3609,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3910,
											"end": 4008,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3910,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 3975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3995,
											"end": 3996,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3995,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3995,
											"end": 4000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3995,
											"end": 4000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3995,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3995,
											"end": 4000,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3995,
											"end": 4000,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3995,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3910,
											"end": 4008,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3910,
											"end": 4008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3910,
											"end": 4008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3910,
											"end": 4008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3910,
											"end": 4008,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3154,
											"end": 3252,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3154,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3212,
											"end": 3219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3240,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3239,
											"end": 3244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3239,
											"end": 3244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3239,
											"end": 3244,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3239,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 3244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 3244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3154,
											"end": 3252,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3154,
											"end": 3252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3154,
											"end": 3252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3154,
											"end": 3252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3154,
											"end": 3252,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9173,
											"end": 9264,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9173,
											"end": 9264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9221,
											"end": 9224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9224,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9221,
											"end": 9224,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9224,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9221,
											"end": 9224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9233,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9221,
											"end": 9233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9233,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 9234,
											"end": 9244,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9255,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9173,
											"end": 9264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9173,
											"end": 9264,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2773,
											"end": 2871,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2773,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2862,
											"end": 2863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2859,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2871,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2871,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1439,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1472,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1508,
											"end": 1513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1481,
											"end": 1514,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1481,
											"end": 1514,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1481,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1596,
											"end": 1602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1631,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1643,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1648,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1732,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1613,
											"end": 1732,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1651,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1651,
											"end": 1730,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1651,
											"end": 1730,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1651,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1732,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1613,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1852,
											"end": 1859,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1841,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1796,
											"end": 1860,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1796,
											"end": 1860,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1796,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1860,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1883,
											"end": 2009,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1883,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 2002,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1953,
											"end": 1958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 2003,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 2003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 2003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1883,
											"end": 2009,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1883,
											"end": 2009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1883,
											"end": 2009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1883,
											"end": 2009,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2015,
											"end": 2111,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2015,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2099,
											"end": 2104,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2111,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2111,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2117,
											"end": 2235,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2117,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2222,
											"end": 2227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2204,
											"end": 2228,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2228,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2204,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2192,
											"end": 2229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2241,
											"end": 2573,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2241,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2400,
											"end": 2402,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2398,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2413,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2481,
											"end": 2482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2479,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2463,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2413,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2413,
											"end": 2484,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2413,
											"end": 2484,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2413,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2551,
											"end": 2560,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2544,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2494,
											"end": 2566,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2494,
											"end": 2566,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2494,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2573,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2573,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2573,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2579,
											"end": 2669,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2579,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2656,
											"end": 2661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2662,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2663,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2669,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2669,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2675,
											"end": 2791,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2675,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2760,
											"end": 2765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2745,
											"end": 2766,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2745,
											"end": 2766,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2745,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2767,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2725,
											"end": 2785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2783,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2785,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2725,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2675,
											"end": 2791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2675,
											"end": 2791,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2797,
											"end": 2934,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2797,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2889,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2922,
											"end": 2927,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2898,
											"end": 2928,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2898,
											"end": 2928,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2898,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 2934,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 2934,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 2934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 2934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 2934,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2940,
											"end": 3285,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2940,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3044,
											"end": 3053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3035,
											"end": 3042,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3031,
											"end": 3054,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3059,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3143,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3024,
											"end": 3143,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 3062,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3062,
											"end": 3141,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3062,
											"end": 3141,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 3062,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3143,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3024,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3207,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3260,
											"end": 3267,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3249,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3207,
											"end": 3268,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3207,
											"end": 3268,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3207,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3268,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 3278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3285,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3285,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3291,
											"end": 3460,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3291,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3375,
											"end": 3386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3449,
											"end": 3453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3444,
											"end": 3447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3460,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3460,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3466,
											"end": 3648,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3466,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3640,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3602,
											"end": 3603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3590,
											"end": 3604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3648,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3654,
											"end": 4020,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3654,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 3881,
											"end": 3883,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3876,
											"end": 3879,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3817,
											"end": 3884,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3817,
											"end": 3884,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 3817,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3884,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3982,
											"end": 3985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3893,
											"end": 3986,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3893,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3893,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4006,
											"end": 4009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 4020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 4020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 4020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 4020,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4026,
											"end": 4445,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4026,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4192,
											"end": 4196,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4230,
											"end": 4232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4207,
											"end": 4233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4273,
											"end": 4277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4289,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4263,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 4433,
											"end": 4437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4307,
											"end": 4438,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4307,
											"end": 4438,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 4307,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4299,
											"end": 4438,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4299,
											"end": 4438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4445,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4451,
											"end": 4673,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4451,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4571,
											"end": 4580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4663,
											"end": 4664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4652,
											"end": 4661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4639,
											"end": 4645,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4595,
											"end": 4666,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4595,
											"end": 4666,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4595,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4673,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4673,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4673,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4679,
											"end": 4859,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4679,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4724,
											"end": 4725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4805,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4828,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4821,
											"end": 4822,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4814,
											"end": 4829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 4852,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4845,
											"end": 4846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4838,
											"end": 4853,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 5213,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4865,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4928,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 4946,
											"end": 4947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4928,
											"end": 4948,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4928,
											"end": 4948,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 4928,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4962,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4962,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4962,
											"end": 4982,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4962,
											"end": 4982,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 4962,
											"end": 4982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 4982,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 4982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5082,
											"end": 5148,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5078,
											"end": 5152,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5076,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5153,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5068,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5069,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5070,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5049,
											"end": 5154,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5177,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 5046,
											"end": 5177,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 5157,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5157,
											"end": 5175,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5157,
											"end": 5175,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 5157,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5177,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 5046,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5202,
											"end": 5203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5198,
											"end": 5207,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 5213,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 5213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 5213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 5213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 5213,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5219,
											"end": 5399,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5219,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5267,
											"end": 5344,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5264,
											"end": 5265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5257,
											"end": 5345,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5368,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5361,
											"end": 5362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5369,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5392,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5385,
											"end": 5386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5378,
											"end": 5393,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5405,
											"end": 5590,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5405,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 5480,
											"end": 5481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5462,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5462,
											"end": 5482,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5462,
											"end": 5482,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 5462,
											"end": 5482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5496,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 5514,
											"end": 5515,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5496,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5496,
											"end": 5516,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5496,
											"end": 5516,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 5496,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5491,
											"end": 5516,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5491,
											"end": 5516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 5525,
											"end": 5560,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 5540,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5540,
											"end": 5558,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5540,
											"end": 5558,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 5540,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5560,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 5525,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5582,
											"end": 5583,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5584,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5405,
											"end": 5590,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5405,
											"end": 5590,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5405,
											"end": 5590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5405,
											"end": 5590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5405,
											"end": 5590,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5596,
											"end": 5787,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 5596,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5636,
											"end": 5640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5656,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 5674,
											"end": 5675,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5656,
											"end": 5676,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5656,
											"end": 5676,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 5656,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 5708,
											"end": 5709,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5690,
											"end": 5710,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5690,
											"end": 5710,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 5690,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5710,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5729,
											"end": 5730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5731,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5754,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 5720,
											"end": 5754,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5734,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 5734,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5734,
											"end": 5752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5734,
											"end": 5752,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 5734,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5754,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 5720,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5776,
											"end": 5777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5772,
											"end": 5781,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 5787,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 5787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 5787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 5787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 5787,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5793,
											"end": 6098,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5793,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5833,
											"end": 5836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5852,
											"end": 5872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 5870,
											"end": 5871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5852,
											"end": 5872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5852,
											"end": 5872,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5852,
											"end": 5872,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 5852,
											"end": 5872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5847,
											"end": 5872,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5847,
											"end": 5872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 5904,
											"end": 5905,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5886,
											"end": 5906,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5886,
											"end": 5906,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 5886,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5881,
											"end": 5906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5881,
											"end": 5906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 6038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5968,
											"end": 6042,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5965,
											"end": 5966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5962,
											"end": 6043,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5959,
											"end": 6066,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5959,
											"end": 6066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 5959,
											"end": 6066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6046,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 6046,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6046,
											"end": 6064,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6046,
											"end": 6064,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 6046,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5959,
											"end": 6066,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 5959,
											"end": 6066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6090,
											"end": 6091,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6088,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6083,
											"end": 6092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6076,
											"end": 6092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6076,
											"end": 6092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5793,
											"end": 6098,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5793,
											"end": 6098,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5793,
											"end": 6098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5793,
											"end": 6098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5793,
											"end": 6098,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"dcfPrice()": "6bb4e283",
							"payment()": "42f6487a",
							"publicWorks()": "a7d9c57e",
							"sell(uint256)": "e4849b32",
							"subscribe()": "8f449a05"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"dcfPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicWorks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subscribe\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"treasury.sol\":\"bigTreasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"treasury.sol\":{\"keccak256\":\"0x9f785e8cd5584985cdb5b5ac51c68613da178a8fbbae7108dc2af6f730caba0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3460877aa0bb6e521e6391626f639a8ccd9950d5c4e7ac26a2c046f9095a5e23\",\"dweb:/ipfs/QmQoZdctjnk1VTe7UgTgYvFf8AgyfjHsFj7DqAPMhhSrWR\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"treasury.sol": {
				"ast": {
					"absolutePath": "treasury.sol",
					"exportedSymbols": {
						"IERC20": [
							340
						],
						"SafeMath": [
							311
						],
						"bigTreasury": [
							621
						]
					},
					"id": 622,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "219:201:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "430:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "663:146:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "674:128:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "707:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "699:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "699:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "711:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "715:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "711:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "699:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "735:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "739:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "735:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "731:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "750:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "757:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "749:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "742:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "782:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "788:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "781:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "774:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "446:135:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "596:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "611:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "603:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "622:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "614:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "602:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "648:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "648:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "654:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:15:0"
									},
									"scope": 311,
									"src": "587:222:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1038:118:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1049:100:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1078:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1082:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1078:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1074:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1093:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1100:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1092:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1085:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1125:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1135:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1124:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1117:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "817:139:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "971:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "986:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "978:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "997:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "989:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "977:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1023:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1023:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1022:15:0"
									},
									"scope": 311,
									"src": "962:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1387:427:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1398:409:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1660:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1665:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1660:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1656:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1682:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1675:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1668:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1707:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1699:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1699:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1711:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1715:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1711:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1699:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1735:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1739:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1735:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1735:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1731:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1755:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1754:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1747:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1787:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1793:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1786:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1779:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1164:141:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1320:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1335:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1327:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1346:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1338:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1326:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1372:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1372:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1378:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1371:15:0"
									},
									"scope": 311,
									"src": "1311:503:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2046:119:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2057:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2091:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2086:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2082:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2102:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2109:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2101:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2094:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2134:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2140:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2144:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2140:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2133:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2126:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1822:142:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1979:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1985:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2031:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2031:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2037:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:15:0"
									},
									"scope": 311,
									"src": "1970:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2407:119:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2418:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2447:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2452:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2447:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2443:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2463:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2470:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2462:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2455:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2495:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2505:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2501:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2494:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2487:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2173:152:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2340:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2355:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2347:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2366:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2358:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2392:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2392:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2398:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2391:15:0"
									},
									"scope": 311,
									"src": "2331:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2840:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2858:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2862:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2851:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2534:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2782:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2794:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2786:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2805:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2797:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2785:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2831:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2830:9:0"
									},
									"scope": 311,
									"src": "2773:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3221:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3239:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3243:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3239:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3232:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2879:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3163:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3175:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3167:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3186:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3178:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3166:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3212:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3211:9:0"
									},
									"scope": 311,
									"src": "3154:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3578:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3596:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3600:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3596:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3589:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3260:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3520:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3532:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3524:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3543:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3535:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3523:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3569:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3568:9:0"
									},
									"scope": 311,
									"src": "3511:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3977:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3995:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3999:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3995:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3988:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3617:287:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3919:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3931:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3923:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3923:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3942:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3934:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3934:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3922:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3968:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3967:9:0"
									},
									"scope": 311,
									"src": "3910:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4542:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4560:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4564:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4560:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4553:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "4016:453:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4484:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4496:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4488:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4507:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4499:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4533:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4532:9:0"
									},
									"scope": 311,
									"src": "4475:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5181:111:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5192:93:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5225:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5230:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5225:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5233:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5217:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5217:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5217:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5268:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5272:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5268:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5261:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4581:465:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5061:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5083:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5103:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5095:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5095:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5129:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5115:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5064:84:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5172:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5171:9:0"
									},
									"scope": 311,
									"src": "5052:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5919:110:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5930:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5963:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5967:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5963:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5970:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5955:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5955:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5955:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "6005:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "6009:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6005:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5998:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5300:484:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5799:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5821:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5813:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5841:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5833:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5867:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5853:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5853:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5802:84:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5910:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5909:9:0"
									},
									"scope": 311,
									"src": "5790:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6821:110:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6832:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6865:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6869:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6865:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6872:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6857:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6857:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6857:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6907:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6911:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6907:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6900:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "6037:649:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6701:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6743:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6735:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6769:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6755:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6755:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6704:84:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6812:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6812:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6811:9:0"
									},
									"scope": 311,
									"src": "6692:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 622,
							"src": "422:6512:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 340,
							"linearizedBaseContracts": [
								340
							],
							"name": "IERC20",
							"nameLocation": "6952:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6979:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6990:2:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "7016:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7015:9:0"
									},
									"scope": 340,
									"src": "6970:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7040:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7058:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "7050:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7050:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7049:17:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "7090:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7089:9:0"
									},
									"scope": 340,
									"src": "7031:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "7114:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7131:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "7123:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7143:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "7135:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7122:28:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "7169:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 329,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7169:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7168:6:0"
									},
									"scope": 340,
									"src": "7105:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79cc6790",
									"id": 339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "7191:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7208:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "7200:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7225:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "7217:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7199:33:0"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7241:0:0"
									},
									"scope": 340,
									"src": "7182:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 622,
							"src": "6942:308:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "bigTreasury",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 621,
							"linearizedBaseContracts": [
								621
							],
							"name": "bigTreasury",
							"nameLocation": "7273:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 343,
									"libraryName": {
										"id": 341,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "7297:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "7291:24:0",
									"typeName": {
										"id": 342,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7310:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "dcf",
									"nameLocation": "7330:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 621,
									"src": "7323:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$340",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 345,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 344,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 340,
											"src": "7323:6:0"
										},
										"referencedDeclaration": 340,
										"src": "7323:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$340",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307843373766353644653036366645353043336531353634624131636563383561433061443636336345",
												"id": 347,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7343:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xC77f56De066fE50C3e1564bA1cec85aC0aD663cE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 346,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 340,
											"src": "7336:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$340_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 348,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7336:50:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$340",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "7407:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 621,
									"src": "7399:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 350,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7399:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 353,
									"mutability": "mutable",
									"name": "profitRate",
									"nameLocation": "7424:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 621,
									"src": "7419:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 352,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7419:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "profitSharing",
									"nameLocation": "7446:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 621,
									"src": "7441:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 354,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7441:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 357,
									"mutability": "mutable",
									"name": "treasury",
									"nameLocation": "7471:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 621,
									"src": "7466:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 356,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7466:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "tax",
									"nameLocation": "7491:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 621,
									"src": "7486:8:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 358,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7486:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "7536:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 362,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "7555:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 363,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7564:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7564:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7555:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7576:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7547:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "7547:64:0"
											},
											{
												"id": 369,
												"nodeType": "PlaceholderStatement",
												"src": "7622:1:0"
											}
										]
									},
									"id": 371,
									"name": "onlyOwner",
									"nameLocation": "7524:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7533:2:0"
									},
									"src": "7515:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "7654:92:0",
										"statements": [
											{
												"expression": {
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 374,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "7665:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 375,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7673:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7673:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7665:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "7665:18:0"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 379,
														"name": "profitRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "7695:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "353030",
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7708:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500_by_1",
															"typeString": "int_const 500"
														},
														"value": "500"
													},
													"src": "7695:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "7695:16:0"
											},
											{
												"expression": {
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 383,
														"name": "tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "7722:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130",
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7728:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "7722:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "7722:8:0"
											}
										]
									},
									"id": 388,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7652:2:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7654:0:0"
									},
									"scope": 621,
									"src": "7641:105:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "7796:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 392,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7815:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "7815:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7827:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7815:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7807:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7807:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "7807:22:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 398,
														"name": "allocation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "7842:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7842:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "7842:12:0"
											}
										]
									},
									"functionSelector": "42f6487a",
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "payment",
									"nameLocation": "7771:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7778:2:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7796:0:0"
									},
									"scope": 621,
									"src": "7762:106:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "7918:317:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 406,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7937:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "7937:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31653136",
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7950:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"value": "1e16"
															},
															"src": "7937:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 405,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7929:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7929:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "7929:26:0"
											},
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "7971:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "7966:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 412,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7966:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 416,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 414,
														"name": "dcfPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "7979:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7979:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7966:23:0"
											},
											{
												"assignments": [
													418
												],
												"declarations": [
													{
														"constant": false,
														"id": 418,
														"mutability": "mutable",
														"name": "dcf_amount",
														"nameLocation": "8013:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "8008:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 417,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8008:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 430,
												"initialValue": {
													"arguments": [
														{
															"id": 428,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "8056:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 424,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8041:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "8041:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31653138",
																			"id": 421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8031:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8026:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 419,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "8026:4:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8026:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "8026:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8026:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "8026:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8026:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8008:54:0"
											},
											{
												"assignments": [
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "8078:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "8073:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 431,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8073:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8108:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 435,
																	"name": "tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "8099:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 433,
																	"name": "dcf_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "8084:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "8084:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8084:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "8084:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8084:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8073:40:0"
											},
											{
												"expression": {
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 441,
														"name": "dcf_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "8124:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 444,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "8152:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 442,
																"name": "dcf_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "8137:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "8137:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8137:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8124:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "8124:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 451,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8182:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8182:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "8193:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 448,
															"name": "dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8169:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$340",
																"typeString": "contract IERC20"
															}
														},
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 332,
														"src": "8169:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8169:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "8169:35:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 456,
														"name": "allocation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "8215:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8215:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "8215:12:0"
											}
										]
									},
									"functionSelector": "8f449a05",
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "subscribe",
									"nameLocation": "7891:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7900:2:0"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7918:0:0"
									},
									"scope": 621,
									"src": "7882:353:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "8273:185:0",
										"statements": [
											{
												"assignments": [
													464
												],
												"declarations": [
													{
														"constant": false,
														"id": 464,
														"mutability": "mutable",
														"name": "profit",
														"nameLocation": "8289:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 492,
														"src": "8284:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 463,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8284:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 473,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8328:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 468,
																	"name": "profitRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "8312:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 465,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8298:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "8298:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "8298:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8298:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "8298:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8298:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8284:49:0"
											},
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 474,
														"name": "profitSharing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "8352:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 477,
																"name": "profit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "8386:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 475,
																"name": "profitSharing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "8368:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "8368:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8368:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8352:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "8352:41:0"
											},
											{
												"expression": {
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 481,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "8404:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 487,
																		"name": "profit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "8442:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 484,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8428:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "8428:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 190,
																	"src": "8428:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8428:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 482,
																"name": "treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "8415:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "8415:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8415:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8404:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "8404:46:0"
											}
										]
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allocation",
									"nameLocation": "8254:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8264:2:0"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8273:0:0"
									},
									"scope": 621,
									"src": "8245:213:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "8537:402:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 501,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8569:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8569:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 499,
																		"name": "dcf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 349,
																		"src": "8555:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$340",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 323,
																	"src": "8555:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8555:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 504,
																"name": "dcf_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "8584:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8555:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8547:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "8547:48:0"
											},
											{
												"assignments": [
													509
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "8610:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "8605:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 508,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8605:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 512,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 510,
														"name": "dcfPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "8618:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8618:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8605:23:0"
											},
											{
												"assignments": [
													514
												],
												"declarations": [
													{
														"constant": false,
														"id": 514,
														"mutability": "mutable",
														"name": "eth_amount",
														"nameLocation": "8643:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "8638:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 513,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8638:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 522,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31653138",
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8682:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 517,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "8671:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 515,
																	"name": "dcf_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "8656:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "8656:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8656:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "8656:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8656:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8638:49:0"
											},
											{
												"assignments": [
													524
												],
												"declarations": [
													{
														"constant": false,
														"id": 524,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "8704:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "8699:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 523,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8699:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 532,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8734:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 527,
																	"name": "tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "8725:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 525,
																	"name": "eth_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "8710:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "8710:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8710:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "8710:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8710:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8699:40:0"
											},
											{
												"expression": {
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 533,
														"name": "eth_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "8760:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 536,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "8788:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 534,
																"name": "eth_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "8773:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "8773:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8773:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8760:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "8760:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "8837:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 542,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8816:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8816:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8808:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 540,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8808:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8808:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8808:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8808:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "8808:40:0"
											},
											{
												"expression": {
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 549,
														"name": "profitSharing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "8858:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 552,
																"name": "eth_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "8892:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 550,
																"name": "profitSharing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "8874:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "8874:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8874:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8858:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "8858:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 557,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "8920:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 556,
														"name": "burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "8915:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8915:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "8915:16:0"
											}
										]
									},
									"functionSelector": "e4849b32",
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sell",
									"nameLocation": "8508:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "8518:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "8513:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8513:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8512:17:0"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8537:0:0"
									},
									"scope": 621,
									"src": "8499:440:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "9003:162:0",
										"statements": [
											{
												"assignments": [
													567
												],
												"declarations": [
													{
														"constant": false,
														"id": 567,
														"mutability": "mutable",
														"name": "dcfTotlaSupply",
														"nameLocation": "9027:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 587,
														"src": "9022:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 566,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9022:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 571,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 568,
															"name": "dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9044:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$340",
																"typeString": "contract IERC20"
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 316,
														"src": "9044:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9044:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9022:39:0"
											},
											{
												"assignments": [
													573
												],
												"declarations": [
													{
														"constant": false,
														"id": 573,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "9077:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 587,
														"src": "9072:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 572,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9072:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 584,
												"initialValue": {
													"arguments": [
														{
															"id": 582,
															"name": "dcfTotlaSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "9119:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 579,
																	"name": "profitSharing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "9100:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31653138",
																			"id": 576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9090:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9085:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 574,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "9085:4:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9085:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "9085:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9085:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "9085:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9085:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9072:62:0"
											},
											{
												"expression": {
													"id": 585,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 573,
													"src": "9152:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 565,
												"id": 586,
												"nodeType": "Return",
												"src": "9145:12:0"
											}
										]
									},
									"functionSelector": "6bb4e283",
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dcfPrice",
									"nameLocation": "8968:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8976:2:0"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "8998:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8998:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8997:6:0"
									},
									"scope": 621,
									"src": "8959:206:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9210:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 596,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9234:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9234:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "9245:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 593,
															"name": "dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9221:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$340",
																"typeString": "contract IERC20"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burnFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 339,
														"src": "9221:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9221:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "9221:35:0"
											}
										]
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "9182:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "9192:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9187:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9186:17:0"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9210:0:0"
									},
									"scope": 621,
									"src": "9173:91:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "9359:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 612,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "9394:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 609,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "9378:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9370:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 607,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9370:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9370:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "9370:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9370:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "9370:33:0"
											},
											{
												"expression": {
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 615,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "9414:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9425:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9414:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "9414:12:0"
											}
										]
									},
									"functionSelector": "a7d9c57e",
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 605,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 604,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 371,
												"src": "9350:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9350:9:0"
										}
									],
									"name": "publicWorks",
									"nameLocation": "9328:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9339:2:0"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9359:0:0"
									},
									"scope": 621,
									"src": "9319:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 622,
							"src": "7264:2180:0",
							"usedErrors": []
						}
					],
					"src": "35:9409:0"
				},
				"id": 0
			}
		}
	}
}