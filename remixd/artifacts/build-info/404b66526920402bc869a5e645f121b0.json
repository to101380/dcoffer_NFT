{
	"id": "404b66526920402bc869a5e645f121b0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"treasury_flat.sol": {
				"content": "\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/SafeMath.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\n\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n\n// File: Dcoffer/treasury.sol\n\n\npragma solidity ^0.8.4;\n\n\n\n\n\ncontract treasury {\n  using SafeMath for uint;  \n\n  IERC20 dcoff =  IERC20(0x96F76E450f441436221A166aB0c3C73C59849B72);\n  ERC20Burnable dcoff_burn = ERC20Burnable(0x96F76E450f441436221A166aB0c3C73C59849B72);\n\n  uint256 private K;\n\n  constructor(uint _k)payable{\n    owner = msg.sender;\n    K = _k;\n  }\n\n  address owner;\n  mapping(address => bool)private RouterAdmin;\n\n  modifier onlyOwner() {\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\n        _;\n  }\n\n\n\n\n  function setRouter(address user, bool power)external onlyOwner{\n    RouterAdmin[user] = power;\n  }\n\n\n  function subscribe(address subscriber)external payable{\n      require(RouterAdmin[msg.sender] == true);\n      uint256 dcf_amount = ETH_DCF(msg.value);\n      dcoff.transfer(subscriber,dcf_amount);\n\n  }\n\n\n  function market(address payable seller, uint256 dcf_amount)external {\n      require(RouterAdmin[msg.sender] == true);\n      uint256 eth_amount = DCF_ETH(dcf_amount);\n      seller.transfer(eth_amount);\n      dcoff_burn.burnFrom(seller,dcf_amount);      \n     \n  }\n\n\n  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){\n    uint256 _eth_amount = address(this).balance;\n    uint256 _dcf_amount = dcoff.balanceOf(address(this));    \n    uint256 Variable_dcf = _dcf_amount.add(dcf_amount);\n\n    if(Variable_dcf > dcoff.totalSupply()){\n      Variable_dcf = dcoff.totalSupply();\n    }\n\n    uint256 Variable_eth = K.div(Variable_dcf);\n    uint256 _price = _eth_amount.sub(Variable_eth);\n    return _price;\n  }\n\n\n  function ETH_DCF(uint256 eth_amount)public view returns(uint256){\n    uint256 _eth_amount = address(this).balance;\n    uint256 _dcf_amount = dcoff.balanceOf(address(this));\n    uint256 Variable_eth = _eth_amount.add(eth_amount);\n    uint256 Variable_dcf = K.div(Variable_eth);\n    uint256 _price = _dcf_amount.sub(Variable_dcf);\n    return _price;\n  }\n\n\n  function Warning_protect()external onlyOwner{\n    payable(owner).transfer(address(this).balance);\n    dcoff.transfer(owner,dcoff.balanceOf(address(this)));\n  }\n\n\n\n \n   \n  \n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"treasury_flat.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"treasury_flat.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"treasury_flat.sol\":{\"keccak256\":\"0x98135fb3717076a62558f6542be17f0b4d1c28ee14d097b4c5fafb6014b21a8a\",\"urls\":[\"bzz-raw://a1461c5fde3b10830f36dce8f61fe2bb4b572a0c7d2b87faf75665e9a93debd3\",\"dweb:/ipfs/QmbivuoGpfywb5YBChFYGzq5FkASujh734iX9Uo2NSaaVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"treasury_flat.sol\":12508:23731  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"treasury_flat.sol\":13083:13196  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"treasury_flat.sol\":13157:13162  name_ */\n  dup2\n    /* \"treasury_flat.sol\":13149:13154  _name */\n  0x03\n    /* \"treasury_flat.sol\":13149:13162  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"treasury_flat.sol\":13182:13189  symbol_ */\n  dup1\n    /* \"treasury_flat.sol\":13172:13179  _symbol */\n  0x04\n    /* \"treasury_flat.sol\":13172:13189  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"treasury_flat.sol\":13083:13196  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"treasury_flat.sol\":12508:23731  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_21:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_22:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_23:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_24:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_25:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_26:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_27:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_28:\n    /* \"#utility.yul\":957:984   */\n  tag_44\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_26\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_46\n  tag_27\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1030:1118   */\ntag_45:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_29:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_48\n  tag_21\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_49\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_28\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_30:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_52\n  tag_27\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1434:1490   */\ntag_51:\n    /* \"#utility.yul\":1508:1537   */\n  tag_53\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_26\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1917   */\ntag_31:\n    /* \"#utility.yul\":1678:1679   */\n  0x00\n    /* \"#utility.yul\":1688:1801   */\ntag_55:\n    /* \"#utility.yul\":1702:1708   */\n  dup4\n    /* \"#utility.yul\":1699:1700   */\n  dup2\n    /* \"#utility.yul\":1696:1709   */\n  lt\n    /* \"#utility.yul\":1688:1801   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1787:1788   */\n  dup1\n    /* \"#utility.yul\":1782:1785   */\n  dup3\n    /* \"#utility.yul\":1778:1789   */\n  add\n    /* \"#utility.yul\":1772:1790   */\n  mload\n    /* \"#utility.yul\":1768:1769   */\n  dup2\n    /* \"#utility.yul\":1763:1766   */\n  dup5\n    /* \"#utility.yul\":1759:1770   */\n  add\n    /* \"#utility.yul\":1752:1791   */\n  mstore\n    /* \"#utility.yul\":1724:1726   */\n  0x20\n    /* \"#utility.yul\":1721:1722   */\n  dup2\n    /* \"#utility.yul\":1717:1727   */\n  add\n    /* \"#utility.yul\":1712:1727   */\n  swap1\n  pop\n    /* \"#utility.yul\":1688:1801   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":1819:1825   */\n  dup4\n    /* \"#utility.yul\":1816:1817   */\n  dup2\n    /* \"#utility.yul\":1813:1826   */\n  gt\n    /* \"#utility.yul\":1810:1911   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1899:1900   */\n  0x00\n    /* \"#utility.yul\":1890:1896   */\n  dup5\n    /* \"#utility.yul\":1885:1888   */\n  dup5\n    /* \"#utility.yul\":1881:1897   */\n  add\n    /* \"#utility.yul\":1874:1901   */\n  mstore\n    /* \"#utility.yul\":1810:1911   */\ntag_58:\n    /* \"#utility.yul\":1659:1917   */\n  pop\n    /* \"#utility.yul\":1610:1917   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1923:2344   */\ntag_32:\n    /* \"#utility.yul\":2012:2017   */\n  0x00\n    /* \"#utility.yul\":2037:2103   */\n  tag_60\n    /* \"#utility.yul\":2053:2102   */\n  tag_61\n    /* \"#utility.yul\":2095:2101   */\n  dup5\n    /* \"#utility.yul\":2053:2102   */\n  tag_30\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2037:2103   */\n  tag_29\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2028:2103   */\n  swap1\n  pop\n    /* \"#utility.yul\":2126:2132   */\n  dup3\n    /* \"#utility.yul\":2119:2124   */\n  dup2\n    /* \"#utility.yul\":2112:2133   */\n  mstore\n    /* \"#utility.yul\":2164:2168   */\n  0x20\n    /* \"#utility.yul\":2157:2162   */\n  dup2\n    /* \"#utility.yul\":2153:2169   */\n  add\n    /* \"#utility.yul\":2202:2205   */\n  dup5\n    /* \"#utility.yul\":2193:2199   */\n  dup5\n    /* \"#utility.yul\":2188:2191   */\n  dup5\n    /* \"#utility.yul\":2184:2200   */\n  add\n    /* \"#utility.yul\":2181:2206   */\n  gt\n    /* \"#utility.yul\":2178:2290   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2209:2288   */\n  tag_63\n  tag_25\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2178:2290   */\ntag_62:\n    /* \"#utility.yul\":2299:2338   */\n  tag_64\n    /* \"#utility.yul\":2331:2337   */\n  dup5\n    /* \"#utility.yul\":2326:2329   */\n  dup3\n    /* \"#utility.yul\":2321:2324   */\n  dup6\n    /* \"#utility.yul\":2299:2338   */\n  tag_31\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2018:2344   */\n  pop\n    /* \"#utility.yul\":1923:2344   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2719   */\ntag_33:\n    /* \"#utility.yul\":2431:2436   */\n  0x00\n    /* \"#utility.yul\":2480:2483   */\n  dup3\n    /* \"#utility.yul\":2473:2477   */\n  0x1f\n    /* \"#utility.yul\":2465:2471   */\n  dup4\n    /* \"#utility.yul\":2461:2478   */\n  add\n    /* \"#utility.yul\":2457:2484   */\n  slt\n    /* \"#utility.yul\":2447:2569   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2488:2567   */\n  tag_67\n  tag_24\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2447:2569   */\ntag_66:\n    /* \"#utility.yul\":2598:2604   */\n  dup2\n    /* \"#utility.yul\":2592:2605   */\n  mload\n    /* \"#utility.yul\":2623:2713   */\n  tag_68\n    /* \"#utility.yul\":2709:2712   */\n  dup5\n    /* \"#utility.yul\":2701:2707   */\n  dup3\n    /* \"#utility.yul\":2694:2698   */\n  0x20\n    /* \"#utility.yul\":2686:2692   */\n  dup7\n    /* \"#utility.yul\":2682:2699   */\n  add\n    /* \"#utility.yul\":2623:2713   */\n  tag_32\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2614:2713   */\n  swap2\n  pop\n    /* \"#utility.yul\":2437:2719   */\n  pop\n    /* \"#utility.yul\":2364:2719   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2725:3578   */\ntag_3:\n    /* \"#utility.yul\":2824:2830   */\n  0x00\n    /* \"#utility.yul\":2832:2838   */\n  dup1\n    /* \"#utility.yul\":2881:2883   */\n  0x40\n    /* \"#utility.yul\":2869:2878   */\n  dup4\n    /* \"#utility.yul\":2860:2867   */\n  dup6\n    /* \"#utility.yul\":2856:2879   */\n  sub\n    /* \"#utility.yul\":2852:2884   */\n  slt\n    /* \"#utility.yul\":2849:2968   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2887:2966   */\n  tag_71\n  tag_22\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2849:2968   */\ntag_70:\n    /* \"#utility.yul\":3028:3029   */\n  0x00\n    /* \"#utility.yul\":3017:3026   */\n  dup4\n    /* \"#utility.yul\":3013:3030   */\n  add\n    /* \"#utility.yul\":3007:3031   */\n  mload\n    /* \"#utility.yul\":3058:3076   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3047:3077   */\n  gt\n    /* \"#utility.yul\":3044:3161   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":3080:3159   */\n  tag_73\n  tag_23\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3044:3161   */\ntag_72:\n    /* \"#utility.yul\":3185:3259   */\n  tag_74\n    /* \"#utility.yul\":3251:3258   */\n  dup6\n    /* \"#utility.yul\":3242:3248   */\n  dup3\n    /* \"#utility.yul\":3231:3240   */\n  dup7\n    /* \"#utility.yul\":3227:3249   */\n  add\n    /* \"#utility.yul\":3185:3259   */\n  tag_33\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3175:3259   */\n  swap3\n  pop\n    /* \"#utility.yul\":2978:3269   */\n  pop\n    /* \"#utility.yul\":3329:3331   */\n  0x20\n    /* \"#utility.yul\":3318:3327   */\n  dup4\n    /* \"#utility.yul\":3314:3332   */\n  add\n    /* \"#utility.yul\":3308:3333   */\n  mload\n    /* \"#utility.yul\":3360:3378   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3352:3358   */\n  dup2\n    /* \"#utility.yul\":3349:3379   */\n  gt\n    /* \"#utility.yul\":3346:3463   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":3382:3461   */\n  tag_76\n  tag_23\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3346:3463   */\ntag_75:\n    /* \"#utility.yul\":3487:3561   */\n  tag_77\n    /* \"#utility.yul\":3553:3560   */\n  dup6\n    /* \"#utility.yul\":3544:3550   */\n  dup3\n    /* \"#utility.yul\":3533:3542   */\n  dup7\n    /* \"#utility.yul\":3529:3551   */\n  add\n    /* \"#utility.yul\":3487:3561   */\n  tag_33\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3477:3561   */\n  swap2\n  pop\n    /* \"#utility.yul\":3279:3571   */\n  pop\n    /* \"#utility.yul\":2725:3578   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3584:3764   */\ntag_34:\n    /* \"#utility.yul\":3632:3709   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3629:3630   */\n  0x00\n    /* \"#utility.yul\":3622:3710   */\n  mstore\n    /* \"#utility.yul\":3729:3733   */\n  0x22\n    /* \"#utility.yul\":3726:3727   */\n  0x04\n    /* \"#utility.yul\":3719:3734   */\n  mstore\n    /* \"#utility.yul\":3753:3757   */\n  0x24\n    /* \"#utility.yul\":3750:3751   */\n  0x00\n    /* \"#utility.yul\":3743:3758   */\n  revert\n    /* \"#utility.yul\":3770:4090   */\ntag_11:\n    /* \"#utility.yul\":3814:3820   */\n  0x00\n    /* \"#utility.yul\":3851:3852   */\n  0x02\n    /* \"#utility.yul\":3845:3849   */\n  dup3\n    /* \"#utility.yul\":3841:3853   */\n  div\n    /* \"#utility.yul\":3831:3853   */\n  swap1\n  pop\n    /* \"#utility.yul\":3898:3899   */\n  0x01\n    /* \"#utility.yul\":3892:3896   */\n  dup3\n    /* \"#utility.yul\":3888:3900   */\n  and\n    /* \"#utility.yul\":3919:3937   */\n  dup1\n    /* \"#utility.yul\":3909:3990   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3975:3979   */\n  0x7f\n    /* \"#utility.yul\":3967:3973   */\n  dup3\n    /* \"#utility.yul\":3963:3980   */\n  and\n    /* \"#utility.yul\":3953:3980   */\n  swap2\n  pop\n    /* \"#utility.yul\":3909:3990   */\ntag_80:\n    /* \"#utility.yul\":4037:4039   */\n  0x20\n    /* \"#utility.yul\":4029:4035   */\n  dup3\n    /* \"#utility.yul\":4026:4040   */\n  lt\n    /* \"#utility.yul\":4006:4024   */\n  dup2\n    /* \"#utility.yul\":4003:4041   */\n  sub\n    /* \"#utility.yul\":4000:4084   */\n  tag_81\n  jumpi\n    /* \"#utility.yul\":4056:4074   */\n  tag_82\n  tag_34\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4000:4084   */\ntag_81:\n    /* \"#utility.yul\":3821:4090   */\n  pop\n    /* \"#utility.yul\":3770:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"treasury_flat.sol\":12508:23731  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"treasury_flat.sol\":12508:23731  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"treasury_flat.sol\":13261:13359  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"treasury_flat.sol\":15538:15735  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"treasury_flat.sol\":14349:14455  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"treasury_flat.sol\":16297:16583  function transferFrom(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"treasury_flat.sol\":14198:14289  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"treasury_flat.sol\":16978:17212  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"treasury_flat.sol\":14513:14638  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"treasury_flat.sol\":13472:13574  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"treasury_flat.sol\":17699:18126  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"treasury_flat.sol\":14834:15023  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"treasury_flat.sol\":15081:15230  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"treasury_flat.sol\":13261:13359  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"treasury_flat.sol\":13315:13328  string memory */\n      0x60\n        /* \"treasury_flat.sol\":13347:13352  _name */\n      0x03\n        /* \"treasury_flat.sol\":13340:13352  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"treasury_flat.sol\":13261:13359  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"treasury_flat.sol\":15538:15735  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"treasury_flat.sol\":15621:15625  bool */\n      0x00\n        /* \"treasury_flat.sol\":15637:15650  address owner */\n      dup1\n        /* \"treasury_flat.sol\":15653:15665  _msgSender() */\n      tag_71\n        /* \"treasury_flat.sol\":15653:15663  _msgSender */\n      tag_72\n        /* \"treasury_flat.sol\":15653:15665  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"treasury_flat.sol\":15637:15665  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":15675:15707  _approve(owner, spender, amount) */\n      tag_73\n        /* \"treasury_flat.sol\":15684:15689  owner */\n      dup2\n        /* \"treasury_flat.sol\":15691:15698  spender */\n      dup6\n        /* \"treasury_flat.sol\":15700:15706  amount */\n      dup6\n        /* \"treasury_flat.sol\":15675:15683  _approve */\n      tag_74\n        /* \"treasury_flat.sol\":15675:15707  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"treasury_flat.sol\":15724:15728  true */\n      0x01\n        /* \"treasury_flat.sol\":15717:15728  return true */\n      swap2\n      pop\n      pop\n        /* \"treasury_flat.sol\":15538:15735  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"treasury_flat.sol\":14349:14455  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"treasury_flat.sol\":14410:14417  uint256 */\n      0x00\n        /* \"treasury_flat.sol\":14436:14448  _totalSupply */\n      sload(0x02)\n        /* \"treasury_flat.sol\":14429:14448  return _totalSupply */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":14349:14455  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"treasury_flat.sol\":16297:16583  function transferFrom(... */\n    tag_32:\n        /* \"treasury_flat.sol\":16424:16428  bool */\n      0x00\n        /* \"treasury_flat.sol\":16440:16455  address spender */\n      dup1\n        /* \"treasury_flat.sol\":16458:16470  _msgSender() */\n      tag_77\n        /* \"treasury_flat.sol\":16458:16468  _msgSender */\n      tag_72\n        /* \"treasury_flat.sol\":16458:16470  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"treasury_flat.sol\":16440:16470  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":16480:16518  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"treasury_flat.sol\":16496:16500  from */\n      dup6\n        /* \"treasury_flat.sol\":16502:16509  spender */\n      dup3\n        /* \"treasury_flat.sol\":16511:16517  amount */\n      dup6\n        /* \"treasury_flat.sol\":16480:16495  _spendAllowance */\n      tag_79\n        /* \"treasury_flat.sol\":16480:16518  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"treasury_flat.sol\":16528:16555  _transfer(from, to, amount) */\n      tag_80\n        /* \"treasury_flat.sol\":16538:16542  from */\n      dup6\n        /* \"treasury_flat.sol\":16544:16546  to */\n      dup6\n        /* \"treasury_flat.sol\":16548:16554  amount */\n      dup6\n        /* \"treasury_flat.sol\":16528:16537  _transfer */\n      tag_81\n        /* \"treasury_flat.sol\":16528:16555  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n        /* \"treasury_flat.sol\":16572:16576  true */\n      0x01\n        /* \"treasury_flat.sol\":16565:16576  return true */\n      swap2\n      pop\n      pop\n        /* \"treasury_flat.sol\":16297:16583  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"treasury_flat.sol\":14198:14289  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \"treasury_flat.sol\":14256:14261  uint8 */\n      0x00\n        /* \"treasury_flat.sol\":14280:14282  18 */\n      0x12\n        /* \"treasury_flat.sol\":14273:14282  return 18 */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":14198:14289  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"treasury_flat.sol\":16978:17212  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"treasury_flat.sol\":17066:17070  bool */\n      0x00\n        /* \"treasury_flat.sol\":17082:17095  address owner */\n      dup1\n        /* \"treasury_flat.sol\":17098:17110  _msgSender() */\n      tag_84\n        /* \"treasury_flat.sol\":17098:17108  _msgSender */\n      tag_72\n        /* \"treasury_flat.sol\":17098:17110  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"treasury_flat.sol\":17082:17110  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":17120:17184  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_85\n        /* \"treasury_flat.sol\":17129:17134  owner */\n      dup2\n        /* \"treasury_flat.sol\":17136:17143  spender */\n      dup6\n        /* \"treasury_flat.sol\":17173:17183  addedValue */\n      dup6\n        /* \"treasury_flat.sol\":17145:17170  allowance(owner, spender) */\n      tag_86\n        /* \"treasury_flat.sol\":17155:17160  owner */\n      dup6\n        /* \"treasury_flat.sol\":17162:17169  spender */\n      dup10\n        /* \"treasury_flat.sol\":17145:17154  allowance */\n      tag_61\n        /* \"treasury_flat.sol\":17145:17170  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"treasury_flat.sol\":17145:17183  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"treasury_flat.sol\":17120:17128  _approve */\n      tag_74\n        /* \"treasury_flat.sol\":17120:17184  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_85:\n        /* \"treasury_flat.sol\":17201:17205  true */\n      0x01\n        /* \"treasury_flat.sol\":17194:17205  return true */\n      swap2\n      pop\n      pop\n        /* \"treasury_flat.sol\":16978:17212  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"treasury_flat.sol\":14513:14638  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"treasury_flat.sol\":14587:14594  uint256 */\n      0x00\n        /* \"treasury_flat.sol\":14613:14622  _balances */\n      dup1\n        /* \"treasury_flat.sol\":14613:14631  _balances[account] */\n      0x00\n        /* \"treasury_flat.sol\":14623:14630  account */\n      dup4\n        /* \"treasury_flat.sol\":14613:14631  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"treasury_flat.sol\":14606:14631  return _balances[account] */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":14513:14638  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"treasury_flat.sol\":13472:13574  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"treasury_flat.sol\":13528:13541  string memory */\n      0x60\n        /* \"treasury_flat.sol\":13560:13567  _symbol */\n      0x04\n        /* \"treasury_flat.sol\":13553:13567  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_65\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_65\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"treasury_flat.sol\":13472:13574  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"treasury_flat.sol\":17699:18126  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"treasury_flat.sol\":17792:17796  bool */\n      0x00\n        /* \"treasury_flat.sol\":17808:17821  address owner */\n      dup1\n        /* \"treasury_flat.sol\":17824:17836  _msgSender() */\n      tag_97\n        /* \"treasury_flat.sol\":17824:17834  _msgSender */\n      tag_72\n        /* \"treasury_flat.sol\":17824:17836  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"treasury_flat.sol\":17808:17836  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":17846:17870  uint256 currentAllowance */\n      0x00\n        /* \"treasury_flat.sol\":17873:17898  allowance(owner, spender) */\n      tag_98\n        /* \"treasury_flat.sol\":17883:17888  owner */\n      dup3\n        /* \"treasury_flat.sol\":17890:17897  spender */\n      dup7\n        /* \"treasury_flat.sol\":17873:17882  allowance */\n      tag_61\n        /* \"treasury_flat.sol\":17873:17898  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"treasury_flat.sol\":17846:17898  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":17936:17951  subtractedValue */\n      dup4\n        /* \"treasury_flat.sol\":17916:17932  currentAllowance */\n      dup2\n        /* \"treasury_flat.sol\":17916:17951  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"treasury_flat.sol\":17908:17993  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"treasury_flat.sol\":18027:18087  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_102\n        /* \"treasury_flat.sol\":18036:18041  owner */\n      dup3\n        /* \"treasury_flat.sol\":18043:18050  spender */\n      dup7\n        /* \"treasury_flat.sol\":18071:18086  subtractedValue */\n      dup7\n        /* \"treasury_flat.sol\":18052:18068  currentAllowance */\n      dup5\n        /* \"treasury_flat.sol\":18052:18086  currentAllowance - subtractedValue */\n      sub\n        /* \"treasury_flat.sol\":18027:18035  _approve */\n      tag_74\n        /* \"treasury_flat.sol\":18027:18087  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_102:\n        /* \"treasury_flat.sol\":18115:18119  true */\n      0x01\n        /* \"treasury_flat.sol\":18108:18119  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"treasury_flat.sol\":17699:18126  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"treasury_flat.sol\":14834:15023  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"treasury_flat.sol\":14913:14917  bool */\n      0x00\n        /* \"treasury_flat.sol\":14929:14942  address owner */\n      dup1\n        /* \"treasury_flat.sol\":14945:14957  _msgSender() */\n      tag_104\n        /* \"treasury_flat.sol\":14945:14955  _msgSender */\n      tag_72\n        /* \"treasury_flat.sol\":14945:14957  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"treasury_flat.sol\":14929:14957  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":14967:14995  _transfer(owner, to, amount) */\n      tag_105\n        /* \"treasury_flat.sol\":14977:14982  owner */\n      dup2\n        /* \"treasury_flat.sol\":14984:14986  to */\n      dup6\n        /* \"treasury_flat.sol\":14988:14994  amount */\n      dup6\n        /* \"treasury_flat.sol\":14967:14976  _transfer */\n      tag_81\n        /* \"treasury_flat.sol\":14967:14995  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_105:\n        /* \"treasury_flat.sol\":15012:15016  true */\n      0x01\n        /* \"treasury_flat.sol\":15005:15016  return true */\n      swap2\n      pop\n      pop\n        /* \"treasury_flat.sol\":14834:15023  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"treasury_flat.sol\":15081:15230  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n        /* \"treasury_flat.sol\":15170:15177  uint256 */\n      0x00\n        /* \"treasury_flat.sol\":15196:15207  _allowances */\n      0x01\n        /* \"treasury_flat.sol\":15196:15214  _allowances[owner] */\n      0x00\n        /* \"treasury_flat.sol\":15208:15213  owner */\n      dup5\n        /* \"treasury_flat.sol\":15196:15214  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"treasury_flat.sol\":15196:15223  _allowances[owner][spender] */\n      0x00\n        /* \"treasury_flat.sol\":15215:15222  spender */\n      dup4\n        /* \"treasury_flat.sol\":15196:15223  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"treasury_flat.sol\":15189:15223  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":15081:15230  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"treasury_flat.sol\":662:758  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \"treasury_flat.sol\":715:722  address */\n      0x00\n        /* \"treasury_flat.sol\":741:751  msg.sender */\n      caller\n        /* \"treasury_flat.sol\":734:751  return msg.sender */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":662:758  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"treasury_flat.sol\":21224:21594  function _approve(... */\n    tag_74:\n        /* \"treasury_flat.sol\":21372:21373  0 */\n      0x00\n        /* \"treasury_flat.sol\":21355:21374  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":21355:21360  owner */\n      dup4\n        /* \"treasury_flat.sol\":21355:21374  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"treasury_flat.sol\":21347:21415  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"treasury_flat.sol\":21452:21453  0 */\n      0x00\n        /* \"treasury_flat.sol\":21433:21454  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":21433:21440  spender */\n      dup3\n        /* \"treasury_flat.sol\":21433:21454  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"treasury_flat.sol\":21425:21493  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"treasury_flat.sol\":21534:21540  amount */\n      dup1\n        /* \"treasury_flat.sol\":21504:21515  _allowances */\n      0x01\n        /* \"treasury_flat.sol\":21504:21522  _allowances[owner] */\n      0x00\n        /* \"treasury_flat.sol\":21516:21521  owner */\n      dup6\n        /* \"treasury_flat.sol\":21504:21522  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"treasury_flat.sol\":21504:21531  _allowances[owner][spender] */\n      0x00\n        /* \"treasury_flat.sol\":21523:21530  spender */\n      dup5\n        /* \"treasury_flat.sol\":21504:21531  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"treasury_flat.sol\":21504:21540  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"treasury_flat.sol\":21571:21578  spender */\n      dup2\n        /* \"treasury_flat.sol\":21555:21587  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":21564:21569  owner */\n      dup4\n        /* \"treasury_flat.sol\":21555:21587  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"treasury_flat.sol\":21580:21586  amount */\n      dup4\n        /* \"treasury_flat.sol\":21555:21587  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"treasury_flat.sol\":21224:21594  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"treasury_flat.sol\":21875:22316  function _spendAllowance(... */\n    tag_79:\n        /* \"treasury_flat.sol\":22005:22029  uint256 currentAllowance */\n      0x00\n        /* \"treasury_flat.sol\":22032:22057  allowance(owner, spender) */\n      tag_117\n        /* \"treasury_flat.sol\":22042:22047  owner */\n      dup5\n        /* \"treasury_flat.sol\":22049:22056  spender */\n      dup5\n        /* \"treasury_flat.sol\":22032:22041  allowance */\n      tag_61\n        /* \"treasury_flat.sol\":22032:22057  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"treasury_flat.sol\":22005:22057  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":22091:22108  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"treasury_flat.sol\":22071:22087  currentAllowance */\n      dup2\n        /* \"treasury_flat.sol\":22071:22108  currentAllowance != type(uint256).max */\n      eq\n        /* \"treasury_flat.sol\":22067:22310  if (currentAllowance != type(uint256).max) {... */\n      tag_118\n      jumpi\n        /* \"treasury_flat.sol\":22152:22158  amount */\n      dup2\n        /* \"treasury_flat.sol\":22132:22148  currentAllowance */\n      dup2\n        /* \"treasury_flat.sol\":22132:22158  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"treasury_flat.sol\":22124:22192  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"treasury_flat.sol\":22234:22285  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"treasury_flat.sol\":22243:22248  owner */\n      dup5\n        /* \"treasury_flat.sol\":22250:22257  spender */\n      dup5\n        /* \"treasury_flat.sol\":22278:22284  amount */\n      dup5\n        /* \"treasury_flat.sol\":22259:22275  currentAllowance */\n      dup5\n        /* \"treasury_flat.sol\":22259:22284  currentAllowance - amount */\n      sub\n        /* \"treasury_flat.sol\":22234:22242  _approve */\n      tag_74\n        /* \"treasury_flat.sol\":22234:22285  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"treasury_flat.sol\":22067:22310  if (currentAllowance != type(uint256).max) {... */\n    tag_118:\n        /* \"treasury_flat.sol\":21995:22316  {... */\n      pop\n        /* \"treasury_flat.sol\":21875:22316  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"treasury_flat.sol\":18589:19240  function _transfer(... */\n    tag_81:\n        /* \"treasury_flat.sol\":18731:18732  0 */\n      0x00\n        /* \"treasury_flat.sol\":18715:18733  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":18715:18719  from */\n      dup4\n        /* \"treasury_flat.sol\":18715:18733  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"treasury_flat.sol\":18707:18775  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"treasury_flat.sol\":18807:18808  0 */\n      0x00\n        /* \"treasury_flat.sol\":18793:18809  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":18793:18795  to */\n      dup3\n        /* \"treasury_flat.sol\":18793:18809  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"treasury_flat.sol\":18785:18849  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"treasury_flat.sol\":18860:18898  _beforeTokenTransfer(from, to, amount) */\n      tag_130\n        /* \"treasury_flat.sol\":18881:18885  from */\n      dup4\n        /* \"treasury_flat.sol\":18887:18889  to */\n      dup4\n        /* \"treasury_flat.sol\":18891:18897  amount */\n      dup4\n        /* \"treasury_flat.sol\":18860:18880  _beforeTokenTransfer */\n      tag_131\n        /* \"treasury_flat.sol\":18860:18898  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_130:\n        /* \"treasury_flat.sol\":18909:18928  uint256 fromBalance */\n      0x00\n        /* \"treasury_flat.sol\":18931:18940  _balances */\n      dup1\n        /* \"treasury_flat.sol\":18931:18946  _balances[from] */\n      0x00\n        /* \"treasury_flat.sol\":18941:18945  from */\n      dup6\n        /* \"treasury_flat.sol\":18931:18946  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"treasury_flat.sol\":18909:18946  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":18979:18985  amount */\n      dup2\n        /* \"treasury_flat.sol\":18964:18975  fromBalance */\n      dup2\n        /* \"treasury_flat.sol\":18964:18985  fromBalance >= amount */\n      lt\n      iszero\n        /* \"treasury_flat.sol\":18956:19028  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"treasury_flat.sol\":19094:19100  amount */\n      dup2\n        /* \"treasury_flat.sol\":19080:19091  fromBalance */\n      dup2\n        /* \"treasury_flat.sol\":19080:19100  fromBalance - amount */\n      sub\n        /* \"treasury_flat.sol\":19062:19071  _balances */\n      0x00\n        /* \"treasury_flat.sol\":19062:19077  _balances[from] */\n      dup1\n        /* \"treasury_flat.sol\":19072:19076  from */\n      dup7\n        /* \"treasury_flat.sol\":19062:19077  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"treasury_flat.sol\":19062:19100  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"treasury_flat.sol\":19137:19143  amount */\n      dup2\n        /* \"treasury_flat.sol\":19120:19129  _balances */\n      0x00\n        /* \"treasury_flat.sol\":19120:19133  _balances[to] */\n      dup1\n        /* \"treasury_flat.sol\":19130:19132  to */\n      dup6\n        /* \"treasury_flat.sol\":19120:19133  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"treasury_flat.sol\":19120:19143  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_135\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"treasury_flat.sol\":19174:19176  to */\n      dup3\n        /* \"treasury_flat.sol\":19159:19185  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":19168:19172  from */\n      dup5\n        /* \"treasury_flat.sol\":19159:19185  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"treasury_flat.sol\":19178:19184  amount */\n      dup5\n        /* \"treasury_flat.sol\":19159:19185  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"treasury_flat.sol\":19196:19233  _afterTokenTransfer(from, to, amount) */\n      tag_137\n        /* \"treasury_flat.sol\":19216:19220  from */\n      dup5\n        /* \"treasury_flat.sol\":19222:19224  to */\n      dup5\n        /* \"treasury_flat.sol\":19226:19232  amount */\n      dup5\n        /* \"treasury_flat.sol\":19196:19215  _afterTokenTransfer */\n      tag_138\n        /* \"treasury_flat.sol\":19196:19233  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_137:\n        /* \"treasury_flat.sol\":18697:19240  {... */\n      pop\n        /* \"treasury_flat.sol\":18589:19240  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"treasury_flat.sol\":22900:23021  function _beforeTokenTransfer(... */\n    tag_131:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"treasury_flat.sol\":23609:23729  function _afterTokenTransfer(... */\n    tag_138:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_141:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_142:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:594   */\n    tag_143:\n        /* \"#utility.yul\":355:356   */\n      0x00\n        /* \"#utility.yul\":365:478   */\n    tag_181:\n        /* \"#utility.yul\":379:385   */\n      dup4\n        /* \"#utility.yul\":376:377   */\n      dup2\n        /* \"#utility.yul\":373:386   */\n      lt\n        /* \"#utility.yul\":365:478   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":464:465   */\n      dup1\n        /* \"#utility.yul\":459:462   */\n      dup3\n        /* \"#utility.yul\":455:466   */\n      add\n        /* \"#utility.yul\":449:467   */\n      mload\n        /* \"#utility.yul\":445:446   */\n      dup2\n        /* \"#utility.yul\":440:443   */\n      dup5\n        /* \"#utility.yul\":436:447   */\n      add\n        /* \"#utility.yul\":429:468   */\n      mstore\n        /* \"#utility.yul\":401:403   */\n      0x20\n        /* \"#utility.yul\":398:399   */\n      dup2\n        /* \"#utility.yul\":394:404   */\n      add\n        /* \"#utility.yul\":389:404   */\n      swap1\n      pop\n        /* \"#utility.yul\":365:478   */\n      jump(tag_181)\n    tag_183:\n        /* \"#utility.yul\":496:502   */\n      dup4\n        /* \"#utility.yul\":493:494   */\n      dup2\n        /* \"#utility.yul\":490:503   */\n      gt\n        /* \"#utility.yul\":487:588   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":576:577   */\n      0x00\n        /* \"#utility.yul\":567:573   */\n      dup5\n        /* \"#utility.yul\":562:565   */\n      dup5\n        /* \"#utility.yul\":558:574   */\n      add\n        /* \"#utility.yul\":551:578   */\n      mstore\n        /* \"#utility.yul\":487:588   */\n    tag_184:\n        /* \"#utility.yul\":336:594   */\n      pop\n        /* \"#utility.yul\":287:594   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":600:702   */\n    tag_144:\n        /* \"#utility.yul\":641:647   */\n      0x00\n        /* \"#utility.yul\":692:694   */\n      0x1f\n        /* \"#utility.yul\":688:695   */\n      not\n        /* \"#utility.yul\":683:685   */\n      0x1f\n        /* \"#utility.yul\":676:681   */\n      dup4\n        /* \"#utility.yul\":672:686   */\n      add\n        /* \"#utility.yul\":668:696   */\n      and\n        /* \"#utility.yul\":658:696   */\n      swap1\n      pop\n        /* \"#utility.yul\":600:702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":708:1072   */\n    tag_145:\n        /* \"#utility.yul\":796:799   */\n      0x00\n        /* \"#utility.yul\":824:863   */\n      tag_187\n        /* \"#utility.yul\":857:862   */\n      dup3\n        /* \"#utility.yul\":824:863   */\n      tag_141\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":879:950   */\n      tag_188\n        /* \"#utility.yul\":943:949   */\n      dup2\n        /* \"#utility.yul\":938:941   */\n      dup6\n        /* \"#utility.yul\":879:950   */\n      tag_142\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":872:950   */\n      swap4\n      pop\n        /* \"#utility.yul\":959:1011   */\n      tag_189\n        /* \"#utility.yul\":1004:1010   */\n      dup2\n        /* \"#utility.yul\":999:1002   */\n      dup6\n        /* \"#utility.yul\":992:996   */\n      0x20\n        /* \"#utility.yul\":985:990   */\n      dup7\n        /* \"#utility.yul\":981:997   */\n      add\n        /* \"#utility.yul\":959:1011   */\n      tag_143\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1036:1065   */\n      tag_190\n        /* \"#utility.yul\":1058:1064   */\n      dup2\n        /* \"#utility.yul\":1036:1065   */\n      tag_144\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1031:1034   */\n      dup5\n        /* \"#utility.yul\":1027:1066   */\n      add\n        /* \"#utility.yul\":1020:1066   */\n      swap2\n      pop\n        /* \"#utility.yul\":800:1072   */\n      pop\n        /* \"#utility.yul\":708:1072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1078:1391   */\n    tag_18:\n        /* \"#utility.yul\":1191:1195   */\n      0x00\n        /* \"#utility.yul\":1229:1231   */\n      0x20\n        /* \"#utility.yul\":1218:1227   */\n      dup3\n        /* \"#utility.yul\":1214:1232   */\n      add\n        /* \"#utility.yul\":1206:1232   */\n      swap1\n      pop\n        /* \"#utility.yul\":1278:1287   */\n      dup2\n        /* \"#utility.yul\":1272:1276   */\n      dup2\n        /* \"#utility.yul\":1268:1288   */\n      sub\n        /* \"#utility.yul\":1264:1265   */\n      0x00\n        /* \"#utility.yul\":1253:1262   */\n      dup4\n        /* \"#utility.yul\":1249:1266   */\n      add\n        /* \"#utility.yul\":1242:1289   */\n      mstore\n        /* \"#utility.yul\":1306:1384   */\n      tag_192\n        /* \"#utility.yul\":1379:1383   */\n      dup2\n        /* \"#utility.yul\":1370:1376   */\n      dup5\n        /* \"#utility.yul\":1306:1384   */\n      tag_145\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1298:1384   */\n      swap1\n      pop\n        /* \"#utility.yul\":1078:1391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1478:1595   */\n    tag_147:\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1584:1585   */\n      dup1\n        /* \"#utility.yul\":1577:1589   */\n      revert\n        /* \"#utility.yul\":1724:1850   */\n    tag_149:\n        /* \"#utility.yul\":1761:1768   */\n      0x00\n        /* \"#utility.yul\":1801:1843   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1794:1799   */\n      dup3\n        /* \"#utility.yul\":1790:1844   */\n      and\n        /* \"#utility.yul\":1779:1844   */\n      swap1\n      pop\n        /* \"#utility.yul\":1724:1850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1856:1952   */\n    tag_150:\n        /* \"#utility.yul\":1893:1900   */\n      0x00\n        /* \"#utility.yul\":1922:1946   */\n      tag_198\n        /* \"#utility.yul\":1940:1945   */\n      dup3\n        /* \"#utility.yul\":1922:1946   */\n      tag_149\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1911:1946   */\n      swap1\n      pop\n        /* \"#utility.yul\":1856:1952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1958:2080   */\n    tag_151:\n        /* \"#utility.yul\":2031:2055   */\n      tag_200\n        /* \"#utility.yul\":2049:2054   */\n      dup2\n        /* \"#utility.yul\":2031:2055   */\n      tag_150\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2024:2029   */\n      dup2\n        /* \"#utility.yul\":2021:2056   */\n      eq\n        /* \"#utility.yul\":2011:2074   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":2070:2071   */\n      0x00\n        /* \"#utility.yul\":2067:2068   */\n      dup1\n        /* \"#utility.yul\":2060:2072   */\n      revert\n        /* \"#utility.yul\":2011:2074   */\n    tag_201:\n        /* \"#utility.yul\":1958:2080   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2086:2225   */\n    tag_152:\n        /* \"#utility.yul\":2132:2137   */\n      0x00\n        /* \"#utility.yul\":2170:2176   */\n      dup2\n        /* \"#utility.yul\":2157:2177   */\n      calldataload\n        /* \"#utility.yul\":2148:2177   */\n      swap1\n      pop\n        /* \"#utility.yul\":2186:2219   */\n      tag_203\n        /* \"#utility.yul\":2213:2218   */\n      dup2\n        /* \"#utility.yul\":2186:2219   */\n      tag_151\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2086:2225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2231:2308   */\n    tag_153:\n        /* \"#utility.yul\":2268:2275   */\n      0x00\n        /* \"#utility.yul\":2297:2302   */\n      dup2\n        /* \"#utility.yul\":2286:2302   */\n      swap1\n      pop\n        /* \"#utility.yul\":2231:2308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2436   */\n    tag_154:\n        /* \"#utility.yul\":2387:2411   */\n      tag_206\n        /* \"#utility.yul\":2405:2410   */\n      dup2\n        /* \"#utility.yul\":2387:2411   */\n      tag_153\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2380:2385   */\n      dup2\n        /* \"#utility.yul\":2377:2412   */\n      eq\n        /* \"#utility.yul\":2367:2430   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":2426:2427   */\n      0x00\n        /* \"#utility.yul\":2423:2424   */\n      dup1\n        /* \"#utility.yul\":2416:2428   */\n      revert\n        /* \"#utility.yul\":2367:2430   */\n    tag_207:\n        /* \"#utility.yul\":2314:2436   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2442:2581   */\n    tag_155:\n        /* \"#utility.yul\":2488:2493   */\n      0x00\n        /* \"#utility.yul\":2526:2532   */\n      dup2\n        /* \"#utility.yul\":2513:2533   */\n      calldataload\n        /* \"#utility.yul\":2504:2533   */\n      swap1\n      pop\n        /* \"#utility.yul\":2542:2575   */\n      tag_209\n        /* \"#utility.yul\":2569:2574   */\n      dup2\n        /* \"#utility.yul\":2542:2575   */\n      tag_154\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2442:2581   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2587:3061   */\n    tag_21:\n        /* \"#utility.yul\":2655:2661   */\n      0x00\n        /* \"#utility.yul\":2663:2669   */\n      dup1\n        /* \"#utility.yul\":2712:2714   */\n      0x40\n        /* \"#utility.yul\":2700:2709   */\n      dup4\n        /* \"#utility.yul\":2691:2698   */\n      dup6\n        /* \"#utility.yul\":2687:2710   */\n      sub\n        /* \"#utility.yul\":2683:2715   */\n      slt\n        /* \"#utility.yul\":2680:2799   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":2718:2797   */\n      tag_212\n      tag_147\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2680:2799   */\n    tag_211:\n        /* \"#utility.yul\":2838:2839   */\n      0x00\n        /* \"#utility.yul\":2863:2916   */\n      tag_213\n        /* \"#utility.yul\":2908:2915   */\n      dup6\n        /* \"#utility.yul\":2899:2905   */\n      dup3\n        /* \"#utility.yul\":2888:2897   */\n      dup7\n        /* \"#utility.yul\":2884:2906   */\n      add\n        /* \"#utility.yul\":2863:2916   */\n      tag_152\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2853:2916   */\n      swap3\n      pop\n        /* \"#utility.yul\":2809:2926   */\n      pop\n        /* \"#utility.yul\":2965:2967   */\n      0x20\n        /* \"#utility.yul\":2991:3044   */\n      tag_214\n        /* \"#utility.yul\":3036:3043   */\n      dup6\n        /* \"#utility.yul\":3027:3033   */\n      dup3\n        /* \"#utility.yul\":3016:3025   */\n      dup7\n        /* \"#utility.yul\":3012:3034   */\n      add\n        /* \"#utility.yul\":2991:3044   */\n      tag_155\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2981:3044   */\n      swap2\n      pop\n        /* \"#utility.yul\":2936:3054   */\n      pop\n        /* \"#utility.yul\":2587:3061   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3067:3157   */\n    tag_156:\n        /* \"#utility.yul\":3101:3108   */\n      0x00\n        /* \"#utility.yul\":3144:3149   */\n      dup2\n        /* \"#utility.yul\":3137:3150   */\n      iszero\n        /* \"#utility.yul\":3130:3151   */\n      iszero\n        /* \"#utility.yul\":3119:3151   */\n      swap1\n      pop\n        /* \"#utility.yul\":3067:3157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3163:3272   */\n    tag_157:\n        /* \"#utility.yul\":3244:3265   */\n      tag_217\n        /* \"#utility.yul\":3259:3264   */\n      dup2\n        /* \"#utility.yul\":3244:3265   */\n      tag_156\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3239:3242   */\n      dup3\n        /* \"#utility.yul\":3232:3266   */\n      mstore\n        /* \"#utility.yul\":3163:3272   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3278:3488   */\n    tag_24:\n        /* \"#utility.yul\":3365:3369   */\n      0x00\n        /* \"#utility.yul\":3403:3405   */\n      0x20\n        /* \"#utility.yul\":3392:3401   */\n      dup3\n        /* \"#utility.yul\":3388:3406   */\n      add\n        /* \"#utility.yul\":3380:3406   */\n      swap1\n      pop\n        /* \"#utility.yul\":3416:3481   */\n      tag_219\n        /* \"#utility.yul\":3478:3479   */\n      0x00\n        /* \"#utility.yul\":3467:3476   */\n      dup4\n        /* \"#utility.yul\":3463:3480   */\n      add\n        /* \"#utility.yul\":3454:3460   */\n      dup5\n        /* \"#utility.yul\":3416:3481   */\n      tag_157\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3278:3488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:3612   */\n    tag_158:\n        /* \"#utility.yul\":3581:3605   */\n      tag_221\n        /* \"#utility.yul\":3599:3604   */\n      dup2\n        /* \"#utility.yul\":3581:3605   */\n      tag_153\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3576:3579   */\n      dup3\n        /* \"#utility.yul\":3569:3606   */\n      mstore\n        /* \"#utility.yul\":3494:3612   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3618:3840   */\n    tag_28:\n        /* \"#utility.yul\":3711:3715   */\n      0x00\n        /* \"#utility.yul\":3749:3751   */\n      0x20\n        /* \"#utility.yul\":3738:3747   */\n      dup3\n        /* \"#utility.yul\":3734:3752   */\n      add\n        /* \"#utility.yul\":3726:3752   */\n      swap1\n      pop\n        /* \"#utility.yul\":3762:3833   */\n      tag_223\n        /* \"#utility.yul\":3830:3831   */\n      0x00\n        /* \"#utility.yul\":3819:3828   */\n      dup4\n        /* \"#utility.yul\":3815:3832   */\n      add\n        /* \"#utility.yul\":3806:3812   */\n      dup5\n        /* \"#utility.yul\":3762:3833   */\n      tag_158\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3618:3840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3846:4465   */\n    tag_31:\n        /* \"#utility.yul\":3923:3929   */\n      0x00\n        /* \"#utility.yul\":3931:3937   */\n      dup1\n        /* \"#utility.yul\":3939:3945   */\n      0x00\n        /* \"#utility.yul\":3988:3990   */\n      0x60\n        /* \"#utility.yul\":3976:3985   */\n      dup5\n        /* \"#utility.yul\":3967:3974   */\n      dup7\n        /* \"#utility.yul\":3963:3986   */\n      sub\n        /* \"#utility.yul\":3959:3991   */\n      slt\n        /* \"#utility.yul\":3956:4075   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":3994:4073   */\n      tag_226\n      tag_147\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":3956:4075   */\n    tag_225:\n        /* \"#utility.yul\":4114:4115   */\n      0x00\n        /* \"#utility.yul\":4139:4192   */\n      tag_227\n        /* \"#utility.yul\":4184:4191   */\n      dup7\n        /* \"#utility.yul\":4175:4181   */\n      dup3\n        /* \"#utility.yul\":4164:4173   */\n      dup8\n        /* \"#utility.yul\":4160:4182   */\n      add\n        /* \"#utility.yul\":4139:4192   */\n      tag_152\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4129:4192   */\n      swap4\n      pop\n        /* \"#utility.yul\":4085:4202   */\n      pop\n        /* \"#utility.yul\":4241:4243   */\n      0x20\n        /* \"#utility.yul\":4267:4320   */\n      tag_228\n        /* \"#utility.yul\":4312:4319   */\n      dup7\n        /* \"#utility.yul\":4303:4309   */\n      dup3\n        /* \"#utility.yul\":4292:4301   */\n      dup8\n        /* \"#utility.yul\":4288:4310   */\n      add\n        /* \"#utility.yul\":4267:4320   */\n      tag_152\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4257:4320   */\n      swap3\n      pop\n        /* \"#utility.yul\":4212:4330   */\n      pop\n        /* \"#utility.yul\":4369:4371   */\n      0x40\n        /* \"#utility.yul\":4395:4448   */\n      tag_229\n        /* \"#utility.yul\":4440:4447   */\n      dup7\n        /* \"#utility.yul\":4431:4437   */\n      dup3\n        /* \"#utility.yul\":4420:4429   */\n      dup8\n        /* \"#utility.yul\":4416:4438   */\n      add\n        /* \"#utility.yul\":4395:4448   */\n      tag_155\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4385:4448   */\n      swap2\n      pop\n        /* \"#utility.yul\":4340:4458   */\n      pop\n        /* \"#utility.yul\":3846:4465   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4471:4557   */\n    tag_159:\n        /* \"#utility.yul\":4506:4513   */\n      0x00\n        /* \"#utility.yul\":4546:4550   */\n      0xff\n        /* \"#utility.yul\":4539:4544   */\n      dup3\n        /* \"#utility.yul\":4535:4551   */\n      and\n        /* \"#utility.yul\":4524:4551   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4563:4675   */\n    tag_160:\n        /* \"#utility.yul\":4646:4668   */\n      tag_232\n        /* \"#utility.yul\":4662:4667   */\n      dup2\n        /* \"#utility.yul\":4646:4668   */\n      tag_159\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4641:4644   */\n      dup3\n        /* \"#utility.yul\":4634:4669   */\n      mstore\n        /* \"#utility.yul\":4563:4675   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4681:4895   */\n    tag_37:\n        /* \"#utility.yul\":4770:4774   */\n      0x00\n        /* \"#utility.yul\":4808:4810   */\n      0x20\n        /* \"#utility.yul\":4797:4806   */\n      dup3\n        /* \"#utility.yul\":4793:4811   */\n      add\n        /* \"#utility.yul\":4785:4811   */\n      swap1\n      pop\n        /* \"#utility.yul\":4821:4888   */\n      tag_234\n        /* \"#utility.yul\":4885:4886   */\n      0x00\n        /* \"#utility.yul\":4874:4883   */\n      dup4\n        /* \"#utility.yul\":4870:4887   */\n      add\n        /* \"#utility.yul\":4861:4867   */\n      dup5\n        /* \"#utility.yul\":4821:4888   */\n      tag_160\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4681:4895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4901:5230   */\n    tag_44:\n        /* \"#utility.yul\":4960:4966   */\n      0x00\n        /* \"#utility.yul\":5009:5011   */\n      0x20\n        /* \"#utility.yul\":4997:5006   */\n      dup3\n        /* \"#utility.yul\":4988:4995   */\n      dup5\n        /* \"#utility.yul\":4984:5007   */\n      sub\n        /* \"#utility.yul\":4980:5012   */\n      slt\n        /* \"#utility.yul\":4977:5096   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":5015:5094   */\n      tag_237\n      tag_147\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4977:5096   */\n    tag_236:\n        /* \"#utility.yul\":5135:5136   */\n      0x00\n        /* \"#utility.yul\":5160:5213   */\n      tag_238\n        /* \"#utility.yul\":5205:5212   */\n      dup5\n        /* \"#utility.yul\":5196:5202   */\n      dup3\n        /* \"#utility.yul\":5185:5194   */\n      dup6\n        /* \"#utility.yul\":5181:5203   */\n      add\n        /* \"#utility.yul\":5160:5213   */\n      tag_152\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5150:5213   */\n      swap2\n      pop\n        /* \"#utility.yul\":5106:5223   */\n      pop\n        /* \"#utility.yul\":4901:5230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5236:5710   */\n    tag_60:\n        /* \"#utility.yul\":5304:5310   */\n      0x00\n        /* \"#utility.yul\":5312:5318   */\n      dup1\n        /* \"#utility.yul\":5361:5363   */\n      0x40\n        /* \"#utility.yul\":5349:5358   */\n      dup4\n        /* \"#utility.yul\":5340:5347   */\n      dup6\n        /* \"#utility.yul\":5336:5359   */\n      sub\n        /* \"#utility.yul\":5332:5364   */\n      slt\n        /* \"#utility.yul\":5329:5448   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":5367:5446   */\n      tag_241\n      tag_147\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5329:5448   */\n    tag_240:\n        /* \"#utility.yul\":5487:5488   */\n      0x00\n        /* \"#utility.yul\":5512:5565   */\n      tag_242\n        /* \"#utility.yul\":5557:5564   */\n      dup6\n        /* \"#utility.yul\":5548:5554   */\n      dup3\n        /* \"#utility.yul\":5537:5546   */\n      dup7\n        /* \"#utility.yul\":5533:5555   */\n      add\n        /* \"#utility.yul\":5512:5565   */\n      tag_152\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5502:5565   */\n      swap3\n      pop\n        /* \"#utility.yul\":5458:5575   */\n      pop\n        /* \"#utility.yul\":5614:5616   */\n      0x20\n        /* \"#utility.yul\":5640:5693   */\n      tag_243\n        /* \"#utility.yul\":5685:5692   */\n      dup6\n        /* \"#utility.yul\":5676:5682   */\n      dup3\n        /* \"#utility.yul\":5665:5674   */\n      dup7\n        /* \"#utility.yul\":5661:5683   */\n      add\n        /* \"#utility.yul\":5640:5693   */\n      tag_152\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":5630:5693   */\n      swap2\n      pop\n        /* \"#utility.yul\":5585:5703   */\n      pop\n        /* \"#utility.yul\":5236:5710   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5716:5896   */\n    tag_161:\n        /* \"#utility.yul\":5764:5841   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5761:5762   */\n      0x00\n        /* \"#utility.yul\":5754:5842   */\n      mstore\n        /* \"#utility.yul\":5861:5865   */\n      0x22\n        /* \"#utility.yul\":5858:5859   */\n      0x04\n        /* \"#utility.yul\":5851:5866   */\n      mstore\n        /* \"#utility.yul\":5885:5889   */\n      0x24\n        /* \"#utility.yul\":5882:5883   */\n      0x00\n        /* \"#utility.yul\":5875:5890   */\n      revert\n        /* \"#utility.yul\":5902:6222   */\n    tag_65:\n        /* \"#utility.yul\":5946:5952   */\n      0x00\n        /* \"#utility.yul\":5983:5984   */\n      0x02\n        /* \"#utility.yul\":5977:5981   */\n      dup3\n        /* \"#utility.yul\":5973:5985   */\n      div\n        /* \"#utility.yul\":5963:5985   */\n      swap1\n      pop\n        /* \"#utility.yul\":6030:6031   */\n      0x01\n        /* \"#utility.yul\":6024:6028   */\n      dup3\n        /* \"#utility.yul\":6020:6032   */\n      and\n        /* \"#utility.yul\":6051:6069   */\n      dup1\n        /* \"#utility.yul\":6041:6122   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":6107:6111   */\n      0x7f\n        /* \"#utility.yul\":6099:6105   */\n      dup3\n        /* \"#utility.yul\":6095:6112   */\n      and\n        /* \"#utility.yul\":6085:6112   */\n      swap2\n      pop\n        /* \"#utility.yul\":6041:6122   */\n    tag_246:\n        /* \"#utility.yul\":6169:6171   */\n      0x20\n        /* \"#utility.yul\":6161:6167   */\n      dup3\n        /* \"#utility.yul\":6158:6172   */\n      lt\n        /* \"#utility.yul\":6138:6156   */\n      dup2\n        /* \"#utility.yul\":6135:6173   */\n      sub\n        /* \"#utility.yul\":6132:6216   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":6188:6206   */\n      tag_248\n      tag_161\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6132:6216   */\n    tag_247:\n        /* \"#utility.yul\":5953:6222   */\n      pop\n        /* \"#utility.yul\":5902:6222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6228:6408   */\n    tag_162:\n        /* \"#utility.yul\":6276:6353   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6273:6274   */\n      0x00\n        /* \"#utility.yul\":6266:6354   */\n      mstore\n        /* \"#utility.yul\":6373:6377   */\n      0x11\n        /* \"#utility.yul\":6370:6371   */\n      0x04\n        /* \"#utility.yul\":6363:6378   */\n      mstore\n        /* \"#utility.yul\":6397:6401   */\n      0x24\n        /* \"#utility.yul\":6394:6395   */\n      0x00\n        /* \"#utility.yul\":6387:6402   */\n      revert\n        /* \"#utility.yul\":6414:6719   */\n    tag_88:\n        /* \"#utility.yul\":6454:6457   */\n      0x00\n        /* \"#utility.yul\":6473:6493   */\n      tag_251\n        /* \"#utility.yul\":6491:6492   */\n      dup3\n        /* \"#utility.yul\":6473:6493   */\n      tag_153\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":6468:6493   */\n      swap2\n      pop\n        /* \"#utility.yul\":6507:6527   */\n      tag_252\n        /* \"#utility.yul\":6525:6526   */\n      dup4\n        /* \"#utility.yul\":6507:6527   */\n      tag_153\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":6502:6527   */\n      swap3\n      pop\n        /* \"#utility.yul\":6661:6662   */\n      dup3\n        /* \"#utility.yul\":6593:6659   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6589:6663   */\n      sub\n        /* \"#utility.yul\":6586:6587   */\n      dup3\n        /* \"#utility.yul\":6583:6664   */\n      gt\n        /* \"#utility.yul\":6580:6687   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":6667:6685   */\n      tag_254\n      tag_162\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":6580:6687   */\n    tag_253:\n        /* \"#utility.yul\":6711:6712   */\n      dup3\n        /* \"#utility.yul\":6708:6709   */\n      dup3\n        /* \"#utility.yul\":6704:6713   */\n      add\n        /* \"#utility.yul\":6697:6713   */\n      swap1\n      pop\n        /* \"#utility.yul\":6414:6719   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6725:6949   */\n    tag_163:\n        /* \"#utility.yul\":6865:6899   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6861:6862   */\n      0x00\n        /* \"#utility.yul\":6853:6859   */\n      dup3\n        /* \"#utility.yul\":6849:6863   */\n      add\n        /* \"#utility.yul\":6842:6900   */\n      mstore\n        /* \"#utility.yul\":6934:6941   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6929:6931   */\n      0x20\n        /* \"#utility.yul\":6921:6927   */\n      dup3\n        /* \"#utility.yul\":6917:6932   */\n      add\n        /* \"#utility.yul\":6910:6942   */\n      mstore\n        /* \"#utility.yul\":6725:6949   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6955:7321   */\n    tag_164:\n        /* \"#utility.yul\":7097:7100   */\n      0x00\n        /* \"#utility.yul\":7118:7185   */\n      tag_257\n        /* \"#utility.yul\":7182:7184   */\n      0x25\n        /* \"#utility.yul\":7177:7180   */\n      dup4\n        /* \"#utility.yul\":7118:7185   */\n      tag_142\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":7111:7185   */\n      swap2\n      pop\n        /* \"#utility.yul\":7194:7287   */\n      tag_258\n        /* \"#utility.yul\":7283:7286   */\n      dup3\n        /* \"#utility.yul\":7194:7287   */\n      tag_163\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":7312:7314   */\n      0x40\n        /* \"#utility.yul\":7307:7310   */\n      dup3\n        /* \"#utility.yul\":7303:7315   */\n      add\n        /* \"#utility.yul\":7296:7315   */\n      swap1\n      pop\n        /* \"#utility.yul\":6955:7321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7327:7746   */\n    tag_101:\n        /* \"#utility.yul\":7493:7497   */\n      0x00\n        /* \"#utility.yul\":7531:7533   */\n      0x20\n        /* \"#utility.yul\":7520:7529   */\n      dup3\n        /* \"#utility.yul\":7516:7534   */\n      add\n        /* \"#utility.yul\":7508:7534   */\n      swap1\n      pop\n        /* \"#utility.yul\":7580:7589   */\n      dup2\n        /* \"#utility.yul\":7574:7578   */\n      dup2\n        /* \"#utility.yul\":7570:7590   */\n      sub\n        /* \"#utility.yul\":7566:7567   */\n      0x00\n        /* \"#utility.yul\":7555:7564   */\n      dup4\n        /* \"#utility.yul\":7551:7568   */\n      add\n        /* \"#utility.yul\":7544:7591   */\n      mstore\n        /* \"#utility.yul\":7608:7739   */\n      tag_260\n        /* \"#utility.yul\":7734:7738   */\n      dup2\n        /* \"#utility.yul\":7608:7739   */\n      tag_164\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7600:7739   */\n      swap1\n      pop\n        /* \"#utility.yul\":7327:7746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7752:7975   */\n    tag_165:\n        /* \"#utility.yul\":7892:7926   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":7888:7889   */\n      0x00\n        /* \"#utility.yul\":7880:7886   */\n      dup3\n        /* \"#utility.yul\":7876:7890   */\n      add\n        /* \"#utility.yul\":7869:7927   */\n      mstore\n        /* \"#utility.yul\":7961:7967   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7956:7958   */\n      0x20\n        /* \"#utility.yul\":7948:7954   */\n      dup3\n        /* \"#utility.yul\":7944:7959   */\n      add\n        /* \"#utility.yul\":7937:7968   */\n      mstore\n        /* \"#utility.yul\":7752:7975   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7981:8347   */\n    tag_166:\n        /* \"#utility.yul\":8123:8126   */\n      0x00\n        /* \"#utility.yul\":8144:8211   */\n      tag_263\n        /* \"#utility.yul\":8208:8210   */\n      0x24\n        /* \"#utility.yul\":8203:8206   */\n      dup4\n        /* \"#utility.yul\":8144:8211   */\n      tag_142\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8137:8211   */\n      swap2\n      pop\n        /* \"#utility.yul\":8220:8313   */\n      tag_264\n        /* \"#utility.yul\":8309:8312   */\n      dup3\n        /* \"#utility.yul\":8220:8313   */\n      tag_165\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":8338:8340   */\n      0x40\n        /* \"#utility.yul\":8333:8336   */\n      dup3\n        /* \"#utility.yul\":8329:8341   */\n      add\n        /* \"#utility.yul\":8322:8341   */\n      swap1\n      pop\n        /* \"#utility.yul\":7981:8347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8353:8772   */\n    tag_111:\n        /* \"#utility.yul\":8519:8523   */\n      0x00\n        /* \"#utility.yul\":8557:8559   */\n      0x20\n        /* \"#utility.yul\":8546:8555   */\n      dup3\n        /* \"#utility.yul\":8542:8560   */\n      add\n        /* \"#utility.yul\":8534:8560   */\n      swap1\n      pop\n        /* \"#utility.yul\":8606:8615   */\n      dup2\n        /* \"#utility.yul\":8600:8604   */\n      dup2\n        /* \"#utility.yul\":8596:8616   */\n      sub\n        /* \"#utility.yul\":8592:8593   */\n      0x00\n        /* \"#utility.yul\":8581:8590   */\n      dup4\n        /* \"#utility.yul\":8577:8594   */\n      add\n        /* \"#utility.yul\":8570:8617   */\n      mstore\n        /* \"#utility.yul\":8634:8765   */\n      tag_266\n        /* \"#utility.yul\":8760:8764   */\n      dup2\n        /* \"#utility.yul\":8634:8765   */\n      tag_166\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":8626:8765   */\n      swap1\n      pop\n        /* \"#utility.yul\":8353:8772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8778:8999   */\n    tag_167:\n        /* \"#utility.yul\":8918:8952   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":8914:8915   */\n      0x00\n        /* \"#utility.yul\":8906:8912   */\n      dup3\n        /* \"#utility.yul\":8902:8916   */\n      add\n        /* \"#utility.yul\":8895:8953   */\n      mstore\n        /* \"#utility.yul\":8987:8991   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8982:8984   */\n      0x20\n        /* \"#utility.yul\":8974:8980   */\n      dup3\n        /* \"#utility.yul\":8970:8985   */\n      add\n        /* \"#utility.yul\":8963:8992   */\n      mstore\n        /* \"#utility.yul\":8778:8999   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9005:9371   */\n    tag_168:\n        /* \"#utility.yul\":9147:9150   */\n      0x00\n        /* \"#utility.yul\":9168:9235   */\n      tag_269\n        /* \"#utility.yul\":9232:9234   */\n      0x22\n        /* \"#utility.yul\":9227:9230   */\n      dup4\n        /* \"#utility.yul\":9168:9235   */\n      tag_142\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9161:9235   */\n      swap2\n      pop\n        /* \"#utility.yul\":9244:9337   */\n      tag_270\n        /* \"#utility.yul\":9333:9336   */\n      dup3\n        /* \"#utility.yul\":9244:9337   */\n      tag_167\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":9362:9364   */\n      0x40\n        /* \"#utility.yul\":9357:9360   */\n      dup3\n        /* \"#utility.yul\":9353:9365   */\n      add\n        /* \"#utility.yul\":9346:9365   */\n      swap1\n      pop\n        /* \"#utility.yul\":9005:9371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9377:9796   */\n    tag_114:\n        /* \"#utility.yul\":9543:9547   */\n      0x00\n        /* \"#utility.yul\":9581:9583   */\n      0x20\n        /* \"#utility.yul\":9570:9579   */\n      dup3\n        /* \"#utility.yul\":9566:9584   */\n      add\n        /* \"#utility.yul\":9558:9584   */\n      swap1\n      pop\n        /* \"#utility.yul\":9630:9639   */\n      dup2\n        /* \"#utility.yul\":9624:9628   */\n      dup2\n        /* \"#utility.yul\":9620:9640   */\n      sub\n        /* \"#utility.yul\":9616:9617   */\n      0x00\n        /* \"#utility.yul\":9605:9614   */\n      dup4\n        /* \"#utility.yul\":9601:9618   */\n      add\n        /* \"#utility.yul\":9594:9641   */\n      mstore\n        /* \"#utility.yul\":9658:9789   */\n      tag_272\n        /* \"#utility.yul\":9784:9788   */\n      dup2\n        /* \"#utility.yul\":9658:9789   */\n      tag_168\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":9650:9789   */\n      swap1\n      pop\n        /* \"#utility.yul\":9377:9796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9802:9981   */\n    tag_169:\n        /* \"#utility.yul\":9942:9973   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":9938:9939   */\n      0x00\n        /* \"#utility.yul\":9930:9936   */\n      dup3\n        /* \"#utility.yul\":9926:9940   */\n      add\n        /* \"#utility.yul\":9919:9974   */\n      mstore\n        /* \"#utility.yul\":9802:9981   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9987:10353   */\n    tag_170:\n        /* \"#utility.yul\":10129:10132   */\n      0x00\n        /* \"#utility.yul\":10150:10217   */\n      tag_275\n        /* \"#utility.yul\":10214:10216   */\n      0x1d\n        /* \"#utility.yul\":10209:10212   */\n      dup4\n        /* \"#utility.yul\":10150:10217   */\n      tag_142\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10143:10217   */\n      swap2\n      pop\n        /* \"#utility.yul\":10226:10319   */\n      tag_276\n        /* \"#utility.yul\":10315:10318   */\n      dup3\n        /* \"#utility.yul\":10226:10319   */\n      tag_169\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":10344:10346   */\n      0x20\n        /* \"#utility.yul\":10339:10342   */\n      dup3\n        /* \"#utility.yul\":10335:10347   */\n      add\n        /* \"#utility.yul\":10328:10347   */\n      swap1\n      pop\n        /* \"#utility.yul\":9987:10353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10359:10778   */\n    tag_121:\n        /* \"#utility.yul\":10525:10529   */\n      0x00\n        /* \"#utility.yul\":10563:10565   */\n      0x20\n        /* \"#utility.yul\":10552:10561   */\n      dup3\n        /* \"#utility.yul\":10548:10566   */\n      add\n        /* \"#utility.yul\":10540:10566   */\n      swap1\n      pop\n        /* \"#utility.yul\":10612:10621   */\n      dup2\n        /* \"#utility.yul\":10606:10610   */\n      dup2\n        /* \"#utility.yul\":10602:10622   */\n      sub\n        /* \"#utility.yul\":10598:10599   */\n      0x00\n        /* \"#utility.yul\":10587:10596   */\n      dup4\n        /* \"#utility.yul\":10583:10600   */\n      add\n        /* \"#utility.yul\":10576:10623   */\n      mstore\n        /* \"#utility.yul\":10640:10771   */\n      tag_278\n        /* \"#utility.yul\":10766:10770   */\n      dup2\n        /* \"#utility.yul\":10640:10771   */\n      tag_170\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":10632:10771   */\n      swap1\n      pop\n        /* \"#utility.yul\":10359:10778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10784:11008   */\n    tag_171:\n        /* \"#utility.yul\":10924:10958   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":10920:10921   */\n      0x00\n        /* \"#utility.yul\":10912:10918   */\n      dup3\n        /* \"#utility.yul\":10908:10922   */\n      add\n        /* \"#utility.yul\":10901:10959   */\n      mstore\n        /* \"#utility.yul\":10993:11000   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10988:10990   */\n      0x20\n        /* \"#utility.yul\":10980:10986   */\n      dup3\n        /* \"#utility.yul\":10976:10991   */\n      add\n        /* \"#utility.yul\":10969:11001   */\n      mstore\n        /* \"#utility.yul\":10784:11008   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11014:11380   */\n    tag_172:\n        /* \"#utility.yul\":11156:11159   */\n      0x00\n        /* \"#utility.yul\":11177:11244   */\n      tag_281\n        /* \"#utility.yul\":11241:11243   */\n      0x25\n        /* \"#utility.yul\":11236:11239   */\n      dup4\n        /* \"#utility.yul\":11177:11244   */\n      tag_142\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":11170:11244   */\n      swap2\n      pop\n        /* \"#utility.yul\":11253:11346   */\n      tag_282\n        /* \"#utility.yul\":11342:11345   */\n      dup3\n        /* \"#utility.yul\":11253:11346   */\n      tag_171\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":11371:11373   */\n      0x40\n        /* \"#utility.yul\":11366:11369   */\n      dup3\n        /* \"#utility.yul\":11362:11374   */\n      add\n        /* \"#utility.yul\":11355:11374   */\n      swap1\n      pop\n        /* \"#utility.yul\":11014:11380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11386:11805   */\n    tag_126:\n        /* \"#utility.yul\":11552:11556   */\n      0x00\n        /* \"#utility.yul\":11590:11592   */\n      0x20\n        /* \"#utility.yul\":11579:11588   */\n      dup3\n        /* \"#utility.yul\":11575:11593   */\n      add\n        /* \"#utility.yul\":11567:11593   */\n      swap1\n      pop\n        /* \"#utility.yul\":11639:11648   */\n      dup2\n        /* \"#utility.yul\":11633:11637   */\n      dup2\n        /* \"#utility.yul\":11629:11649   */\n      sub\n        /* \"#utility.yul\":11625:11626   */\n      0x00\n        /* \"#utility.yul\":11614:11623   */\n      dup4\n        /* \"#utility.yul\":11610:11627   */\n      add\n        /* \"#utility.yul\":11603:11650   */\n      mstore\n        /* \"#utility.yul\":11667:11798   */\n      tag_284\n        /* \"#utility.yul\":11793:11797   */\n      dup2\n        /* \"#utility.yul\":11667:11798   */\n      tag_172\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":11659:11798   */\n      swap1\n      pop\n        /* \"#utility.yul\":11386:11805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11811:12033   */\n    tag_173:\n        /* \"#utility.yul\":11951:11985   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":11947:11948   */\n      0x00\n        /* \"#utility.yul\":11939:11945   */\n      dup3\n        /* \"#utility.yul\":11935:11949   */\n      add\n        /* \"#utility.yul\":11928:11986   */\n      mstore\n        /* \"#utility.yul\":12020:12025   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12015:12017   */\n      0x20\n        /* \"#utility.yul\":12007:12013   */\n      dup3\n        /* \"#utility.yul\":12003:12018   */\n      add\n        /* \"#utility.yul\":11996:12026   */\n      mstore\n        /* \"#utility.yul\":11811:12033   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12039:12405   */\n    tag_174:\n        /* \"#utility.yul\":12181:12184   */\n      0x00\n        /* \"#utility.yul\":12202:12269   */\n      tag_287\n        /* \"#utility.yul\":12266:12268   */\n      0x23\n        /* \"#utility.yul\":12261:12264   */\n      dup4\n        /* \"#utility.yul\":12202:12269   */\n      tag_142\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":12195:12269   */\n      swap2\n      pop\n        /* \"#utility.yul\":12278:12371   */\n      tag_288\n        /* \"#utility.yul\":12367:12370   */\n      dup3\n        /* \"#utility.yul\":12278:12371   */\n      tag_173\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":12396:12398   */\n      0x40\n        /* \"#utility.yul\":12391:12394   */\n      dup3\n        /* \"#utility.yul\":12387:12399   */\n      add\n        /* \"#utility.yul\":12380:12399   */\n      swap1\n      pop\n        /* \"#utility.yul\":12039:12405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12411:12830   */\n    tag_129:\n        /* \"#utility.yul\":12577:12581   */\n      0x00\n        /* \"#utility.yul\":12615:12617   */\n      0x20\n        /* \"#utility.yul\":12604:12613   */\n      dup3\n        /* \"#utility.yul\":12600:12618   */\n      add\n        /* \"#utility.yul\":12592:12618   */\n      swap1\n      pop\n        /* \"#utility.yul\":12664:12673   */\n      dup2\n        /* \"#utility.yul\":12658:12662   */\n      dup2\n        /* \"#utility.yul\":12654:12674   */\n      sub\n        /* \"#utility.yul\":12650:12651   */\n      0x00\n        /* \"#utility.yul\":12639:12648   */\n      dup4\n        /* \"#utility.yul\":12635:12652   */\n      add\n        /* \"#utility.yul\":12628:12675   */\n      mstore\n        /* \"#utility.yul\":12692:12823   */\n      tag_290\n        /* \"#utility.yul\":12818:12822   */\n      dup2\n        /* \"#utility.yul\":12692:12823   */\n      tag_174\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":12684:12823   */\n      swap1\n      pop\n        /* \"#utility.yul\":12411:12830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12836:13061   */\n    tag_175:\n        /* \"#utility.yul\":12976:13010   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":12972:12973   */\n      0x00\n        /* \"#utility.yul\":12964:12970   */\n      dup3\n        /* \"#utility.yul\":12960:12974   */\n      add\n        /* \"#utility.yul\":12953:13011   */\n      mstore\n        /* \"#utility.yul\":13045:13053   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13040:13042   */\n      0x20\n        /* \"#utility.yul\":13032:13038   */\n      dup3\n        /* \"#utility.yul\":13028:13043   */\n      add\n        /* \"#utility.yul\":13021:13054   */\n      mstore\n        /* \"#utility.yul\":12836:13061   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13067:13433   */\n    tag_176:\n        /* \"#utility.yul\":13209:13212   */\n      0x00\n        /* \"#utility.yul\":13230:13297   */\n      tag_293\n        /* \"#utility.yul\":13294:13296   */\n      0x26\n        /* \"#utility.yul\":13289:13292   */\n      dup4\n        /* \"#utility.yul\":13230:13297   */\n      tag_142\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":13223:13297   */\n      swap2\n      pop\n        /* \"#utility.yul\":13306:13399   */\n      tag_294\n        /* \"#utility.yul\":13395:13398   */\n      dup3\n        /* \"#utility.yul\":13306:13399   */\n      tag_175\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":13424:13426   */\n      0x40\n        /* \"#utility.yul\":13419:13422   */\n      dup3\n        /* \"#utility.yul\":13415:13427   */\n      add\n        /* \"#utility.yul\":13408:13427   */\n      swap1\n      pop\n        /* \"#utility.yul\":13067:13433   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13439:13858   */\n    tag_134:\n        /* \"#utility.yul\":13605:13609   */\n      0x00\n        /* \"#utility.yul\":13643:13645   */\n      0x20\n        /* \"#utility.yul\":13632:13641   */\n      dup3\n        /* \"#utility.yul\":13628:13646   */\n      add\n        /* \"#utility.yul\":13620:13646   */\n      swap1\n      pop\n        /* \"#utility.yul\":13692:13701   */\n      dup2\n        /* \"#utility.yul\":13686:13690   */\n      dup2\n        /* \"#utility.yul\":13682:13702   */\n      sub\n        /* \"#utility.yul\":13678:13679   */\n      0x00\n        /* \"#utility.yul\":13667:13676   */\n      dup4\n        /* \"#utility.yul\":13663:13680   */\n      add\n        /* \"#utility.yul\":13656:13703   */\n      mstore\n        /* \"#utility.yul\":13720:13851   */\n      tag_296\n        /* \"#utility.yul\":13846:13850   */\n      dup2\n        /* \"#utility.yul\":13720:13851   */\n      tag_176\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":13712:13851   */\n      swap1\n      pop\n        /* \"#utility.yul\":13439:13858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206bdedde49eb6b8a0bb19a52ffb440691c18de81ba5a307507eb3e4eafa5c839364736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_473": {
									"entryPoint": null,
									"id": 473,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 576,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 835,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 336,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 309,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 314,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 304,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:1",
														"type": ""
													}
												],
												"src": "580:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:1"
															},
															"nodeType": "YulIf",
															"src": "1030:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:1",
														"type": ""
													}
												],
												"src": "874:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:1",
														"type": ""
													}
												],
												"src": "1161:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:1"
															},
															"nodeType": "YulIf",
															"src": "1434:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:1",
														"type": ""
													}
												],
												"src": "1296:308:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1659:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1669:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1678:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1673:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1738:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1763:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1768:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1759:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1759:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1782:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1787:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1778:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1778:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1772:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1752:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1752:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1752:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1699:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1702:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1710:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1712:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1721:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1724:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1717:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1717:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1712:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1692:3:1",
																"statements": []
															},
															"src": "1688:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1835:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1885:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1890:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1881:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1881:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1816:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1819:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1813:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:13:1"
															},
															"nodeType": "YulIf",
															"src": "1810:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1641:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1646:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1651:6:1",
														"type": ""
													}
												],
												"src": "1610:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2018:326:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2028:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2095:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2053:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:49:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2037:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:66:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2028:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2119:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2142:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2157:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2146:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2207:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2209:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2209:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2188:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2193:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2202:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2181:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:25:1"
															},
															"nodeType": "YulIf",
															"src": "2178:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2321:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2326:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2331:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2299:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2299:39:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1991:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1996:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2004:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2012:5:1",
														"type": ""
													}
												],
												"src": "1923:421:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:282:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2486:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2488:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2488:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2488:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2465:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2473:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2461:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2461:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:35:1"
															},
															"nodeType": "YulIf",
															"src": "2447:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2578:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2598:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2592:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2582:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2614:99:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2709:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2623:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:90:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2614:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2415:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2423:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2431:5:1",
														"type": ""
													}
												],
												"src": "2364:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2839:739:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2885:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2887:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2869:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2856:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2852:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:32:1"
															},
															"nodeType": "YulIf",
															"src": "2849:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2978:291:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2993:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3017:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3028:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3013:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3013:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3007:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3007:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2997:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3078:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3080:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3080:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3080:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3058:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3047:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "3044:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3175:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3231:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3242:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3227:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3227:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3251:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3185:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3175:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3279:292:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3294:39:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3318:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3329:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3314:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3314:18:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3308:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3308:25:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3298:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3380:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3382:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3382:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3382:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3352:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3360:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3349:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3349:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "3346:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3477:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3533:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3544:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3529:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3529:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3553:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3487:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3487:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3477:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2801:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2812:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2824:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2832:6:1",
														"type": ""
													}
												],
												"src": "2725:853:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3612:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3629:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3632:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3622:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3726:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3729:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3719:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3750:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3753:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3743:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3743:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3743:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3584:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3821:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3831:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3845:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3841:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3831:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3862:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3892:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3888:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3888:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3866:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3939:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3953:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3967:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3975:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3963:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3963:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3953:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3919:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3912:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:26:1"
															},
															"nodeType": "YulIf",
															"src": "3909:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4042:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4056:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4056:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4056:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4006:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4029:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4037:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4026:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4026:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4003:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:38:1"
															},
															"nodeType": "YulIf",
															"src": "4000:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3805:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3814:6:1",
														"type": ""
													}
												],
												"src": "3770:320:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200161a3803806200161a8339818101604052810190620000379190620002be565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b505050620003a7565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b602082108103620003a157620003a062000343565b5b50919050565b61126380620003b76000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b1e565b60405180910390f35b6100e660048036038101906100e19190610bd9565b610308565b6040516100f39190610c34565b60405180910390f35b61010461032b565b6040516101119190610c5e565b60405180910390f35b610134600480360381019061012f9190610c79565b610335565b6040516101419190610c34565b60405180910390f35b610152610364565b60405161015f9190610ce8565b60405180910390f35b610182600480360381019061017d9190610bd9565b61036d565b60405161018f9190610c34565b60405180910390f35b6101b260048036038101906101ad9190610d03565b6103a4565b6040516101bf9190610c5e565b60405180910390f35b6101d06103ec565b6040516101dd9190610b1e565b60405180910390f35b61020060048036038101906101fb9190610bd9565b61047e565b60405161020d9190610c34565b60405180910390f35b610230600480360381019061022b9190610bd9565b6104f5565b60405161023d9190610c34565b60405180910390f35b610260600480360381019061025b9190610d30565b610518565b60405161026d9190610c5e565b60405180910390f35b60606003805461028590610d9f565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d9f565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610dff565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d9f565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d9f565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610ec7565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f59565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610feb565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c5e565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611057565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110e9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d19061117b565b60405180910390fd5b6108e5838383610a7b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109629061120d565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109fe9190610dff565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a629190610c5e565b60405180910390a3610a75848484610a80565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610abf578082015181840152602081019050610aa4565b83811115610ace576000848401525b50505050565b6000601f19601f8301169050919050565b6000610af082610a85565b610afa8185610a90565b9350610b0a818560208601610aa1565b610b1381610ad4565b840191505092915050565b60006020820190508181036000830152610b388184610ae5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7082610b45565b9050919050565b610b8081610b65565b8114610b8b57600080fd5b50565b600081359050610b9d81610b77565b92915050565b6000819050919050565b610bb681610ba3565b8114610bc157600080fd5b50565b600081359050610bd381610bad565b92915050565b60008060408385031215610bf057610bef610b40565b5b6000610bfe85828601610b8e565b9250506020610c0f85828601610bc4565b9150509250929050565b60008115159050919050565b610c2e81610c19565b82525050565b6000602082019050610c496000830184610c25565b92915050565b610c5881610ba3565b82525050565b6000602082019050610c736000830184610c4f565b92915050565b600080600060608486031215610c9257610c91610b40565b5b6000610ca086828701610b8e565b9350506020610cb186828701610b8e565b9250506040610cc286828701610bc4565b9150509250925092565b600060ff82169050919050565b610ce281610ccc565b82525050565b6000602082019050610cfd6000830184610cd9565b92915050565b600060208284031215610d1957610d18610b40565b5b6000610d2784828501610b8e565b91505092915050565b60008060408385031215610d4757610d46610b40565b5b6000610d5585828601610b8e565b9250506020610d6685828601610b8e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610db757607f821691505b602082108103610dca57610dc9610d70565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0a82610ba3565b9150610e1583610ba3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4a57610e49610dd0565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610eb1602583610a90565b9150610ebc82610e55565b604082019050919050565b60006020820190508181036000830152610ee081610ea4565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f43602483610a90565b9150610f4e82610ee7565b604082019050919050565b60006020820190508181036000830152610f7281610f36565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fd5602283610a90565b9150610fe082610f79565b604082019050919050565b6000602082019050818103600083015261100481610fc8565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611041601d83610a90565b915061104c8261100b565b602082019050919050565b6000602082019050818103600083015261107081611034565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110d3602583610a90565b91506110de82611077565b604082019050919050565b60006020820190508181036000830152611102816110c6565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611165602383610a90565b915061117082611109565b604082019050919050565b6000602082019050818103600083015261119481611158565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111f7602683610a90565b91506112028261119b565b604082019050919050565b60006020820190508181036000830152611226816111ea565b905091905056fea26469706673582212206bdedde49eb6b8a0bb19a52ffb440691c18de81ba5a307507eb3e4eafa5c839364736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x161A CODESIZE SUB DUP1 PUSH3 0x161A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BE JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A7 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x18A DUP3 PUSH3 0x13F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AB PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C1 PUSH3 0x121 JUMP JUMPDEST SWAP1 POP PUSH3 0x1CF DUP3 DUP3 PUSH3 0x17F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F1 PUSH3 0x150 JUMP JUMPDEST JUMPDEST PUSH3 0x1FD DUP3 PUSH3 0x13F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x22A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x257 PUSH3 0x251 DUP5 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x1B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x276 JUMPI PUSH3 0x275 PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x283 DUP5 DUP3 DUP6 PUSH3 0x20A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A3 JUMPI PUSH3 0x2A2 PUSH3 0x135 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x12B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x307 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x32B JUMPI PUSH3 0x32A PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x339 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x38B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3A1 JUMPI PUSH3 0x3A0 PUSH3 0x343 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1263 DUP1 PUSH3 0x3B7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD30 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9FE SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA62 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA75 DUP5 DUP5 DUP5 PUSH2 0xA80 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAA4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xACE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF0 DUP3 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0xAFA DUP2 DUP6 PUSH2 0xA90 JUMP JUMPDEST SWAP4 POP PUSH2 0xB0A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0xB13 DUP2 PUSH2 0xAD4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB38 DUP2 DUP5 PUSH2 0xAE5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB70 DUP3 PUSH2 0xB45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB80 DUP2 PUSH2 0xB65 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB9D DUP2 PUSH2 0xB77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB6 DUP2 PUSH2 0xBA3 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD3 DUP2 PUSH2 0xBAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF0 JUMPI PUSH2 0xBEF PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBFE DUP6 DUP3 DUP7 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC0F DUP6 DUP3 DUP7 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2E DUP2 PUSH2 0xC19 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC58 DUP2 PUSH2 0xBA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC73 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC92 JUMPI PUSH2 0xC91 PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA0 DUP7 DUP3 DUP8 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB1 DUP7 DUP3 DUP8 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC2 DUP7 DUP3 DUP8 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE2 DUP2 PUSH2 0xCCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCFD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD19 JUMPI PUSH2 0xD18 PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD27 DUP5 DUP3 DUP6 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD46 PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD55 DUP6 DUP3 DUP7 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD66 DUP6 DUP3 DUP7 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDCA JUMPI PUSH2 0xDC9 PUSH2 0xD70 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE0A DUP3 PUSH2 0xBA3 JUMP JUMPDEST SWAP2 POP PUSH2 0xE15 DUP4 PUSH2 0xBA3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE4A JUMPI PUSH2 0xE49 PUSH2 0xDD0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB1 PUSH1 0x25 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xEBC DUP3 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEE0 DUP2 PUSH2 0xEA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF43 PUSH1 0x24 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xF4E DUP3 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF72 DUP2 PUSH2 0xF36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD5 PUSH1 0x22 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE0 DUP3 PUSH2 0xF79 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1004 DUP2 PUSH2 0xFC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1041 PUSH1 0x1D DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x104C DUP3 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1070 DUP2 PUSH2 0x1034 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D3 PUSH1 0x25 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x10DE DUP3 PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1102 DUP2 PUSH2 0x10C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1165 PUSH1 0x23 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1170 DUP3 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1194 DUP2 PUSH2 0x1158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F7 PUSH1 0x26 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1202 DUP3 PUSH2 0x119B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1226 DUP2 PUSH2 0x11EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xDEDDE49EB6B8A0BB19A52FFB DIFFICULTY MOD SWAP2 0xC1 DUP14 0xE8 SHL 0xA5 LOG3 SMOD POP PUSH31 0xB3E4EAFA5C839364736F6C634300080E003300000000000000000000000000 ",
							"sourceMap": "12508:11223:0:-:0;;;13083:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13157:5;13149;:13;;;;;;;;;;;;:::i;:::-;;13182:7;13172;:17;;;;;;;;;;;;:::i;:::-;;13083:113;;12508:11223;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;12508:11223:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1013": {
									"entryPoint": 2688,
									"id": 1013,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_948": {
									"entryPoint": 1447,
									"id": 948,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1002": {
									"entryPoint": 2683,
									"id": 1002,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 1439,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_991": {
									"entryPoint": 1904,
									"id": 991,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_775": {
									"entryPoint": 2044,
									"id": 775,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_570": {
									"entryPoint": 1304,
									"id": 570,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_595": {
									"entryPoint": 776,
									"id": 595,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_527": {
									"entryPoint": 932,
									"id": 527,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_503": {
									"entryPoint": 868,
									"id": 503,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_698": {
									"entryPoint": 1150,
									"id": 698,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_657": {
									"entryPoint": 877,
									"id": 657,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_483": {
									"entryPoint": 630,
									"id": 483,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_493": {
									"entryPoint": 1004,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_513": {
									"entryPoint": 811,
									"id": 513,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_628": {
									"entryPoint": 821,
									"id": 628,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_552": {
									"entryPoint": 1269,
									"id": 552,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 2721,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3536,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3440,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2880,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 4361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 3961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 4107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 4507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 4215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 3815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 3669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13861:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "336:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "346:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "355:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "350:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "415:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "440:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "445:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "436:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "436:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "464:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "455:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "455:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "449:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "429:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "429:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "429:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "376:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "373:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "387:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "389:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "398:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "401:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "394:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "394:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "389:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "369:3:1",
																"statements": []
															},
															"src": "365:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "512:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "562:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "567:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "558:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "558:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "576:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "551:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "551:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "551:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "493:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "496:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "490:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:13:1"
															},
															"nodeType": "YulIf",
															"src": "487:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "318:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "323:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "328:6:1",
														"type": ""
													}
												],
												"src": "287:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "658:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "676:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "683:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "692:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "688:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "688:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "658:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "631:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "641:6:1",
														"type": ""
													}
												],
												"src": "600:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "800:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "810:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "857:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "824:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "814:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "872:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "938:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "943:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "879:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "879:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "985:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "992:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "999:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1004:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "959:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "959:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1020:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1031:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1058:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1036:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1027:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1027:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1020:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "781:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "788:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "796:3:1",
														"type": ""
													}
												],
												"src": "708:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1206:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1218:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1229:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1214:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1206:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1253:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1264:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1249:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1249:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1272:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1278:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1268:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1242:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1298:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1370:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1379:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1306:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1298:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1168:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1180:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1191:4:1",
														"type": ""
													}
												],
												"src": "1078:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1437:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1447:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1463:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1457:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1430:6:1",
														"type": ""
													}
												],
												"src": "1397:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1567:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1584:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1587:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1577:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1577:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1478:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1690:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1710:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1700:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1700:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1601:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1769:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1779:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1794:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1801:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1790:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1779:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1751:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1761:7:1",
														"type": ""
													}
												],
												"src": "1724:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1901:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1911:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1940:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1922:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1922:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1911:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1883:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1893:7:1",
														"type": ""
													}
												],
												"src": "1856:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2058:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2067:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2070:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2060:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2060:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2060:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2024:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2049:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2031:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2031:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2021:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2021:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2014:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:43:1"
															},
															"nodeType": "YulIf",
															"src": "2011:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1994:5:1",
														"type": ""
													}
												],
												"src": "1958:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2138:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2148:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2170:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2157:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2157:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2148:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2213:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2186:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2186:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2116:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2124:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2132:5:1",
														"type": ""
													}
												],
												"src": "2086:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2286:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2297:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2286:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2258:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2268:7:1",
														"type": ""
													}
												],
												"src": "2231:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2357:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2414:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2423:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2426:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2416:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2416:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2416:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2405:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2387:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2387:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2377:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2377:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2370:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:43:1"
															},
															"nodeType": "YulIf",
															"src": "2367:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2350:5:1",
														"type": ""
													}
												],
												"src": "2314:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2494:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2504:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2526:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2513:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2504:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2569:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2542:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2542:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2542:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2472:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2480:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2488:5:1",
														"type": ""
													}
												],
												"src": "2442:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2670:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2716:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2718:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2718:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2718:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2691:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2700:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2687:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2712:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2683:32:1"
															},
															"nodeType": "YulIf",
															"src": "2680:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2809:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2824:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2838:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2828:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2853:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2888:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2899:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2884:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2884:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2908:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2863:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2853:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2936:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2951:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2965:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2955:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2981:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3016:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3027:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3012:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3012:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3036:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2991:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2991:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2981:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2632:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2643:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2655:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2663:6:1",
														"type": ""
													}
												],
												"src": "2587:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3109:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3119:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3144:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3137:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3130:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3119:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3091:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3101:7:1",
														"type": ""
													}
												],
												"src": "3067:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3222:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3239:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3259:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3244:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3244:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3232:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3210:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3217:3:1",
														"type": ""
													}
												],
												"src": "3163:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3370:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3380:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3392:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3403:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3388:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3388:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3380:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3454:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3467:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3478:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3463:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3416:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3416:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3416:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3342:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3354:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3365:4:1",
														"type": ""
													}
												],
												"src": "3278:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3559:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3576:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3599:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3581:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3581:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3569:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3547:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3554:3:1",
														"type": ""
													}
												],
												"src": "3494:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3716:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3726:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3738:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3734:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3734:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3726:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3806:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3819:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3830:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3815:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3762:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3762:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3762:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3688:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3700:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3711:4:1",
														"type": ""
													}
												],
												"src": "3618:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3946:519:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3992:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3994:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3994:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3994:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3967:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3963:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3963:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3988:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3959:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3959:32:1"
															},
															"nodeType": "YulIf",
															"src": "3956:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4085:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4100:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4114:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4104:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4129:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4164:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4175:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4160:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4160:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4184:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4139:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4139:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4129:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4212:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4227:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4241:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4231:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4257:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4292:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4303:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4288:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4288:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4312:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4267:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4267:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4257:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4340:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4355:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4369:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4359:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4385:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4420:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4431:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4416:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4416:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4440:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4395:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4395:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4385:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3900:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3911:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3923:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3931:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3939:6:1",
														"type": ""
													}
												],
												"src": "3846:619:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4514:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4524:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4539:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4546:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4535:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4535:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4524:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4496:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4506:7:1",
														"type": ""
													}
												],
												"src": "4471:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4624:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4641:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4662:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4646:15:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4646:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4634:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4634:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4612:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4619:3:1",
														"type": ""
													}
												],
												"src": "4563:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4775:120:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4785:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4808:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4861:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4874:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4885:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4870:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4870:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4821:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4821:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4821:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4747:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4759:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4770:4:1",
														"type": ""
													}
												],
												"src": "4681:214:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4967:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5013:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5015:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5015:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5015:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4988:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4997:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4984:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4984:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5009:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4980:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:32:1"
															},
															"nodeType": "YulIf",
															"src": "4977:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5106:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5121:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5135:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5125:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5150:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5185:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5196:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5181:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5181:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5205:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5160:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5160:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5150:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4937:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4948:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4960:6:1",
														"type": ""
													}
												],
												"src": "4901:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5319:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5365:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5367:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5367:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5367:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5340:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5349:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5336:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5336:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5361:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5332:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5332:32:1"
															},
															"nodeType": "YulIf",
															"src": "5329:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5458:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5473:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5487:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5477:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5502:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5537:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5548:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5533:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5533:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5557:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5512:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5512:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5502:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5585:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5600:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5614:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5604:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5630:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5665:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5676:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5661:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5661:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5685:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5640:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5640:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5630:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5281:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5292:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5304:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5312:6:1",
														"type": ""
													}
												],
												"src": "5236:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5744:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5761:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5764:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5754:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5754:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5754:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5858:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5861:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5851:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5851:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5851:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5882:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5885:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5875:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5875:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5875:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "5716:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5953:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5963:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5977:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5983:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5973:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5973:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5963:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5994:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6024:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6030:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6020:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6020:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5998:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6071:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6085:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6099:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6107:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6095:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6095:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6085:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6051:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6044:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6044:26:1"
															},
															"nodeType": "YulIf",
															"src": "6041:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6174:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6188:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6188:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6188:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6138:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6161:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6169:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6158:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6158:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6135:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6135:38:1"
															},
															"nodeType": "YulIf",
															"src": "6132:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5937:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5946:6:1",
														"type": ""
													}
												],
												"src": "5902:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6256:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6273:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6276:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6266:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6266:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6266:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6370:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6373:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6363:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6363:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6363:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6394:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6397:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6387:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6387:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6387:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6228:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6458:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6468:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6491:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6473:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6473:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6468:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6502:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6525:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6507:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6507:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6502:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6665:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6667:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6667:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6667:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6586:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6593:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6661:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6589:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6589:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6583:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6583:81:1"
															},
															"nodeType": "YulIf",
															"src": "6580:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6697:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6708:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6711:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6704:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6704:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6697:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6445:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6448:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6454:3:1",
														"type": ""
													}
												],
												"src": "6414:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6831:118:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6853:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6861:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6849:14:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6865:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6842:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6842:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6842:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6921:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6929:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6917:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6917:15:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6934:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6910:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6910:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6910:32:1"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6823:6:1",
														"type": ""
													}
												],
												"src": "6725:224:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7101:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7111:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7177:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7182:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7118:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7118:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7111:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7283:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "7194:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7194:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7194:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7296:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7307:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7312:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7303:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7303:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7296:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7089:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7097:3:1",
														"type": ""
													}
												],
												"src": "6955:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7498:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7508:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7520:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7531:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7516:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7516:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7508:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7555:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7566:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7551:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7551:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7574:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7580:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7570:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7570:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7544:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7544:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7544:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7600:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7734:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7608:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7608:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7600:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7478:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7493:4:1",
														"type": ""
													}
												],
												"src": "7327:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7858:117:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7880:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7888:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7876:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7876:14:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7892:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7869:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7869:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7869:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7948:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7956:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7944:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7944:15:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7961:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7937:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7937:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7937:31:1"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7850:6:1",
														"type": ""
													}
												],
												"src": "7752:223:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8127:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8137:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8203:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8208:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8144:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8144:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8137:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8309:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "8220:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8220:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8220:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8322:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8333:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8338:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8329:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8329:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8322:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8115:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8123:3:1",
														"type": ""
													}
												],
												"src": "7981:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8524:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8534:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8546:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8557:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8542:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8542:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8534:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8581:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8592:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8577:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8577:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8600:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8606:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8596:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8596:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8570:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8570:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8570:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8626:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8760:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8634:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8634:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8626:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8504:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8519:4:1",
														"type": ""
													}
												],
												"src": "8353:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8884:115:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8906:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8914:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8902:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8902:14:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8918:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8895:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8895:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8895:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8974:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8982:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8970:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8970:15:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8987:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8963:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8963:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8963:29:1"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8876:6:1",
														"type": ""
													}
												],
												"src": "8778:221:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9151:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9161:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9227:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9232:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9168:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9168:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9161:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9333:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "9244:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9244:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9244:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9346:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9357:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9362:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9353:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9346:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9139:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9147:3:1",
														"type": ""
													}
												],
												"src": "9005:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9548:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9558:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9570:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9581:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9566:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9566:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9558:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9605:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9616:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9601:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9601:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9624:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9630:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9620:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9620:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9594:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9594:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9594:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9650:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9784:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9658:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9658:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9650:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9528:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9543:4:1",
														"type": ""
													}
												],
												"src": "9377:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9908:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9930:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9938:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9926:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9926:14:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9942:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9919:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9919:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9919:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9900:6:1",
														"type": ""
													}
												],
												"src": "9802:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10133:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10143:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10209:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10214:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10150:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10150:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10143:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10315:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "10226:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10226:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10226:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10328:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10339:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10344:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10335:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10335:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10328:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10121:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10129:3:1",
														"type": ""
													}
												],
												"src": "9987:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10530:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10540:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10552:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10563:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10548:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10548:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10540:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10587:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10598:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10583:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10583:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10606:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10612:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10602:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10602:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10576:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10576:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10576:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10632:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10766:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10640:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10640:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10632:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10510:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10525:4:1",
														"type": ""
													}
												],
												"src": "10359:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10890:118:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10912:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10920:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10908:14:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10924:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10901:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10901:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10901:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10980:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10988:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10976:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10976:15:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10993:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10969:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10969:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10969:32:1"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10882:6:1",
														"type": ""
													}
												],
												"src": "10784:224:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11160:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11170:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11236:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11241:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11177:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11177:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11170:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11342:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "11253:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11253:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11253:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11355:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11366:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11371:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11362:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11362:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11355:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11148:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11156:3:1",
														"type": ""
													}
												],
												"src": "11014:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11557:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11567:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11579:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11590:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11575:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11575:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11567:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11614:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11625:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11610:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11610:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11633:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11639:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11629:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11629:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11603:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11603:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11603:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11659:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11793:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11667:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11667:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11659:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11537:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11552:4:1",
														"type": ""
													}
												],
												"src": "11386:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11917:116:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11939:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11947:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11935:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11935:14:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11951:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11928:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11928:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11928:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12007:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12015:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12003:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12003:15:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12020:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11996:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11996:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11996:30:1"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11909:6:1",
														"type": ""
													}
												],
												"src": "11811:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12185:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12195:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12261:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12266:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12202:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12202:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12195:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12367:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "12278:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12278:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12278:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12380:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12391:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12396:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12387:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12387:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12380:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12173:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12181:3:1",
														"type": ""
													}
												],
												"src": "12039:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12582:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12592:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12604:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12615:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12600:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12600:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12592:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12639:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12650:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12635:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12635:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12658:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12664:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12654:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12654:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12628:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12628:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12628:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12684:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12818:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12692:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12692:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12684:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12562:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12577:4:1",
														"type": ""
													}
												],
												"src": "12411:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12942:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12964:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12972:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12960:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12960:14:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12976:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12953:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12953:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12953:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13032:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13040:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13028:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13028:15:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13045:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13021:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13021:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13021:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12934:6:1",
														"type": ""
													}
												],
												"src": "12836:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13213:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13223:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13289:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13294:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13230:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13230:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13223:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13395:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "13306:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13306:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13306:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13408:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13419:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13424:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13415:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13415:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13408:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13201:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13209:3:1",
														"type": ""
													}
												],
												"src": "13067:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13610:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13620:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13632:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13643:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13628:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13628:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13620:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13667:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13678:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13663:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13663:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13686:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13692:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13682:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13682:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13656:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13656:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13656:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13712:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13846:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13720:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13720:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13712:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13590:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13605:4:1",
														"type": ""
													}
												],
												"src": "13439:419:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b1e565b60405180910390f35b6100e660048036038101906100e19190610bd9565b610308565b6040516100f39190610c34565b60405180910390f35b61010461032b565b6040516101119190610c5e565b60405180910390f35b610134600480360381019061012f9190610c79565b610335565b6040516101419190610c34565b60405180910390f35b610152610364565b60405161015f9190610ce8565b60405180910390f35b610182600480360381019061017d9190610bd9565b61036d565b60405161018f9190610c34565b60405180910390f35b6101b260048036038101906101ad9190610d03565b6103a4565b6040516101bf9190610c5e565b60405180910390f35b6101d06103ec565b6040516101dd9190610b1e565b60405180910390f35b61020060048036038101906101fb9190610bd9565b61047e565b60405161020d9190610c34565b60405180910390f35b610230600480360381019061022b9190610bd9565b6104f5565b60405161023d9190610c34565b60405180910390f35b610260600480360381019061025b9190610d30565b610518565b60405161026d9190610c5e565b60405180910390f35b60606003805461028590610d9f565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d9f565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610dff565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d9f565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d9f565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610ec7565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f59565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610feb565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c5e565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611057565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110e9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d19061117b565b60405180910390fd5b6108e5838383610a7b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109629061120d565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109fe9190610dff565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a629190610c5e565b60405180910390a3610a75848484610a80565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610abf578082015181840152602081019050610aa4565b83811115610ace576000848401525b50505050565b6000601f19601f8301169050919050565b6000610af082610a85565b610afa8185610a90565b9350610b0a818560208601610aa1565b610b1381610ad4565b840191505092915050565b60006020820190508181036000830152610b388184610ae5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7082610b45565b9050919050565b610b8081610b65565b8114610b8b57600080fd5b50565b600081359050610b9d81610b77565b92915050565b6000819050919050565b610bb681610ba3565b8114610bc157600080fd5b50565b600081359050610bd381610bad565b92915050565b60008060408385031215610bf057610bef610b40565b5b6000610bfe85828601610b8e565b9250506020610c0f85828601610bc4565b9150509250929050565b60008115159050919050565b610c2e81610c19565b82525050565b6000602082019050610c496000830184610c25565b92915050565b610c5881610ba3565b82525050565b6000602082019050610c736000830184610c4f565b92915050565b600080600060608486031215610c9257610c91610b40565b5b6000610ca086828701610b8e565b9350506020610cb186828701610b8e565b9250506040610cc286828701610bc4565b9150509250925092565b600060ff82169050919050565b610ce281610ccc565b82525050565b6000602082019050610cfd6000830184610cd9565b92915050565b600060208284031215610d1957610d18610b40565b5b6000610d2784828501610b8e565b91505092915050565b60008060408385031215610d4757610d46610b40565b5b6000610d5585828601610b8e565b9250506020610d6685828601610b8e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610db757607f821691505b602082108103610dca57610dc9610d70565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0a82610ba3565b9150610e1583610ba3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4a57610e49610dd0565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610eb1602583610a90565b9150610ebc82610e55565b604082019050919050565b60006020820190508181036000830152610ee081610ea4565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f43602483610a90565b9150610f4e82610ee7565b604082019050919050565b60006020820190508181036000830152610f7281610f36565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fd5602283610a90565b9150610fe082610f79565b604082019050919050565b6000602082019050818103600083015261100481610fc8565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611041601d83610a90565b915061104c8261100b565b602082019050919050565b6000602082019050818103600083015261107081611034565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110d3602583610a90565b91506110de82611077565b604082019050919050565b60006020820190508181036000830152611102816110c6565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611165602383610a90565b915061117082611109565b604082019050919050565b6000602082019050818103600083015261119481611158565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111f7602683610a90565b91506112028261119b565b604082019050919050565b60006020820190508181036000830152611226816111ea565b905091905056fea26469706673582212206bdedde49eb6b8a0bb19a52ffb440691c18de81ba5a307507eb3e4eafa5c839364736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD30 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9FE SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA62 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA75 DUP5 DUP5 DUP5 PUSH2 0xA80 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAA4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xACE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF0 DUP3 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0xAFA DUP2 DUP6 PUSH2 0xA90 JUMP JUMPDEST SWAP4 POP PUSH2 0xB0A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0xB13 DUP2 PUSH2 0xAD4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB38 DUP2 DUP5 PUSH2 0xAE5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB70 DUP3 PUSH2 0xB45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB80 DUP2 PUSH2 0xB65 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB9D DUP2 PUSH2 0xB77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB6 DUP2 PUSH2 0xBA3 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD3 DUP2 PUSH2 0xBAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF0 JUMPI PUSH2 0xBEF PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBFE DUP6 DUP3 DUP7 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC0F DUP6 DUP3 DUP7 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2E DUP2 PUSH2 0xC19 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC58 DUP2 PUSH2 0xBA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC73 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC92 JUMPI PUSH2 0xC91 PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA0 DUP7 DUP3 DUP8 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB1 DUP7 DUP3 DUP8 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC2 DUP7 DUP3 DUP8 ADD PUSH2 0xBC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE2 DUP2 PUSH2 0xCCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCFD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD19 JUMPI PUSH2 0xD18 PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD27 DUP5 DUP3 DUP6 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD46 PUSH2 0xB40 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD55 DUP6 DUP3 DUP7 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD66 DUP6 DUP3 DUP7 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDCA JUMPI PUSH2 0xDC9 PUSH2 0xD70 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE0A DUP3 PUSH2 0xBA3 JUMP JUMPDEST SWAP2 POP PUSH2 0xE15 DUP4 PUSH2 0xBA3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE4A JUMPI PUSH2 0xE49 PUSH2 0xDD0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB1 PUSH1 0x25 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xEBC DUP3 PUSH2 0xE55 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEE0 DUP2 PUSH2 0xEA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF43 PUSH1 0x24 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xF4E DUP3 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF72 DUP2 PUSH2 0xF36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD5 PUSH1 0x22 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE0 DUP3 PUSH2 0xF79 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1004 DUP2 PUSH2 0xFC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1041 PUSH1 0x1D DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x104C DUP3 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1070 DUP2 PUSH2 0x1034 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D3 PUSH1 0x25 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x10DE DUP3 PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1102 DUP2 PUSH2 0x10C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1165 PUSH1 0x23 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1170 DUP3 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1194 DUP2 PUSH2 0x1158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F7 PUSH1 0x26 DUP4 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1202 DUP3 PUSH2 0x119B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1226 DUP2 PUSH2 0x11EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xDEDDE49EB6B8A0BB19A52FFB DIFFICULTY MOD SWAP2 0xC1 DUP14 0xE8 SHL 0xA5 LOG3 SMOD POP PUSH31 0xB3E4EAFA5C839364736F6C634300080E003300000000000000000000000000 ",
							"sourceMap": "12508:11223:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13261:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15538:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14349:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16297:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14198:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16978:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14513:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13472:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17699:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14834:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15081:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13261:98;13315:13;13347:5;13340:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13261:98;:::o;15538:197::-;15621:4;15637:13;15653:12;:10;:12::i;:::-;15637:28;;15675:32;15684:5;15691:7;15700:6;15675:8;:32::i;:::-;15724:4;15717:11;;;15538:197;;;;:::o;14349:106::-;14410:7;14436:12;;14429:19;;14349:106;:::o;16297:286::-;16424:4;16440:15;16458:12;:10;:12::i;:::-;16440:30;;16480:38;16496:4;16502:7;16511:6;16480:15;:38::i;:::-;16528:27;16538:4;16544:2;16548:6;16528:9;:27::i;:::-;16572:4;16565:11;;;16297:286;;;;;:::o;14198:91::-;14256:5;14280:2;14273:9;;14198:91;:::o;16978:234::-;17066:4;17082:13;17098:12;:10;:12::i;:::-;17082:28;;17120:64;17129:5;17136:7;17173:10;17145:25;17155:5;17162:7;17145:9;:25::i;:::-;:38;;;;:::i;:::-;17120:8;:64::i;:::-;17201:4;17194:11;;;16978:234;;;;:::o;14513:125::-;14587:7;14613:9;:18;14623:7;14613:18;;;;;;;;;;;;;;;;14606:25;;14513:125;;;:::o;13472:102::-;13528:13;13560:7;13553:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13472:102;:::o;17699:427::-;17792:4;17808:13;17824:12;:10;:12::i;:::-;17808:28;;17846:24;17873:25;17883:5;17890:7;17873:9;:25::i;:::-;17846:52;;17936:15;17916:16;:35;;17908:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;18027:60;18036:5;18043:7;18071:15;18052:16;:34;18027:8;:60::i;:::-;18115:4;18108:11;;;;17699:427;;;;:::o;14834:189::-;14913:4;14929:13;14945:12;:10;:12::i;:::-;14929:28;;14967;14977:5;14984:2;14988:6;14967:9;:28::i;:::-;15012:4;15005:11;;;14834:189;;;;:::o;15081:149::-;15170:7;15196:11;:18;15208:5;15196:18;;;;;;;;;;;;;;;:27;15215:7;15196:27;;;;;;;;;;;;;;;;15189:34;;15081:149;;;;:::o;662:96::-;715:7;741:10;734:17;;662:96;:::o;21224:370::-;21372:1;21355:19;;:5;:19;;;21347:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;21452:1;21433:21;;:7;:21;;;21425:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;21534:6;21504:11;:18;21516:5;21504:18;;;;;;;;;;;;;;;:27;21523:7;21504:27;;;;;;;;;;;;;;;:36;;;;21571:7;21555:32;;21564:5;21555:32;;;21580:6;21555:32;;;;;;:::i;:::-;;;;;;;;21224:370;;;:::o;21875:441::-;22005:24;22032:25;22042:5;22049:7;22032:9;:25::i;:::-;22005:52;;22091:17;22071:16;:37;22067:243;;22152:6;22132:16;:26;;22124:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;22234:51;22243:5;22250:7;22278:6;22259:16;:25;22234:8;:51::i;:::-;22067:243;21995:321;21875:441;;;:::o;18589:651::-;18731:1;18715:18;;:4;:18;;;18707:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;18807:1;18793:16;;:2;:16;;;18785:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;18860:38;18881:4;18887:2;18891:6;18860:20;:38::i;:::-;18909:19;18931:9;:15;18941:4;18931:15;;;;;;;;;;;;;;;;18909:37;;18979:6;18964:11;:21;;18956:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;19094:6;19080:11;:20;19062:9;:15;19072:4;19062:15;;;;;;;;;;;;;;;:38;;;;19137:6;19120:9;:13;19130:2;19120:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;19174:2;19159:26;;19168:4;19159:26;;;19178:6;19159:26;;;;;;:::i;:::-;;;;;;;;19196:37;19216:4;19222:2;19226:6;19196:19;:37::i;:::-;18697:543;18589:651;;;:::o;22900:121::-;;;;:::o;23609:120::-;;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:329::-;4960:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:119;;;5015:79;;:::i;:::-;4977:119;5135:1;5160:53;5205:7;5196:6;5185:9;5181:22;5160:53;:::i;:::-;5150:63;;5106:117;4901:329;;;;:::o;5236:474::-;5304:6;5312;5361:2;5349:9;5340:7;5336:23;5332:32;5329:119;;;5367:79;;:::i;:::-;5329:119;5487:1;5512:53;5557:7;5548:6;5537:9;5533:22;5512:53;:::i;:::-;5502:63;;5458:117;5614:2;5640:53;5685:7;5676:6;5665:9;5661:22;5640:53;:::i;:::-;5630:63;;5585:118;5236:474;;;;;:::o;5716:180::-;5764:77;5761:1;5754:88;5861:4;5858:1;5851:15;5885:4;5882:1;5875:15;5902:320;5946:6;5983:1;5977:4;5973:12;5963:22;;6030:1;6024:4;6020:12;6051:18;6041:81;;6107:4;6099:6;6095:17;6085:27;;6041:81;6169:2;6161:6;6158:14;6138:18;6135:38;6132:84;;6188:18;;:::i;:::-;6132:84;5953:269;5902:320;;;:::o;6228:180::-;6276:77;6273:1;6266:88;6373:4;6370:1;6363:15;6397:4;6394:1;6387:15;6414:305;6454:3;6473:20;6491:1;6473:20;:::i;:::-;6468:25;;6507:20;6525:1;6507:20;:::i;:::-;6502:25;;6661:1;6593:66;6589:74;6586:1;6583:81;6580:107;;;6667:18;;:::i;:::-;6580:107;6711:1;6708;6704:9;6697:16;;6414:305;;;;:::o;6725:224::-;6865:34;6861:1;6853:6;6849:14;6842:58;6934:7;6929:2;6921:6;6917:15;6910:32;6725:224;:::o;6955:366::-;7097:3;7118:67;7182:2;7177:3;7118:67;:::i;:::-;7111:74;;7194:93;7283:3;7194:93;:::i;:::-;7312:2;7307:3;7303:12;7296:19;;6955:366;;;:::o;7327:419::-;7493:4;7531:2;7520:9;7516:18;7508:26;;7580:9;7574:4;7570:20;7566:1;7555:9;7551:17;7544:47;7608:131;7734:4;7608:131;:::i;:::-;7600:139;;7327:419;;;:::o;7752:223::-;7892:34;7888:1;7880:6;7876:14;7869:58;7961:6;7956:2;7948:6;7944:15;7937:31;7752:223;:::o;7981:366::-;8123:3;8144:67;8208:2;8203:3;8144:67;:::i;:::-;8137:74;;8220:93;8309:3;8220:93;:::i;:::-;8338:2;8333:3;8329:12;8322:19;;7981:366;;;:::o;8353:419::-;8519:4;8557:2;8546:9;8542:18;8534:26;;8606:9;8600:4;8596:20;8592:1;8581:9;8577:17;8570:47;8634:131;8760:4;8634:131;:::i;:::-;8626:139;;8353:419;;;:::o;8778:221::-;8918:34;8914:1;8906:6;8902:14;8895:58;8987:4;8982:2;8974:6;8970:15;8963:29;8778:221;:::o;9005:366::-;9147:3;9168:67;9232:2;9227:3;9168:67;:::i;:::-;9161:74;;9244:93;9333:3;9244:93;:::i;:::-;9362:2;9357:3;9353:12;9346:19;;9005:366;;;:::o;9377:419::-;9543:4;9581:2;9570:9;9566:18;9558:26;;9630:9;9624:4;9620:20;9616:1;9605:9;9601:17;9594:47;9658:131;9784:4;9658:131;:::i;:::-;9650:139;;9377:419;;;:::o;9802:179::-;9942:31;9938:1;9930:6;9926:14;9919:55;9802:179;:::o;9987:366::-;10129:3;10150:67;10214:2;10209:3;10150:67;:::i;:::-;10143:74;;10226:93;10315:3;10226:93;:::i;:::-;10344:2;10339:3;10335:12;10328:19;;9987:366;;;:::o;10359:419::-;10525:4;10563:2;10552:9;10548:18;10540:26;;10612:9;10606:4;10602:20;10598:1;10587:9;10583:17;10576:47;10640:131;10766:4;10640:131;:::i;:::-;10632:139;;10359:419;;;:::o;10784:224::-;10924:34;10920:1;10912:6;10908:14;10901:58;10993:7;10988:2;10980:6;10976:15;10969:32;10784:224;:::o;11014:366::-;11156:3;11177:67;11241:2;11236:3;11177:67;:::i;:::-;11170:74;;11253:93;11342:3;11253:93;:::i;:::-;11371:2;11366:3;11362:12;11355:19;;11014:366;;;:::o;11386:419::-;11552:4;11590:2;11579:9;11575:18;11567:26;;11639:9;11633:4;11629:20;11625:1;11614:9;11610:17;11603:47;11667:131;11793:4;11667:131;:::i;:::-;11659:139;;11386:419;;;:::o;11811:222::-;11951:34;11947:1;11939:6;11935:14;11928:58;12020:5;12015:2;12007:6;12003:15;11996:30;11811:222;:::o;12039:366::-;12181:3;12202:67;12266:2;12261:3;12202:67;:::i;:::-;12195:74;;12278:93;12367:3;12278:93;:::i;:::-;12396:2;12391:3;12387:12;12380:19;;12039:366;;;:::o;12411:419::-;12577:4;12615:2;12604:9;12600:18;12592:26;;12664:9;12658:4;12654:20;12650:1;12639:9;12635:17;12628:47;12692:131;12818:4;12692:131;:::i;:::-;12684:139;;12411:419;;;:::o;12836:225::-;12976:34;12972:1;12964:6;12960:14;12953:58;13045:8;13040:2;13032:6;13028:15;13021:33;12836:225;:::o;13067:366::-;13209:3;13230:67;13294:2;13289:3;13230:67;:::i;:::-;13223:74;;13306:93;13395:3;13306:93;:::i;:::-;13424:2;13419:3;13415:12;13408:19;;13067:366;;;:::o;13439:419::-;13605:4;13643:2;13632:9;13628:18;13620:26;;13692:9;13686:4;13682:20;13678:1;13667:9;13663:17;13656:47;13720:131;13846:4;13720:131;:::i;:::-;13712:139;;13439:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "941400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2863",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 13083,
									"end": 13196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13157,
									"end": 13162,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13149,
									"end": 13154,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 13149,
									"end": 13162,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13149,
									"end": 13162,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13149,
									"end": 13162,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13149,
									"end": 13162,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13149,
									"end": 13162,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13149,
									"end": 13162,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13149,
									"end": 13162,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13149,
									"end": 13162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 13149,
									"end": 13162,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 13149,
									"end": 13162,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13149,
									"end": 13162,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13149,
									"end": 13162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 13149,
									"end": 13162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13149,
									"end": 13162,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 13149,
									"end": 13162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13149,
									"end": 13162,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13182,
									"end": 13189,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13172,
									"end": 13179,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 13172,
									"end": 13189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13172,
									"end": 13189,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13172,
									"end": 13189,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13172,
									"end": 13189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13172,
									"end": 13189,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13172,
									"end": 13189,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13172,
									"end": 13189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13172,
									"end": 13189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 13172,
									"end": 13189,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 13172,
									"end": 13189,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13172,
									"end": 13189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13172,
									"end": 13189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 13172,
									"end": 13189,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13172,
									"end": 13189,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 13172,
									"end": 13189,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13172,
									"end": 13189,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13083,
									"end": 13196,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12508,
									"end": 23731,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 12508,
									"end": 23731,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1679,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1699,
									"end": 1700,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1709,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1788,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1782,
									"end": 1785,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1778,
									"end": 1789,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1772,
									"end": 1790,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1768,
									"end": 1769,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1763,
									"end": 1766,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1759,
									"end": 1770,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1752,
									"end": 1791,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1724,
									"end": 1726,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1722,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1727,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1819,
									"end": 1825,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1816,
									"end": 1817,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1813,
									"end": 1826,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1899,
									"end": 1900,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1885,
									"end": 1888,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1881,
									"end": 1897,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1874,
									"end": 1901,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1659,
									"end": 1917,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2095,
									"end": 2101,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 2053,
									"end": 2102,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 2037,
									"end": 2103,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2126,
									"end": 2132,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2119,
									"end": 2124,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2133,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2168,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2162,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2202,
									"end": 2205,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2199,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2188,
									"end": 2191,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2181,
									"end": 2206,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2209,
									"end": 2288,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2331,
									"end": 2337,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2329,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2321,
									"end": 2324,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 2299,
									"end": 2338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2018,
									"end": 2344,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1923,
									"end": 2344,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2465,
									"end": 2471,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2457,
									"end": 2484,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2488,
									"end": 2567,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2598,
									"end": 2604,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2709,
									"end": 2712,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2701,
									"end": 2707,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2694,
									"end": 2698,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2686,
									"end": 2692,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2682,
									"end": 2699,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2623,
									"end": 2713,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2437,
									"end": 2719,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2719,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2824,
									"end": 2830,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2832,
									"end": 2838,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2881,
									"end": 2883,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2869,
									"end": 2878,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2860,
									"end": 2867,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2856,
									"end": 2879,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2852,
									"end": 2884,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2887,
									"end": 2966,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3028,
									"end": 3029,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3017,
									"end": 3026,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3007,
									"end": 3031,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3058,
									"end": 3076,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3047,
									"end": 3077,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 3080,
									"end": 3159,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 3251,
									"end": 3258,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3242,
									"end": 3248,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3231,
									"end": 3240,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3227,
									"end": 3249,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 3185,
									"end": 3259,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2978,
									"end": 3269,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3329,
									"end": 3331,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3318,
									"end": 3327,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3314,
									"end": 3332,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3308,
									"end": 3333,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3360,
									"end": 3378,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3352,
									"end": 3358,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3349,
									"end": 3379,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 3382,
									"end": 3461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 3553,
									"end": 3560,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3544,
									"end": 3550,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3542,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3529,
									"end": 3551,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 3487,
									"end": 3561,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3279,
									"end": 3571,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 3578,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3632,
									"end": 3709,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3629,
									"end": 3630,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3710,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3729,
									"end": 3733,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 3726,
									"end": 3727,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3719,
									"end": 3734,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3753,
									"end": 3757,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3750,
									"end": 3751,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3743,
									"end": 3758,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3814,
									"end": 3820,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3845,
									"end": 3849,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3898,
									"end": 3899,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3892,
									"end": 3896,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3888,
									"end": 3900,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3919,
									"end": 3937,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3975,
									"end": 3979,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 3967,
									"end": 3973,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3963,
									"end": 3980,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4037,
									"end": 4039,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4026,
									"end": 4040,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4003,
									"end": 4041,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 4056,
									"end": 4074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 4090,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3770,
									"end": 4090,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12508,
									"end": 23731,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206bdedde49eb6b8a0bb19a52ffb440691c18de81ba5a307507eb3e4eafa5c839364736f6c634300080e0033",
									".code": [
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12508,
											"end": 23731,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13261,
											"end": 13359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13261,
											"end": 13359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 15538,
											"end": 15735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15538,
											"end": 15735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15538,
											"end": 15735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14349,
											"end": 14455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14349,
											"end": 14455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16297,
											"end": 16583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16297,
											"end": 16583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16297,
											"end": 16583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14198,
											"end": 14289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14198,
											"end": 14289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 16978,
											"end": 17212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16978,
											"end": 17212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16978,
											"end": 17212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14513,
											"end": 14638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14513,
											"end": 14638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14513,
											"end": 14638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 13472,
											"end": 13574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13472,
											"end": 13574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 17699,
											"end": 18126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 17699,
											"end": 18126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17699,
											"end": 18126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14834,
											"end": 15023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14834,
											"end": 15023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14834,
											"end": 15023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15081,
											"end": 15230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15081,
											"end": 15230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15081,
											"end": 15230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13315,
											"end": 13328,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13347,
											"end": 13352,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13340,
											"end": 13352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13340,
											"end": 13352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13261,
											"end": 13359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15621,
											"end": 15625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15637,
											"end": 15650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15653,
											"end": 15665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 15653,
											"end": 15663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 15653,
											"end": 15665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15653,
											"end": 15665,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 15653,
											"end": 15665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15637,
											"end": 15665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15637,
											"end": 15665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15675,
											"end": 15707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 15684,
											"end": 15689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15691,
											"end": 15698,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15700,
											"end": 15706,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15675,
											"end": 15683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 15675,
											"end": 15707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15675,
											"end": 15707,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 15675,
											"end": 15707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15724,
											"end": 15728,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15717,
											"end": 15728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15717,
											"end": 15728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15717,
											"end": 15728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15538,
											"end": 15735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14410,
											"end": 14417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14436,
											"end": 14448,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14436,
											"end": 14448,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14349,
											"end": 14455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16424,
											"end": 16428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16440,
											"end": 16455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16458,
											"end": 16470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 16458,
											"end": 16468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 16458,
											"end": 16470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16458,
											"end": 16470,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 16458,
											"end": 16470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16440,
											"end": 16470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16440,
											"end": 16470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16480,
											"end": 16518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 16496,
											"end": 16500,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16502,
											"end": 16509,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16517,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16480,
											"end": 16495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 16480,
											"end": 16518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16480,
											"end": 16518,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 16480,
											"end": 16518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16528,
											"end": 16555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16538,
											"end": 16542,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16544,
											"end": 16546,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16554,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16528,
											"end": 16537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 16528,
											"end": 16555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16528,
											"end": 16555,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16528,
											"end": 16555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16572,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16565,
											"end": 16576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16565,
											"end": 16576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16565,
											"end": 16576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16297,
											"end": 16583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14256,
											"end": 14261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14280,
											"end": 14282,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 14273,
											"end": 14282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14273,
											"end": 14282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17066,
											"end": 17070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17082,
											"end": 17095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17098,
											"end": 17110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 17098,
											"end": 17108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 17098,
											"end": 17110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17098,
											"end": 17110,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 17098,
											"end": 17110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17082,
											"end": 17110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17082,
											"end": 17110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17120,
											"end": 17184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 17129,
											"end": 17134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17136,
											"end": 17143,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17173,
											"end": 17183,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17145,
											"end": 17170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17155,
											"end": 17160,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17162,
											"end": 17169,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 17145,
											"end": 17154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 17145,
											"end": 17170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17145,
											"end": 17170,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17145,
											"end": 17170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17145,
											"end": 17183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17145,
											"end": 17183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17145,
											"end": 17183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17145,
											"end": 17183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17145,
											"end": 17183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17145,
											"end": 17183,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17145,
											"end": 17183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17120,
											"end": 17128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 17120,
											"end": 17184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17120,
											"end": 17184,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 17120,
											"end": 17184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17201,
											"end": 17205,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17194,
											"end": 17205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17194,
											"end": 17205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16978,
											"end": 17212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14587,
											"end": 14594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14613,
											"end": 14622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14613,
											"end": 14631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14623,
											"end": 14630,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14613,
											"end": 14631,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14613,
											"end": 14631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14613,
											"end": 14631,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14613,
											"end": 14631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14613,
											"end": 14631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14613,
											"end": 14631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14613,
											"end": 14631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14613,
											"end": 14631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14613,
											"end": 14631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14613,
											"end": 14631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14613,
											"end": 14631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14613,
											"end": 14631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14613,
											"end": 14631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14613,
											"end": 14631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14613,
											"end": 14631,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14613,
											"end": 14631,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14606,
											"end": 14631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14606,
											"end": 14631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14513,
											"end": 14638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13528,
											"end": 13541,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13560,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13553,
											"end": 13567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13553,
											"end": 13567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17792,
											"end": 17796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17808,
											"end": 17821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17824,
											"end": 17836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 17824,
											"end": 17834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 17824,
											"end": 17836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17824,
											"end": 17836,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 17824,
											"end": 17836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17808,
											"end": 17836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17808,
											"end": 17836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17846,
											"end": 17870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 17883,
											"end": 17888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17890,
											"end": 17897,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17873,
											"end": 17882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 17873,
											"end": 17898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17846,
											"end": 17898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17846,
											"end": 17898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17936,
											"end": 17951,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17916,
											"end": 17932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17916,
											"end": 17951,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17916,
											"end": 17951,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 17908,
											"end": 17993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 17908,
											"end": 17993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18027,
											"end": 18087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 18036,
											"end": 18041,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18043,
											"end": 18050,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18071,
											"end": 18086,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18052,
											"end": 18068,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18052,
											"end": 18086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18027,
											"end": 18035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 18027,
											"end": 18087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18027,
											"end": 18087,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 18027,
											"end": 18087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18115,
											"end": 18119,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18108,
											"end": 18119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17699,
											"end": 18126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14913,
											"end": 14917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14929,
											"end": 14942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14945,
											"end": 14957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14945,
											"end": 14955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 14945,
											"end": 14957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14945,
											"end": 14957,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14945,
											"end": 14957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14977,
											"end": 14982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14984,
											"end": 14986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14988,
											"end": 14994,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14967,
											"end": 14995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14995,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14967,
											"end": 14995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15012,
											"end": 15016,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15005,
											"end": 15016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15005,
											"end": 15016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15005,
											"end": 15016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 15023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15170,
											"end": 15177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15196,
											"end": 15207,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15208,
											"end": 15213,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15196,
											"end": 15214,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15215,
											"end": 15222,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15196,
											"end": 15223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15196,
											"end": 15223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15196,
											"end": 15223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15196,
											"end": 15223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15196,
											"end": 15223,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15196,
											"end": 15223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15189,
											"end": 15223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15189,
											"end": 15223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15081,
											"end": 15230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 662,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 662,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 715,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 734,
											"end": 751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 734,
											"end": 751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 662,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 662,
											"end": 758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21594,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 21224,
											"end": 21594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21372,
											"end": 21373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21355,
											"end": 21374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21355,
											"end": 21374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21355,
											"end": 21360,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21355,
											"end": 21374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21355,
											"end": 21374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21355,
											"end": 21374,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 21347,
											"end": 21415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 21347,
											"end": 21415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21452,
											"end": 21453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21433,
											"end": 21454,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21433,
											"end": 21454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21433,
											"end": 21440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21433,
											"end": 21454,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21433,
											"end": 21454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21433,
											"end": 21454,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 21425,
											"end": 21493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 21425,
											"end": 21493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21534,
											"end": 21540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21515,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21504,
											"end": 21522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21516,
											"end": 21521,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21522,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21504,
											"end": 21522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21522,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21504,
											"end": 21522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21504,
											"end": 21522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21504,
											"end": 21522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21504,
											"end": 21522,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21523,
											"end": 21530,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21504,
											"end": 21531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21504,
											"end": 21531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21504,
											"end": 21531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21504,
											"end": 21531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21504,
											"end": 21531,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21540,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21571,
											"end": 21578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21564,
											"end": 21569,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21580,
											"end": 21586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 21555,
											"end": 21587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21587,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21875,
											"end": 22316,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 21875,
											"end": 22316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22005,
											"end": 22029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22032,
											"end": 22057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 22042,
											"end": 22047,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22049,
											"end": 22056,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22032,
											"end": 22041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 22032,
											"end": 22057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22032,
											"end": 22057,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 22032,
											"end": 22057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22005,
											"end": 22057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22005,
											"end": 22057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22091,
											"end": 22108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22071,
											"end": 22087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22071,
											"end": 22108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 22067,
											"end": 22310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22152,
											"end": 22158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22132,
											"end": 22148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22132,
											"end": 22158,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22132,
											"end": 22158,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 22124,
											"end": 22192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 22124,
											"end": 22192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 22243,
											"end": 22248,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22250,
											"end": 22257,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22284,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22275,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22284,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 22234,
											"end": 22285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22234,
											"end": 22285,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 22234,
											"end": 22285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22067,
											"end": 22310,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 22067,
											"end": 22310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21995,
											"end": 22316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21875,
											"end": 22316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21875,
											"end": 22316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21875,
											"end": 22316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21875,
											"end": 22316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18589,
											"end": 19240,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 18589,
											"end": 19240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18731,
											"end": 18732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18715,
											"end": 18733,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18715,
											"end": 18733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18715,
											"end": 18719,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18715,
											"end": 18733,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18715,
											"end": 18733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18715,
											"end": 18733,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 18707,
											"end": 18775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 18707,
											"end": 18775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18807,
											"end": 18808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18793,
											"end": 18809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18793,
											"end": 18809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18793,
											"end": 18795,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18793,
											"end": 18809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18793,
											"end": 18809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18793,
											"end": 18809,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 18785,
											"end": 18849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 18785,
											"end": 18849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18860,
											"end": 18898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 18881,
											"end": 18885,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18887,
											"end": 18889,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18860,
											"end": 18880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 18860,
											"end": 18898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18860,
											"end": 18898,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 18860,
											"end": 18898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18909,
											"end": 18928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18931,
											"end": 18940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18931,
											"end": 18946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18941,
											"end": 18945,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18931,
											"end": 18946,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18931,
											"end": 18946,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18931,
											"end": 18946,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18931,
											"end": 18946,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18931,
											"end": 18946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18931,
											"end": 18946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18931,
											"end": 18946,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18931,
											"end": 18946,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18931,
											"end": 18946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18931,
											"end": 18946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18931,
											"end": 18946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18931,
											"end": 18946,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18931,
											"end": 18946,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18931,
											"end": 18946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18931,
											"end": 18946,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18931,
											"end": 18946,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18909,
											"end": 18946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18909,
											"end": 18946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18979,
											"end": 18985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18985,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18964,
											"end": 18985,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 18956,
											"end": 19028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 18956,
											"end": 19028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19094,
											"end": 19100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19080,
											"end": 19091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19080,
											"end": 19100,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19062,
											"end": 19071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19062,
											"end": 19077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19076,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19062,
											"end": 19077,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19062,
											"end": 19077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19062,
											"end": 19077,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19062,
											"end": 19077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19062,
											"end": 19077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19062,
											"end": 19077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19062,
											"end": 19077,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19062,
											"end": 19077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19062,
											"end": 19077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19062,
											"end": 19077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19062,
											"end": 19077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19062,
											"end": 19077,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19062,
											"end": 19077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19062,
											"end": 19077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19062,
											"end": 19077,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19062,
											"end": 19100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19062,
											"end": 19100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19062,
											"end": 19100,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19062,
											"end": 19100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19120,
											"end": 19133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19130,
											"end": 19132,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19120,
											"end": 19133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19120,
											"end": 19133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19120,
											"end": 19133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19120,
											"end": 19133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19120,
											"end": 19133,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19120,
											"end": 19143,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19143,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19143,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 19120,
											"end": 19143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 19120,
											"end": 19143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19143,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 19120,
											"end": 19143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19143,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19143,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19120,
											"end": 19143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19174,
											"end": 19176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19168,
											"end": 19172,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 19178,
											"end": 19184,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 19159,
											"end": 19185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19185,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 19196,
											"end": 19233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 19216,
											"end": 19220,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19222,
											"end": 19224,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19226,
											"end": 19232,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19196,
											"end": 19215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 19196,
											"end": 19233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19196,
											"end": 19233,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 19196,
											"end": 19233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18697,
											"end": 19240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18589,
											"end": 19240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18589,
											"end": 19240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18589,
											"end": 19240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18589,
											"end": 19240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22900,
											"end": 23021,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 22900,
											"end": 23021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22900,
											"end": 23021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22900,
											"end": 23021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22900,
											"end": 23021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22900,
											"end": 23021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23729,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 23609,
											"end": 23729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23609,
											"end": 23729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 594,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 287,
											"end": 594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 355,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 376,
											"end": 377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 373,
											"end": 386,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 365,
											"end": 478,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 365,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 464,
											"end": 465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 459,
											"end": 462,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 455,
											"end": 466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 449,
											"end": 467,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 440,
											"end": 443,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 436,
											"end": 447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 429,
											"end": 468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 401,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 398,
											"end": 399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 394,
											"end": 404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 389,
											"end": 404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 478,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 496,
											"end": 502,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 493,
											"end": 494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 503,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 487,
											"end": 588,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 487,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 487,
											"end": 588,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 576,
											"end": 577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 573,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 562,
											"end": 565,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 558,
											"end": 574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 588,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 487,
											"end": 588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 336,
											"end": 594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 600,
											"end": 702,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 600,
											"end": 702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 688,
											"end": 695,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 672,
											"end": 686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 668,
											"end": 696,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 658,
											"end": 696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 600,
											"end": 702,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 600,
											"end": 702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 600,
											"end": 702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 600,
											"end": 702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 796,
											"end": 799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 857,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 824,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 824,
											"end": 863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 824,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 879,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 943,
											"end": 949,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 938,
											"end": 941,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 879,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 879,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 879,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 872,
											"end": 950,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 872,
											"end": 950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1004,
											"end": 1010,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1002,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 992,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 981,
											"end": 997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 959,
											"end": 1011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1058,
											"end": 1064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1036,
											"end": 1065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1034,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1066,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1231,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1278,
											"end": 1287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1288,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1262,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1379,
											"end": 1383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1370,
											"end": 1376,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1306,
											"end": 1384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1595,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1478,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1844,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1922,
											"end": 1946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2031,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2056,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2072,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2177,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2186,
											"end": 2219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2387,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2412,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2428,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 2533,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 2569,
											"end": 2574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2542,
											"end": 2575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2669,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2714,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2698,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2715,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2718,
											"end": 2797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 2906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2863,
											"end": 2916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2991,
											"end": 3044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2936,
											"end": 3054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3150,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3151,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3259,
											"end": 3264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3244,
											"end": 3265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3478,
											"end": 3479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 3416,
											"end": 3481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3599,
											"end": 3604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3581,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3738,
											"end": 3747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3830,
											"end": 3831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3819,
											"end": 3828,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3762,
											"end": 3833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3939,
											"end": 3945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 3990,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 3974,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3963,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 3991,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3994,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4114,
											"end": 4115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 4184,
											"end": 4191,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4175,
											"end": 4181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4173,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4139,
											"end": 4192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4192,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4085,
											"end": 4202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4243,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 4312,
											"end": 4319,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4292,
											"end": 4301,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4267,
											"end": 4320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4320,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 4440,
											"end": 4447,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4395,
											"end": 4448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4539,
											"end": 4544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 4662,
											"end": 4667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 4646,
											"end": 4668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4641,
											"end": 4644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4797,
											"end": 4806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 4811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 4811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4885,
											"end": 4886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 4867,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 4821,
											"end": 4888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5009,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4997,
											"end": 5006,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4988,
											"end": 4995,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5007,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4980,
											"end": 5012,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5015,
											"end": 5094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5205,
											"end": 5212,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5194,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 5160,
											"end": 5213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 5230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5358,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5347,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5336,
											"end": 5359,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5332,
											"end": 5364,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5367,
											"end": 5446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 5367,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5329,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 5557,
											"end": 5564,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5546,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 5512,
											"end": 5565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 5512,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5502,
											"end": 5565,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5502,
											"end": 5565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5458,
											"end": 5575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5614,
											"end": 5616,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 5685,
											"end": 5692,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5682,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5674,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 5640,
											"end": 5693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5693,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5585,
											"end": 5703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5896,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5716,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5841,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5761,
											"end": 5762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5754,
											"end": 5842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 5865,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5858,
											"end": 5859,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5851,
											"end": 5866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5889,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5882,
											"end": 5883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5875,
											"end": 5890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 6222,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5902,
											"end": 6222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5983,
											"end": 5984,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5977,
											"end": 5981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5973,
											"end": 5985,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 5985,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 5985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6031,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6024,
											"end": 6028,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6032,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6051,
											"end": 6069,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6041,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 6041,
											"end": 6122,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6107,
											"end": 6111,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 6099,
											"end": 6105,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6095,
											"end": 6112,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6085,
											"end": 6112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6085,
											"end": 6112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6041,
											"end": 6122,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 6041,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6171,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6161,
											"end": 6167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6172,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6173,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6132,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 6132,
											"end": 6216,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 6188,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 6188,
											"end": 6206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6206,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 6188,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6132,
											"end": 6216,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 6132,
											"end": 6216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 6222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 6222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 6222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 6222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 6222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6408,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6228,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6353,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6273,
											"end": 6274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6266,
											"end": 6354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6377,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6370,
											"end": 6371,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6363,
											"end": 6378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6397,
											"end": 6401,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6394,
											"end": 6395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6387,
											"end": 6402,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6454,
											"end": 6457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6473,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 6491,
											"end": 6492,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6473,
											"end": 6493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6493,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 6473,
											"end": 6493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6468,
											"end": 6493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6468,
											"end": 6493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6507,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 6525,
											"end": 6526,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6507,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6507,
											"end": 6527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6507,
											"end": 6527,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 6507,
											"end": 6527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6527,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 6659,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6589,
											"end": 6663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6586,
											"end": 6587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6664,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6580,
											"end": 6687,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6580,
											"end": 6687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 6580,
											"end": 6687,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6667,
											"end": 6685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6580,
											"end": 6687,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 6580,
											"end": 6687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 6709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 6713,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6697,
											"end": 6713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6697,
											"end": 6713,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6414,
											"end": 6719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6414,
											"end": 6719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6725,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6725,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6865,
											"end": 6899,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6861,
											"end": 6862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6853,
											"end": 6859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6849,
											"end": 6863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 6900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6941,
											"name": "PUSH",
											"source": 1,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6929,
											"end": 6931,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6917,
											"end": 6932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6725,
											"end": 6949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6725,
											"end": 6949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6955,
											"end": 7321,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6955,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7097,
											"end": 7100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 7182,
											"end": 7184,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7177,
											"end": 7180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7118,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7118,
											"end": 7185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7118,
											"end": 7185,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 7118,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7111,
											"end": 7185,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7111,
											"end": 7185,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 7283,
											"end": 7286,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 7194,
											"end": 7287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7287,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 7194,
											"end": 7287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7314,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7307,
											"end": 7310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7303,
											"end": 7315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 7315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 7315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6955,
											"end": 7321,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6955,
											"end": 7321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6955,
											"end": 7321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6955,
											"end": 7321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7327,
											"end": 7746,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 7327,
											"end": 7746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7497,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7531,
											"end": 7533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7520,
											"end": 7529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7574,
											"end": 7578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7590,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7566,
											"end": 7567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7555,
											"end": 7564,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7551,
											"end": 7568,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 7734,
											"end": 7738,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 7608,
											"end": 7739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7739,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 7608,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7600,
											"end": 7739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7600,
											"end": 7739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7327,
											"end": 7746,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7327,
											"end": 7746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7327,
											"end": 7746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7327,
											"end": 7746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7752,
											"end": 7975,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 7752,
											"end": 7975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7926,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 7888,
											"end": 7889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7927,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7961,
											"end": 7967,
											"name": "PUSH",
											"source": 1,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7956,
											"end": 7958,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7948,
											"end": 7954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7944,
											"end": 7959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7937,
											"end": 7968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7752,
											"end": 7975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7752,
											"end": 7975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7981,
											"end": 8347,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 7981,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8123,
											"end": 8126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8144,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 8208,
											"end": 8210,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8203,
											"end": 8206,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8144,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 8144,
											"end": 8211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8144,
											"end": 8211,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 8144,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 8309,
											"end": 8312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 8220,
											"end": 8313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8313,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 8220,
											"end": 8313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8338,
											"end": 8340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8333,
											"end": 8336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8322,
											"end": 8341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8322,
											"end": 8341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7981,
											"end": 8347,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7981,
											"end": 8347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7981,
											"end": 8347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7981,
											"end": 8347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8353,
											"end": 8772,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 8353,
											"end": 8772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8519,
											"end": 8523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8557,
											"end": 8559,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8546,
											"end": 8555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8542,
											"end": 8560,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8534,
											"end": 8560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8534,
											"end": 8560,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8606,
											"end": 8615,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8596,
											"end": 8616,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8592,
											"end": 8593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8581,
											"end": 8590,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8577,
											"end": 8594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 8760,
											"end": 8764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 8634,
											"end": 8765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8765,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 8634,
											"end": 8765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8626,
											"end": 8765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8626,
											"end": 8765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8353,
											"end": 8772,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8353,
											"end": 8772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8353,
											"end": 8772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8353,
											"end": 8772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8999,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 8778,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8918,
											"end": 8952,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 8914,
											"end": 8915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8906,
											"end": 8912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8902,
											"end": 8916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 8953,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8987,
											"end": 8991,
											"name": "PUSH",
											"source": 1,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8982,
											"end": 8984,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8974,
											"end": 8980,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8970,
											"end": 8985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8963,
											"end": 8992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9147,
											"end": 9150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 9232,
											"end": 9234,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9227,
											"end": 9230,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 9168,
											"end": 9235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 9333,
											"end": 9336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 9244,
											"end": 9337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9362,
											"end": 9364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9357,
											"end": 9360,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9353,
											"end": 9365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9005,
											"end": 9371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9543,
											"end": 9547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9581,
											"end": 9583,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9566,
											"end": 9584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9630,
											"end": 9639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9624,
											"end": 9628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9620,
											"end": 9640,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9616,
											"end": 9617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9614,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9601,
											"end": 9618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9594,
											"end": 9641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 9784,
											"end": 9788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 9658,
											"end": 9789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9377,
											"end": 9796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9802,
											"end": 9981,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 9802,
											"end": 9981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9942,
											"end": 9973,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 9938,
											"end": 9939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9930,
											"end": 9936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9926,
											"end": 9940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9919,
											"end": 9974,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9802,
											"end": 9981,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9802,
											"end": 9981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10129,
											"end": 10132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10150,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 10214,
											"end": 10216,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 10209,
											"end": 10212,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 10150,
											"end": 10217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10217,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 10150,
											"end": 10217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10143,
											"end": 10217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10143,
											"end": 10217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10226,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 10315,
											"end": 10318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10226,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 10226,
											"end": 10319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10226,
											"end": 10319,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 10226,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10344,
											"end": 10346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10339,
											"end": 10342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10335,
											"end": 10347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10328,
											"end": 10347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10328,
											"end": 10347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10525,
											"end": 10529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10563,
											"end": 10565,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10552,
											"end": 10561,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10548,
											"end": 10566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10612,
											"end": 10621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10606,
											"end": 10610,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10602,
											"end": 10622,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10598,
											"end": 10599,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10587,
											"end": 10596,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10583,
											"end": 10600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10640,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 10766,
											"end": 10770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10640,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 10640,
											"end": 10771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10640,
											"end": 10771,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 10640,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10359,
											"end": 10778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10359,
											"end": 10778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 11008,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 10784,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10924,
											"end": 10958,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10920,
											"end": 10921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10912,
											"end": 10918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10908,
											"end": 10922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10901,
											"end": 10959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10993,
											"end": 11000,
											"name": "PUSH",
											"source": 1,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10988,
											"end": 10990,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10980,
											"end": 10986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10976,
											"end": 10991,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10969,
											"end": 11001,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 11008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 11008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11014,
											"end": 11380,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 11014,
											"end": 11380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11156,
											"end": 11159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11177,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 11241,
											"end": 11243,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 11236,
											"end": 11239,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11177,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 11177,
											"end": 11244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11177,
											"end": 11244,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 11177,
											"end": 11244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11170,
											"end": 11244,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11170,
											"end": 11244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11253,
											"end": 11346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 11342,
											"end": 11345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11253,
											"end": 11346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 11253,
											"end": 11346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11253,
											"end": 11346,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 11253,
											"end": 11346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11371,
											"end": 11373,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11366,
											"end": 11369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11362,
											"end": 11374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11355,
											"end": 11374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11355,
											"end": 11374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11014,
											"end": 11380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11014,
											"end": 11380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11014,
											"end": 11380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11014,
											"end": 11380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11552,
											"end": 11556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11590,
											"end": 11592,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11579,
											"end": 11588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11575,
											"end": 11593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11567,
											"end": 11593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11567,
											"end": 11593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11639,
											"end": 11648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11629,
											"end": 11649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11625,
											"end": 11626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11614,
											"end": 11623,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11610,
											"end": 11627,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11650,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 11793,
											"end": 11797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 11667,
											"end": 11798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 11667,
											"end": 11798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11386,
											"end": 11805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11386,
											"end": 11805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11811,
											"end": 12033,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 11811,
											"end": 12033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11951,
											"end": 11985,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 11947,
											"end": 11948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11939,
											"end": 11945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11935,
											"end": 11949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11928,
											"end": 11986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12020,
											"end": 12025,
											"name": "PUSH",
											"source": 1,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12015,
											"end": 12017,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12007,
											"end": 12013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12003,
											"end": 12018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11996,
											"end": 12026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11811,
											"end": 12033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11811,
											"end": 12033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12039,
											"end": 12405,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 12039,
											"end": 12405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12181,
											"end": 12184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12202,
											"end": 12269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 12266,
											"end": 12268,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 12261,
											"end": 12264,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12202,
											"end": 12269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 12202,
											"end": 12269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12202,
											"end": 12269,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 12202,
											"end": 12269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12195,
											"end": 12269,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12195,
											"end": 12269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 12367,
											"end": 12370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 12278,
											"end": 12371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 12278,
											"end": 12371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12396,
											"end": 12398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12391,
											"end": 12394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12399,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12380,
											"end": 12399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12380,
											"end": 12399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12039,
											"end": 12405,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12039,
											"end": 12405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12039,
											"end": 12405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12039,
											"end": 12405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12411,
											"end": 12830,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 12411,
											"end": 12830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12577,
											"end": 12581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12615,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12604,
											"end": 12613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12600,
											"end": 12618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12592,
											"end": 12618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12592,
											"end": 12618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12664,
											"end": 12673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12658,
											"end": 12662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 12674,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12650,
											"end": 12651,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12639,
											"end": 12648,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12635,
											"end": 12652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12628,
											"end": 12675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12692,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 12818,
											"end": 12822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12692,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 12692,
											"end": 12823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12692,
											"end": 12823,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 12692,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12684,
											"end": 12823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12684,
											"end": 12823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12411,
											"end": 12830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12411,
											"end": 12830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12411,
											"end": 12830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12411,
											"end": 12830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12836,
											"end": 13061,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 12836,
											"end": 13061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 13010,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 12972,
											"end": 12973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12964,
											"end": 12970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12960,
											"end": 12974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12953,
											"end": 13011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13045,
											"end": 13053,
											"name": "PUSH",
											"source": 1,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13040,
											"end": 13042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13032,
											"end": 13038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13028,
											"end": 13043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13021,
											"end": 13054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12836,
											"end": 13061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12836,
											"end": 13061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13067,
											"end": 13433,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 13067,
											"end": 13433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13209,
											"end": 13212,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13230,
											"end": 13297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 13294,
											"end": 13296,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 13289,
											"end": 13292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13230,
											"end": 13297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 13230,
											"end": 13297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13230,
											"end": 13297,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 13230,
											"end": 13297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13223,
											"end": 13297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13223,
											"end": 13297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13306,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 13395,
											"end": 13398,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13306,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 13306,
											"end": 13399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13306,
											"end": 13399,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 13306,
											"end": 13399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13424,
											"end": 13426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13419,
											"end": 13422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13415,
											"end": 13427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13408,
											"end": 13427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13408,
											"end": 13427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13067,
											"end": 13433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13067,
											"end": 13433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13067,
											"end": 13433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13067,
											"end": 13433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13439,
											"end": 13858,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 13439,
											"end": 13858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13643,
											"end": 13645,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13632,
											"end": 13641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13628,
											"end": 13646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13620,
											"end": 13646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13620,
											"end": 13646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13692,
											"end": 13701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13686,
											"end": 13690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13682,
											"end": 13702,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13678,
											"end": 13679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13667,
											"end": 13676,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13663,
											"end": 13680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13656,
											"end": 13703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13720,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 13846,
											"end": 13850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13720,
											"end": 13851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 13720,
											"end": 13851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13720,
											"end": 13851,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 13720,
											"end": 13851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13712,
											"end": 13851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13712,
											"end": 13851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13439,
											"end": 13858,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13439,
											"end": 13858,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13439,
											"end": 13858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13439,
											"end": 13858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"treasury_flat.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"treasury_flat.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"treasury_flat.sol\":{\"keccak256\":\"0x98135fb3717076a62558f6542be17f0b4d1c28ee14d097b4c5fafb6014b21a8a\",\"urls\":[\"bzz-raw://a1461c5fde3b10830f36dce8f61fe2bb4b572a0c7d2b87faf75665e9a93debd3\",\"dweb:/ipfs/QmbivuoGpfywb5YBChFYGzq5FkASujh734iX9Uo2NSaaVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 444,
								"contract": "treasury_flat.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 450,
								"contract": "treasury_flat.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 452,
								"contract": "treasury_flat.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 454,
								"contract": "treasury_flat.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 456,
								"contract": "treasury_flat.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"treasury_flat.sol\":\"ERC20Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"treasury_flat.sol\":{\"keccak256\":\"0x98135fb3717076a62558f6542be17f0b4d1c28ee14d097b4c5fafb6014b21a8a\",\"urls\":[\"bzz-raw://a1461c5fde3b10830f36dce8f61fe2bb4b572a0c7d2b87faf75665e9a93debd3\",\"dweb:/ipfs/QmbivuoGpfywb5YBChFYGzq5FkASujh734iX9Uo2NSaaVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 444,
								"contract": "treasury_flat.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 450,
								"contract": "treasury_flat.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 452,
								"contract": "treasury_flat.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 454,
								"contract": "treasury_flat.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 456,
								"contract": "treasury_flat.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"treasury_flat.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"treasury_flat.sol\":{\"keccak256\":\"0x98135fb3717076a62558f6542be17f0b4d1c28ee14d097b4c5fafb6014b21a8a\",\"urls\":[\"bzz-raw://a1461c5fde3b10830f36dce8f61fe2bb4b572a0c7d2b87faf75665e9a93debd3\",\"dweb:/ipfs/QmbivuoGpfywb5YBChFYGzq5FkASujh734iX9Uo2NSaaVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"treasury_flat.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"treasury_flat.sol\":{\"keccak256\":\"0x98135fb3717076a62558f6542be17f0b4d1c28ee14d097b4c5fafb6014b21a8a\",\"urls\":[\"bzz-raw://a1461c5fde3b10830f36dce8f61fe2bb4b572a0c7d2b87faf75665e9a93debd3\",\"dweb:/ipfs/QmbivuoGpfywb5YBChFYGzq5FkASujh734iX9Uo2NSaaVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"treasury_flat.sol\":1376:7676  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"treasury_flat.sol\":1376:7676  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204fa415310ac1cbce3a89d88d0c77df344d3ec27ad59a0bf29fd07699d30721eb64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204fa415310ac1cbce3a89d88d0c77df344d3ec27ad59a0bf29fd07699d30721eb64736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F LOG4 ISZERO BALANCE EXP 0xC1 0xCB 0xCE GASPRICE DUP10 0xD8 DUP14 0xC PUSH24 0xDF344D3EC27AD59A0BF29FD07699D30721EB64736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "1376:6300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204fa415310ac1cbce3a89d88d0c77df344d3ec27ad59a0bf29fd07699d30721eb64736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F LOG4 ISZERO BALANCE EXP 0xC1 0xCB 0xCE GASPRICE DUP10 0xD8 DUP14 0xC PUSH24 0xDF344D3EC27AD59A0BF29FD07699D30721EB64736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "1376:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1376,
									"end": 7676,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1376,
									"end": 7676,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204fa415310ac1cbce3a89d88d0c77df344d3ec27ad59a0bf29fd07699d30721eb64736f6c634300080e0033",
									".code": [
										{
											"begin": 1376,
											"end": 7676,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 1376,
											"end": 7676,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1376,
											"end": 7676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1376,
											"end": 7676,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1376,
											"end": 7676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1376,
											"end": 7676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1376,
											"end": 7676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 7676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1376,
											"end": 7676,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"treasury_flat.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"treasury_flat.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"treasury_flat.sol\":{\"keccak256\":\"0x98135fb3717076a62558f6542be17f0b4d1c28ee14d097b4c5fafb6014b21a8a\",\"urls\":[\"bzz-raw://a1461c5fde3b10830f36dce8f61fe2bb4b572a0c7d2b87faf75665e9a93debd3\",\"dweb:/ipfs/QmbivuoGpfywb5YBChFYGzq5FkASujh734iX9Uo2NSaaVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"treasury": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_k",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "DCF_ETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "ETH_DCF",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Warning_protect",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "market",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "power",
									"type": "bool"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "subscriber",
									"type": "address"
								}
							],
							"name": "subscribe",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"treasury_flat.sol\":24917:26964  contract treasury {... */\n  mstore(0x40, 0x80)\n    /* \"treasury_flat.sol\":24992:25034  0x96F76E450f441436221A166aB0c3C73C59849B72 */\n  0x96f76e450f441436221a166ab0c3c73c59849b72\n    /* \"treasury_flat.sol\":24969:25035  IERC20 dcoff =  IERC20(0x96F76E450f441436221A166aB0c3C73C59849B72) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"treasury_flat.sol\":25080:25122  0x96F76E450f441436221A166aB0c3C73C59849B72 */\n  0x96f76e450f441436221a166ab0c3c73c59849b72\n    /* \"treasury_flat.sol\":25039:25123  ERC20Burnable dcoff_burn = ERC20Burnable(0x96F76E450f441436221A166aB0c3C73C59849B72) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"treasury_flat.sol\":25150:25218  constructor(uint _k)payable{... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"treasury_flat.sol\":25191:25201  msg.sender */\n  caller\n    /* \"treasury_flat.sol\":25183:25188  owner */\n  0x03\n  0x00\n    /* \"treasury_flat.sol\":25183:25201  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"treasury_flat.sol\":25211:25213  _k */\n  dup1\n    /* \"treasury_flat.sol\":25207:25208  K */\n  0x02\n    /* \"treasury_flat.sol\":25207:25213  K = _k */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"treasury_flat.sol\":25150:25218  constructor(uint _k)payable{... */\n  pop\n    /* \"treasury_flat.sol\":24917:26964  contract treasury {... */\n  jump(tag_5)\n    /* \"#utility.yul\":88:205   */\ntag_7:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_9:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_10:\n    /* \"#utility.yul\":490:514   */\n  tag_18\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_9\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_19:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_11:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_21\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_2:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_24\n  tag_7\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":781:900   */\ntag_23:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_25\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"treasury_flat.sol\":24917:26964  contract treasury {... */\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"treasury_flat.sol\":24917:26964  contract treasury {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3a23bf49\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x41a7726a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x94756aa7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x97dedb1d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc3c64674\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xdac3fad4\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"treasury_flat.sol\":25980:26429  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"treasury_flat.sol\":25508:25708  function subscribe(address subscriber)external payable{... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"treasury_flat.sol\":25713:25975  function market(address payable seller, uint256 dcf_amount)external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"treasury_flat.sol\":26434:26785  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"treasury_flat.sol\":25405:25503  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"treasury_flat.sol\":26790:26949  function Warning_protect()external onlyOwner{... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"treasury_flat.sol\":25980:26429  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n    tag_12:\n        /* \"treasury_flat.sol\":26036:26043  uint256 */\n      0x00\n        /* \"treasury_flat.sol\":26050:26069  uint256 _eth_amount */\n      dup1\n        /* \"treasury_flat.sol\":26072:26093  address(this).balance */\n      selfbalance\n        /* \"treasury_flat.sol\":26050:26093  uint256 _eth_amount = address(this).balance */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":26099:26118  uint256 _dcf_amount */\n      0x00\n        /* \"treasury_flat.sol\":26121:26126  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":26121:26136  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"treasury_flat.sol\":26145:26149  this */\n      address\n        /* \"treasury_flat.sol\":26121:26151  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"treasury_flat.sol\":26099:26151  uint256 _dcf_amount = dcoff.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":26161:26181  uint256 Variable_dcf */\n      0x00\n        /* \"treasury_flat.sol\":26184:26211  _dcf_amount.add(dcf_amount) */\n      tag_44\n        /* \"treasury_flat.sol\":26200:26210  dcf_amount */\n      dup6\n        /* \"treasury_flat.sol\":26184:26195  _dcf_amount */\n      dup4\n        /* \"treasury_flat.sol\":26184:26199  _dcf_amount.add */\n      tag_45\n      swap1\n        /* \"treasury_flat.sol\":26184:26211  _dcf_amount.add(dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_44:\n        /* \"treasury_flat.sol\":26161:26211  uint256 Variable_dcf = _dcf_amount.add(dcf_amount) */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":26236:26241  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":26236:26253  dcoff.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"treasury_flat.sol\":26236:26255  dcoff.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_48:\n        /* \"treasury_flat.sol\":26221:26233  Variable_dcf */\n      dup2\n        /* \"treasury_flat.sol\":26221:26255  Variable_dcf > dcoff.totalSupply() */\n      gt\n        /* \"treasury_flat.sol\":26218:26305  if(Variable_dcf > dcoff.totalSupply()){... */\n      iszero\n      tag_49\n      jumpi\n        /* \"treasury_flat.sol\":26279:26284  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":26279:26296  dcoff.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"treasury_flat.sol\":26279:26298  dcoff.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_52:\n        /* \"treasury_flat.sol\":26264:26298  Variable_dcf = dcoff.totalSupply() */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":26218:26305  if(Variable_dcf > dcoff.totalSupply()){... */\n    tag_49:\n        /* \"treasury_flat.sol\":26311:26331  uint256 Variable_eth */\n      0x00\n        /* \"treasury_flat.sol\":26334:26353  K.div(Variable_dcf) */\n      tag_53\n        /* \"treasury_flat.sol\":26340:26352  Variable_dcf */\n      dup3\n        /* \"treasury_flat.sol\":26334:26335  K */\n      sload(0x02)\n        /* \"treasury_flat.sol\":26334:26339  K.div */\n      tag_54\n      swap1\n        /* \"treasury_flat.sol\":26334:26353  K.div(Variable_dcf) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_53:\n        /* \"treasury_flat.sol\":26311:26353  uint256 Variable_eth = K.div(Variable_dcf) */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":26359:26373  uint256 _price */\n      0x00\n        /* \"treasury_flat.sol\":26376:26405  _eth_amount.sub(Variable_eth) */\n      tag_55\n        /* \"treasury_flat.sol\":26392:26404  Variable_eth */\n      dup3\n        /* \"treasury_flat.sol\":26376:26387  _eth_amount */\n      dup7\n        /* \"treasury_flat.sol\":26376:26391  _eth_amount.sub */\n      tag_56\n      swap1\n        /* \"treasury_flat.sol\":26376:26405  _eth_amount.sub(Variable_eth) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_55:\n        /* \"treasury_flat.sol\":26359:26405  uint256 _price = _eth_amount.sub(Variable_eth) */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":26418:26424  _price */\n      dup1\n        /* \"treasury_flat.sol\":26411:26424  return _price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"treasury_flat.sol\":25980:26429  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"treasury_flat.sol\":25508:25708  function subscribe(address subscriber)external payable{... */\n    tag_18:\n        /* \"treasury_flat.sol\":25605:25609  true */\n      0x01\n        /* \"treasury_flat.sol\":25578:25609  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"treasury_flat.sol\":25578:25589  RouterAdmin */\n      0x04\n        /* \"treasury_flat.sol\":25578:25601  RouterAdmin[msg.sender] */\n      0x00\n        /* \"treasury_flat.sol\":25590:25600  msg.sender */\n      caller\n        /* \"treasury_flat.sol\":25578:25601  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"treasury_flat.sol\":25578:25609  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"treasury_flat.sol\":25570:25610  require(RouterAdmin[msg.sender] == true) */\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n        /* \"treasury_flat.sol\":25618:25636  uint256 dcf_amount */\n      0x00\n        /* \"treasury_flat.sol\":25639:25657  ETH_DCF(msg.value) */\n      tag_59\n        /* \"treasury_flat.sol\":25647:25656  msg.value */\n      callvalue\n        /* \"treasury_flat.sol\":25639:25646  ETH_DCF */\n      tag_27\n        /* \"treasury_flat.sol\":25639:25657  ETH_DCF(msg.value) */\n      jump\t// in\n    tag_59:\n        /* \"treasury_flat.sol\":25618:25657  uint256 dcf_amount = ETH_DCF(msg.value) */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":25665:25670  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":25665:25679  dcoff.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"treasury_flat.sol\":25680:25690  subscriber */\n      dup4\n        /* \"treasury_flat.sol\":25691:25701  dcf_amount */\n      dup4\n        /* \"treasury_flat.sol\":25665:25702  dcoff.transfer(subscriber,dcf_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      pop\n        /* \"treasury_flat.sol\":25562:25708  {... */\n      pop\n        /* \"treasury_flat.sol\":25508:25708  function subscribe(address subscriber)external payable{... */\n      pop\n      jump\t// out\n        /* \"treasury_flat.sol\":25713:25975  function market(address payable seller, uint256 dcf_amount)external {... */\n    tag_23:\n        /* \"treasury_flat.sol\":25824:25828  true */\n      0x01\n        /* \"treasury_flat.sol\":25797:25828  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"treasury_flat.sol\":25797:25808  RouterAdmin */\n      0x04\n        /* \"treasury_flat.sol\":25797:25820  RouterAdmin[msg.sender] */\n      0x00\n        /* \"treasury_flat.sol\":25809:25819  msg.sender */\n      caller\n        /* \"treasury_flat.sol\":25797:25820  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"treasury_flat.sol\":25797:25828  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"treasury_flat.sol\":25789:25829  require(RouterAdmin[msg.sender] == true) */\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n        /* \"treasury_flat.sol\":25837:25855  uint256 eth_amount */\n      0x00\n        /* \"treasury_flat.sol\":25858:25877  DCF_ETH(dcf_amount) */\n      tag_68\n        /* \"treasury_flat.sol\":25866:25876  dcf_amount */\n      dup3\n        /* \"treasury_flat.sol\":25858:25865  DCF_ETH */\n      tag_12\n        /* \"treasury_flat.sol\":25858:25877  DCF_ETH(dcf_amount) */\n      jump\t// in\n    tag_68:\n        /* \"treasury_flat.sol\":25837:25877  uint256 eth_amount = DCF_ETH(dcf_amount) */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":25885:25891  seller */\n      dup3\n        /* \"treasury_flat.sol\":25885:25900  seller.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":25885:25912  seller.transfer(eth_amount) */\n      0x08fc\n        /* \"treasury_flat.sol\":25901:25911  eth_amount */\n      dup3\n        /* \"treasury_flat.sol\":25885:25912  seller.transfer(eth_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n        /* \"treasury_flat.sol\":25920:25930  dcoff_burn */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":25920:25939  dcoff_burn.burnFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x79cc6790\n        /* \"treasury_flat.sol\":25940:25946  seller */\n      dup5\n        /* \"treasury_flat.sol\":25947:25957  dcf_amount */\n      dup5\n        /* \"treasury_flat.sol\":25920:25958  dcoff_burn.burnFrom(seller,dcf_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_75:\n      pop\n      pop\n      pop\n      pop\n        /* \"treasury_flat.sol\":25781:25975  {... */\n      pop\n        /* \"treasury_flat.sol\":25713:25975  function market(address payable seller, uint256 dcf_amount)external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"treasury_flat.sol\":26434:26785  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n    tag_27:\n        /* \"treasury_flat.sol\":26490:26497  uint256 */\n      0x00\n        /* \"treasury_flat.sol\":26504:26523  uint256 _eth_amount */\n      dup1\n        /* \"treasury_flat.sol\":26526:26547  address(this).balance */\n      selfbalance\n        /* \"treasury_flat.sol\":26504:26547  uint256 _eth_amount = address(this).balance */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":26553:26572  uint256 _dcf_amount */\n      0x00\n        /* \"treasury_flat.sol\":26575:26580  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":26575:26590  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"treasury_flat.sol\":26599:26603  this */\n      address\n        /* \"treasury_flat.sol\":26575:26605  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_77:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_80:\n        /* \"treasury_flat.sol\":26553:26605  uint256 _dcf_amount = dcoff.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":26611:26631  uint256 Variable_eth */\n      0x00\n        /* \"treasury_flat.sol\":26634:26661  _eth_amount.add(eth_amount) */\n      tag_81\n        /* \"treasury_flat.sol\":26650:26660  eth_amount */\n      dup6\n        /* \"treasury_flat.sol\":26634:26645  _eth_amount */\n      dup5\n        /* \"treasury_flat.sol\":26634:26649  _eth_amount.add */\n      tag_45\n      swap1\n        /* \"treasury_flat.sol\":26634:26661  _eth_amount.add(eth_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"treasury_flat.sol\":26611:26661  uint256 Variable_eth = _eth_amount.add(eth_amount) */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":26667:26687  uint256 Variable_dcf */\n      0x00\n        /* \"treasury_flat.sol\":26690:26709  K.div(Variable_eth) */\n      tag_82\n        /* \"treasury_flat.sol\":26696:26708  Variable_eth */\n      dup3\n        /* \"treasury_flat.sol\":26690:26691  K */\n      sload(0x02)\n        /* \"treasury_flat.sol\":26690:26695  K.div */\n      tag_54\n      swap1\n        /* \"treasury_flat.sol\":26690:26709  K.div(Variable_eth) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_82:\n        /* \"treasury_flat.sol\":26667:26709  uint256 Variable_dcf = K.div(Variable_eth) */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":26715:26729  uint256 _price */\n      0x00\n        /* \"treasury_flat.sol\":26732:26761  _dcf_amount.sub(Variable_dcf) */\n      tag_83\n        /* \"treasury_flat.sol\":26748:26760  Variable_dcf */\n      dup3\n        /* \"treasury_flat.sol\":26732:26743  _dcf_amount */\n      dup6\n        /* \"treasury_flat.sol\":26732:26747  _dcf_amount.sub */\n      tag_56\n      swap1\n        /* \"treasury_flat.sol\":26732:26761  _dcf_amount.sub(Variable_dcf) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_83:\n        /* \"treasury_flat.sol\":26715:26761  uint256 _price = _dcf_amount.sub(Variable_dcf) */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":26774:26780  _price */\n      dup1\n        /* \"treasury_flat.sol\":26767:26780  return _price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"treasury_flat.sol\":26434:26785  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"treasury_flat.sol\":25405:25503  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_33:\n        /* \"treasury_flat.sol\":25335:25345  msg.sender */\n      caller\n        /* \"treasury_flat.sol\":25326:25345  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":25326:25331  owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":25326:25345  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"treasury_flat.sol\":25318:25382  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"treasury_flat.sol\":25493:25498  power */\n      dup1\n        /* \"treasury_flat.sol\":25473:25484  RouterAdmin */\n      0x04\n        /* \"treasury_flat.sol\":25473:25490  RouterAdmin[user] */\n      0x00\n        /* \"treasury_flat.sol\":25485:25489  user */\n      dup5\n        /* \"treasury_flat.sol\":25473:25490  RouterAdmin[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"treasury_flat.sol\":25473:25498  RouterAdmin[user] = power */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"treasury_flat.sol\":25405:25503  function setRouter(address user, bool power)external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"treasury_flat.sol\":26790:26949  function Warning_protect()external onlyOwner{... */\n    tag_36:\n        /* \"treasury_flat.sol\":25335:25345  msg.sender */\n      caller\n        /* \"treasury_flat.sol\":25326:25345  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":25326:25331  owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":25326:25345  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"treasury_flat.sol\":25318:25382  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_87\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"treasury_flat.sol\":26848:26853  owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":26840:26863  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":26840:26886  payable(owner).transfer(address(this).balance) */\n      0x08fc\n        /* \"treasury_flat.sol\":26864:26885  address(this).balance */\n      selfbalance\n        /* \"treasury_flat.sol\":26840:26886  payable(owner).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_94:\n      pop\n        /* \"treasury_flat.sol\":26892:26897  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":26892:26906  dcoff.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"treasury_flat.sol\":26907:26912  owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":26913:26918  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat.sol\":26913:26928  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"treasury_flat.sol\":26937:26941  this */\n      address\n        /* \"treasury_flat.sol\":26913:26943  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_95:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_98:\n        /* \"treasury_flat.sol\":26892:26944  dcoff.transfer(owner,dcoff.balanceOf(address(this))) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_99:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_102:\n      pop\n        /* \"treasury_flat.sol\":26790:26949  function Warning_protect()external onlyOwner{... */\n      jump\t// out\n        /* \"treasury_flat.sol\":3649:3745  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_45:\n        /* \"treasury_flat.sol\":3707:3714  uint256 */\n      0x00\n        /* \"treasury_flat.sol\":3737:3738  b */\n      dup2\n        /* \"treasury_flat.sol\":3733:3734  a */\n      dup4\n        /* \"treasury_flat.sol\":3733:3738  a + b */\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"treasury_flat.sol\":3726:3738  return a + b */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":3649:3745  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"treasury_flat.sol\":4744:4840  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_54:\n        /* \"treasury_flat.sol\":4802:4809  uint256 */\n      0x00\n        /* \"treasury_flat.sol\":4832:4833  b */\n      dup2\n        /* \"treasury_flat.sol\":4828:4829  a */\n      dup4\n        /* \"treasury_flat.sol\":4828:4833  a / b */\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"treasury_flat.sol\":4821:4833  return a / b */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":4744:4840  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"treasury_flat.sol\":4016:4112  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_56:\n        /* \"treasury_flat.sol\":4074:4081  uint256 */\n      0x00\n        /* \"treasury_flat.sol\":4104:4105  b */\n      dup2\n        /* \"treasury_flat.sol\":4100:4101  a */\n      dup4\n        /* \"treasury_flat.sol\":4100:4105  a - b */\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"treasury_flat.sol\":4093:4105  return a - b */\n      swap1\n      pop\n        /* \"treasury_flat.sol\":4016:4112  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_113:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_115:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_116:\n        /* \"#utility.yul\":490:514   */\n      tag_148\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_115\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_149:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_117:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_151\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_116\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_11:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_154\n      tag_113\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":766:885   */\n    tag_153:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_155\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_117\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_118:\n        /* \"#utility.yul\":1112:1136   */\n      tag_157\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_115\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_14:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_159\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_118\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_119:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_120:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_162\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_119\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_121:\n        /* \"#utility.yul\":1684:1708   */\n      tag_164\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_120\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_165:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_122:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_167\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_121\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_17:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_170\n      tag_113\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":1960:2079   */\n    tag_169:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_171\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_122\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2323   */\n    tag_123:\n        /* \"#utility.yul\":2264:2271   */\n      0x00\n        /* \"#utility.yul\":2293:2317   */\n      tag_173\n        /* \"#utility.yul\":2311:2316   */\n      dup3\n        /* \"#utility.yul\":2293:2317   */\n      tag_119\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2282:2317   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2329:2467   */\n    tag_124:\n        /* \"#utility.yul\":2410:2442   */\n      tag_175\n        /* \"#utility.yul\":2436:2441   */\n      dup2\n        /* \"#utility.yul\":2410:2442   */\n      tag_123\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2403:2408   */\n      dup2\n        /* \"#utility.yul\":2400:2443   */\n      eq\n        /* \"#utility.yul\":2390:2461   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":2457:2458   */\n      0x00\n        /* \"#utility.yul\":2454:2455   */\n      dup1\n        /* \"#utility.yul\":2447:2459   */\n      revert\n        /* \"#utility.yul\":2390:2461   */\n    tag_176:\n        /* \"#utility.yul\":2329:2467   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2473:2628   */\n    tag_125:\n        /* \"#utility.yul\":2527:2532   */\n      0x00\n        /* \"#utility.yul\":2565:2571   */\n      dup2\n        /* \"#utility.yul\":2552:2572   */\n      calldataload\n        /* \"#utility.yul\":2543:2572   */\n      swap1\n      pop\n        /* \"#utility.yul\":2581:2622   */\n      tag_178\n        /* \"#utility.yul\":2616:2621   */\n      dup2\n        /* \"#utility.yul\":2581:2622   */\n      tag_124\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2473:2628   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2634:3124   */\n    tag_22:\n        /* \"#utility.yul\":2710:2716   */\n      0x00\n        /* \"#utility.yul\":2718:2724   */\n      dup1\n        /* \"#utility.yul\":2767:2769   */\n      0x40\n        /* \"#utility.yul\":2755:2764   */\n      dup4\n        /* \"#utility.yul\":2746:2753   */\n      dup6\n        /* \"#utility.yul\":2742:2765   */\n      sub\n        /* \"#utility.yul\":2738:2770   */\n      slt\n        /* \"#utility.yul\":2735:2854   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":2773:2852   */\n      tag_181\n      tag_113\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":2735:2854   */\n    tag_180:\n        /* \"#utility.yul\":2893:2894   */\n      0x00\n        /* \"#utility.yul\":2918:2979   */\n      tag_182\n        /* \"#utility.yul\":2971:2978   */\n      dup6\n        /* \"#utility.yul\":2962:2968   */\n      dup3\n        /* \"#utility.yul\":2951:2960   */\n      dup7\n        /* \"#utility.yul\":2947:2969   */\n      add\n        /* \"#utility.yul\":2918:2979   */\n      tag_125\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2908:2979   */\n      swap3\n      pop\n        /* \"#utility.yul\":2864:2989   */\n      pop\n        /* \"#utility.yul\":3028:3030   */\n      0x20\n        /* \"#utility.yul\":3054:3107   */\n      tag_183\n        /* \"#utility.yul\":3099:3106   */\n      dup6\n        /* \"#utility.yul\":3090:3096   */\n      dup3\n        /* \"#utility.yul\":3079:3088   */\n      dup7\n        /* \"#utility.yul\":3075:3097   */\n      add\n        /* \"#utility.yul\":3054:3107   */\n      tag_117\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3044:3107   */\n      swap2\n      pop\n        /* \"#utility.yul\":2999:3117   */\n      pop\n        /* \"#utility.yul\":2634:3124   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3130:3220   */\n    tag_126:\n        /* \"#utility.yul\":3164:3171   */\n      0x00\n        /* \"#utility.yul\":3207:3212   */\n      dup2\n        /* \"#utility.yul\":3200:3213   */\n      iszero\n        /* \"#utility.yul\":3193:3214   */\n      iszero\n        /* \"#utility.yul\":3182:3214   */\n      swap1\n      pop\n        /* \"#utility.yul\":3130:3220   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3226:3342   */\n    tag_127:\n        /* \"#utility.yul\":3296:3317   */\n      tag_186\n        /* \"#utility.yul\":3311:3316   */\n      dup2\n        /* \"#utility.yul\":3296:3317   */\n      tag_126\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3289:3294   */\n      dup2\n        /* \"#utility.yul\":3286:3318   */\n      eq\n        /* \"#utility.yul\":3276:3336   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":3332:3333   */\n      0x00\n        /* \"#utility.yul\":3329:3330   */\n      dup1\n        /* \"#utility.yul\":3322:3334   */\n      revert\n        /* \"#utility.yul\":3276:3336   */\n    tag_187:\n        /* \"#utility.yul\":3226:3342   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3348:3481   */\n    tag_128:\n        /* \"#utility.yul\":3391:3396   */\n      0x00\n        /* \"#utility.yul\":3429:3435   */\n      dup2\n        /* \"#utility.yul\":3416:3436   */\n      calldataload\n        /* \"#utility.yul\":3407:3436   */\n      swap1\n      pop\n        /* \"#utility.yul\":3445:3475   */\n      tag_189\n        /* \"#utility.yul\":3469:3474   */\n      dup2\n        /* \"#utility.yul\":3445:3475   */\n      tag_127\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3348:3481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3487:3955   */\n    tag_32:\n        /* \"#utility.yul\":3552:3558   */\n      0x00\n        /* \"#utility.yul\":3560:3566   */\n      dup1\n        /* \"#utility.yul\":3609:3611   */\n      0x40\n        /* \"#utility.yul\":3597:3606   */\n      dup4\n        /* \"#utility.yul\":3588:3595   */\n      dup6\n        /* \"#utility.yul\":3584:3607   */\n      sub\n        /* \"#utility.yul\":3580:3612   */\n      slt\n        /* \"#utility.yul\":3577:3696   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":3615:3694   */\n      tag_192\n      tag_113\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3577:3696   */\n    tag_191:\n        /* \"#utility.yul\":3735:3736   */\n      0x00\n        /* \"#utility.yul\":3760:3813   */\n      tag_193\n        /* \"#utility.yul\":3805:3812   */\n      dup6\n        /* \"#utility.yul\":3796:3802   */\n      dup3\n        /* \"#utility.yul\":3785:3794   */\n      dup7\n        /* \"#utility.yul\":3781:3803   */\n      add\n        /* \"#utility.yul\":3760:3813   */\n      tag_122\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3750:3813   */\n      swap3\n      pop\n        /* \"#utility.yul\":3706:3823   */\n      pop\n        /* \"#utility.yul\":3862:3864   */\n      0x20\n        /* \"#utility.yul\":3888:3938   */\n      tag_194\n        /* \"#utility.yul\":3930:3937   */\n      dup6\n        /* \"#utility.yul\":3921:3927   */\n      dup3\n        /* \"#utility.yul\":3910:3919   */\n      dup7\n        /* \"#utility.yul\":3906:3928   */\n      add\n        /* \"#utility.yul\":3888:3938   */\n      tag_128\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":3878:3938   */\n      swap2\n      pop\n        /* \"#utility.yul\":3833:3948   */\n      pop\n        /* \"#utility.yul\":3487:3955   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3961:4079   */\n    tag_129:\n        /* \"#utility.yul\":4048:4072   */\n      tag_196\n        /* \"#utility.yul\":4066:4071   */\n      dup2\n        /* \"#utility.yul\":4048:4072   */\n      tag_120\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":4043:4046   */\n      dup3\n        /* \"#utility.yul\":4036:4073   */\n      mstore\n        /* \"#utility.yul\":3961:4079   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4085:4307   */\n    tag_39:\n        /* \"#utility.yul\":4178:4182   */\n      0x00\n        /* \"#utility.yul\":4216:4218   */\n      0x20\n        /* \"#utility.yul\":4205:4214   */\n      dup3\n        /* \"#utility.yul\":4201:4219   */\n      add\n        /* \"#utility.yul\":4193:4219   */\n      swap1\n      pop\n        /* \"#utility.yul\":4229:4300   */\n      tag_198\n        /* \"#utility.yul\":4297:4298   */\n      0x00\n        /* \"#utility.yul\":4286:4295   */\n      dup4\n        /* \"#utility.yul\":4282:4299   */\n      add\n        /* \"#utility.yul\":4273:4279   */\n      dup5\n        /* \"#utility.yul\":4229:4300   */\n      tag_129\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4085:4307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4313:4456   */\n    tag_130:\n        /* \"#utility.yul\":4370:4375   */\n      0x00\n        /* \"#utility.yul\":4401:4407   */\n      dup2\n        /* \"#utility.yul\":4395:4408   */\n      mload\n        /* \"#utility.yul\":4386:4408   */\n      swap1\n      pop\n        /* \"#utility.yul\":4417:4450   */\n      tag_200\n        /* \"#utility.yul\":4444:4449   */\n      dup2\n        /* \"#utility.yul\":4417:4450   */\n      tag_116\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":4313:4456   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4462:4813   */\n    tag_43:\n        /* \"#utility.yul\":4532:4538   */\n      0x00\n        /* \"#utility.yul\":4581:4583   */\n      0x20\n        /* \"#utility.yul\":4569:4578   */\n      dup3\n        /* \"#utility.yul\":4560:4567   */\n      dup5\n        /* \"#utility.yul\":4556:4579   */\n      sub\n        /* \"#utility.yul\":4552:4584   */\n      slt\n        /* \"#utility.yul\":4549:4668   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":4587:4666   */\n      tag_203\n      tag_113\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4549:4668   */\n    tag_202:\n        /* \"#utility.yul\":4707:4708   */\n      0x00\n        /* \"#utility.yul\":4732:4796   */\n      tag_204\n        /* \"#utility.yul\":4788:4795   */\n      dup5\n        /* \"#utility.yul\":4779:4785   */\n      dup3\n        /* \"#utility.yul\":4768:4777   */\n      dup6\n        /* \"#utility.yul\":4764:4786   */\n      add\n        /* \"#utility.yul\":4732:4796   */\n      tag_130\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4722:4796   */\n      swap2\n      pop\n        /* \"#utility.yul\":4678:4806   */\n      pop\n        /* \"#utility.yul\":4462:4813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4819:5151   */\n    tag_61:\n        /* \"#utility.yul\":4940:4944   */\n      0x00\n        /* \"#utility.yul\":4978:4980   */\n      0x40\n        /* \"#utility.yul\":4967:4976   */\n      dup3\n        /* \"#utility.yul\":4963:4981   */\n      add\n        /* \"#utility.yul\":4955:4981   */\n      swap1\n      pop\n        /* \"#utility.yul\":4991:5062   */\n      tag_206\n        /* \"#utility.yul\":5059:5060   */\n      0x00\n        /* \"#utility.yul\":5048:5057   */\n      dup4\n        /* \"#utility.yul\":5044:5061   */\n      add\n        /* \"#utility.yul\":5035:5041   */\n      dup6\n        /* \"#utility.yul\":4991:5062   */\n      tag_129\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5072:5144   */\n      tag_207\n        /* \"#utility.yul\":5140:5142   */\n      0x20\n        /* \"#utility.yul\":5129:5138   */\n      dup4\n        /* \"#utility.yul\":5125:5143   */\n      add\n        /* \"#utility.yul\":5116:5122   */\n      dup5\n        /* \"#utility.yul\":5072:5144   */\n      tag_118\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4819:5151   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5157:5294   */\n    tag_131:\n        /* \"#utility.yul\":5211:5216   */\n      0x00\n        /* \"#utility.yul\":5242:5248   */\n      dup2\n        /* \"#utility.yul\":5236:5249   */\n      mload\n        /* \"#utility.yul\":5227:5249   */\n      swap1\n      pop\n        /* \"#utility.yul\":5258:5288   */\n      tag_209\n        /* \"#utility.yul\":5282:5287   */\n      dup2\n        /* \"#utility.yul\":5258:5288   */\n      tag_127\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":5157:5294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5300:5645   */\n    tag_65:\n        /* \"#utility.yul\":5367:5373   */\n      0x00\n        /* \"#utility.yul\":5416:5418   */\n      0x20\n        /* \"#utility.yul\":5404:5413   */\n      dup3\n        /* \"#utility.yul\":5395:5402   */\n      dup5\n        /* \"#utility.yul\":5391:5414   */\n      sub\n        /* \"#utility.yul\":5387:5419   */\n      slt\n        /* \"#utility.yul\":5384:5503   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":5422:5501   */\n      tag_212\n      tag_113\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5384:5503   */\n    tag_211:\n        /* \"#utility.yul\":5542:5543   */\n      0x00\n        /* \"#utility.yul\":5567:5628   */\n      tag_213\n        /* \"#utility.yul\":5620:5627   */\n      dup5\n        /* \"#utility.yul\":5611:5617   */\n      dup3\n        /* \"#utility.yul\":5600:5609   */\n      dup6\n        /* \"#utility.yul\":5596:5618   */\n      add\n        /* \"#utility.yul\":5567:5628   */\n      tag_131\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5557:5628   */\n      swap2\n      pop\n        /* \"#utility.yul\":5513:5638   */\n      pop\n        /* \"#utility.yul\":5300:5645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5651:5711   */\n    tag_132:\n        /* \"#utility.yul\":5679:5682   */\n      0x00\n        /* \"#utility.yul\":5700:5705   */\n      dup2\n        /* \"#utility.yul\":5693:5705   */\n      swap1\n      pop\n        /* \"#utility.yul\":5651:5711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5717:5859   */\n    tag_133:\n        /* \"#utility.yul\":5767:5776   */\n      0x00\n        /* \"#utility.yul\":5800:5853   */\n      tag_216\n        /* \"#utility.yul\":5818:5852   */\n      tag_217\n        /* \"#utility.yul\":5827:5851   */\n      tag_218\n        /* \"#utility.yul\":5845:5850   */\n      dup5\n        /* \"#utility.yul\":5827:5851   */\n      tag_119\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5818:5852   */\n      tag_132\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":5800:5853   */\n      tag_119\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5787:5853   */\n      swap1\n      pop\n        /* \"#utility.yul\":5717:5859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5865:5991   */\n    tag_134:\n        /* \"#utility.yul\":5915:5924   */\n      0x00\n        /* \"#utility.yul\":5948:5985   */\n      tag_220\n        /* \"#utility.yul\":5979:5984   */\n      dup3\n        /* \"#utility.yul\":5948:5985   */\n      tag_133\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5935:5985   */\n      swap1\n      pop\n        /* \"#utility.yul\":5865:5991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5997:6131   */\n    tag_135:\n        /* \"#utility.yul\":6055:6064   */\n      0x00\n        /* \"#utility.yul\":6088:6125   */\n      tag_222\n        /* \"#utility.yul\":6119:6124   */\n      dup3\n        /* \"#utility.yul\":6088:6125   */\n      tag_134\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6075:6125   */\n      swap1\n      pop\n        /* \"#utility.yul\":5997:6131   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6137:6284   */\n    tag_136:\n        /* \"#utility.yul\":6232:6277   */\n      tag_224\n        /* \"#utility.yul\":6271:6276   */\n      dup2\n        /* \"#utility.yul\":6232:6277   */\n      tag_135\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6227:6230   */\n      dup3\n        /* \"#utility.yul\":6220:6278   */\n      mstore\n        /* \"#utility.yul\":6137:6284   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6290:6638   */\n    tag_72:\n        /* \"#utility.yul\":6419:6423   */\n      0x00\n        /* \"#utility.yul\":6457:6459   */\n      0x40\n        /* \"#utility.yul\":6446:6455   */\n      dup3\n        /* \"#utility.yul\":6442:6460   */\n      add\n        /* \"#utility.yul\":6434:6460   */\n      swap1\n      pop\n        /* \"#utility.yul\":6470:6549   */\n      tag_226\n        /* \"#utility.yul\":6546:6547   */\n      0x00\n        /* \"#utility.yul\":6535:6544   */\n      dup4\n        /* \"#utility.yul\":6531:6548   */\n      add\n        /* \"#utility.yul\":6522:6528   */\n      dup6\n        /* \"#utility.yul\":6470:6549   */\n      tag_136\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":6559:6631   */\n      tag_227\n        /* \"#utility.yul\":6627:6629   */\n      0x20\n        /* \"#utility.yul\":6616:6625   */\n      dup4\n        /* \"#utility.yul\":6612:6630   */\n      add\n        /* \"#utility.yul\":6603:6609   */\n      dup5\n        /* \"#utility.yul\":6559:6631   */\n      tag_118\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":6290:6638   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6644:6813   */\n    tag_137:\n        /* \"#utility.yul\":6728:6739   */\n      0x00\n        /* \"#utility.yul\":6762:6768   */\n      dup3\n        /* \"#utility.yul\":6757:6760   */\n      dup3\n        /* \"#utility.yul\":6750:6769   */\n      mstore\n        /* \"#utility.yul\":6802:6806   */\n      0x20\n        /* \"#utility.yul\":6797:6800   */\n      dup3\n        /* \"#utility.yul\":6793:6807   */\n      add\n        /* \"#utility.yul\":6778:6807   */\n      swap1\n      pop\n        /* \"#utility.yul\":6644:6813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6819:7001   */\n    tag_138:\n        /* \"#utility.yul\":6959:6993   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6955:6956   */\n      0x00\n        /* \"#utility.yul\":6947:6953   */\n      dup3\n        /* \"#utility.yul\":6943:6957   */\n      add\n        /* \"#utility.yul\":6936:6994   */\n      mstore\n        /* \"#utility.yul\":6819:7001   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7007:7373   */\n    tag_139:\n        /* \"#utility.yul\":7149:7152   */\n      0x00\n        /* \"#utility.yul\":7170:7237   */\n      tag_231\n        /* \"#utility.yul\":7234:7236   */\n      0x20\n        /* \"#utility.yul\":7229:7232   */\n      dup4\n        /* \"#utility.yul\":7170:7237   */\n      tag_137\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7163:7237   */\n      swap2\n      pop\n        /* \"#utility.yul\":7246:7339   */\n      tag_232\n        /* \"#utility.yul\":7335:7338   */\n      dup3\n        /* \"#utility.yul\":7246:7339   */\n      tag_138\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":7364:7366   */\n      0x20\n        /* \"#utility.yul\":7359:7362   */\n      dup3\n        /* \"#utility.yul\":7355:7367   */\n      add\n        /* \"#utility.yul\":7348:7367   */\n      swap1\n      pop\n        /* \"#utility.yul\":7007:7373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7379:7798   */\n    tag_87:\n        /* \"#utility.yul\":7545:7549   */\n      0x00\n        /* \"#utility.yul\":7583:7585   */\n      0x20\n        /* \"#utility.yul\":7572:7581   */\n      dup3\n        /* \"#utility.yul\":7568:7586   */\n      add\n        /* \"#utility.yul\":7560:7586   */\n      swap1\n      pop\n        /* \"#utility.yul\":7632:7641   */\n      dup2\n        /* \"#utility.yul\":7626:7630   */\n      dup2\n        /* \"#utility.yul\":7622:7642   */\n      sub\n        /* \"#utility.yul\":7618:7619   */\n      0x00\n        /* \"#utility.yul\":7607:7616   */\n      dup4\n        /* \"#utility.yul\":7603:7620   */\n      add\n        /* \"#utility.yul\":7596:7643   */\n      mstore\n        /* \"#utility.yul\":7660:7791   */\n      tag_234\n        /* \"#utility.yul\":7786:7790   */\n      dup2\n        /* \"#utility.yul\":7660:7791   */\n      tag_139\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":7652:7791   */\n      swap1\n      pop\n        /* \"#utility.yul\":7379:7798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7804:7984   */\n    tag_140:\n        /* \"#utility.yul\":7852:7929   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7849:7850   */\n      0x00\n        /* \"#utility.yul\":7842:7930   */\n      mstore\n        /* \"#utility.yul\":7949:7953   */\n      0x11\n        /* \"#utility.yul\":7946:7947   */\n      0x04\n        /* \"#utility.yul\":7939:7954   */\n      mstore\n        /* \"#utility.yul\":7973:7977   */\n      0x24\n        /* \"#utility.yul\":7970:7971   */\n      0x00\n        /* \"#utility.yul\":7963:7978   */\n      revert\n        /* \"#utility.yul\":7990:8295   */\n    tag_105:\n        /* \"#utility.yul\":8030:8033   */\n      0x00\n        /* \"#utility.yul\":8049:8069   */\n      tag_237\n        /* \"#utility.yul\":8067:8068   */\n      dup3\n        /* \"#utility.yul\":8049:8069   */\n      tag_115\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":8044:8069   */\n      swap2\n      pop\n        /* \"#utility.yul\":8083:8103   */\n      tag_238\n        /* \"#utility.yul\":8101:8102   */\n      dup4\n        /* \"#utility.yul\":8083:8103   */\n      tag_115\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":8078:8103   */\n      swap3\n      pop\n        /* \"#utility.yul\":8237:8238   */\n      dup3\n        /* \"#utility.yul\":8169:8235   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8165:8239   */\n      sub\n        /* \"#utility.yul\":8162:8163   */\n      dup3\n        /* \"#utility.yul\":8159:8240   */\n      gt\n        /* \"#utility.yul\":8156:8263   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":8243:8261   */\n      tag_240\n      tag_140\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":8156:8263   */\n    tag_239:\n        /* \"#utility.yul\":8287:8288   */\n      dup3\n        /* \"#utility.yul\":8284:8285   */\n      dup3\n        /* \"#utility.yul\":8280:8289   */\n      add\n        /* \"#utility.yul\":8273:8289   */\n      swap1\n      pop\n        /* \"#utility.yul\":7990:8295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8301:8481   */\n    tag_141:\n        /* \"#utility.yul\":8349:8426   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8346:8347   */\n      0x00\n        /* \"#utility.yul\":8339:8427   */\n      mstore\n        /* \"#utility.yul\":8446:8450   */\n      0x12\n        /* \"#utility.yul\":8443:8444   */\n      0x04\n        /* \"#utility.yul\":8436:8451   */\n      mstore\n        /* \"#utility.yul\":8470:8474   */\n      0x24\n        /* \"#utility.yul\":8467:8468   */\n      0x00\n        /* \"#utility.yul\":8460:8475   */\n      revert\n        /* \"#utility.yul\":8487:8672   */\n    tag_108:\n        /* \"#utility.yul\":8527:8528   */\n      0x00\n        /* \"#utility.yul\":8544:8564   */\n      tag_243\n        /* \"#utility.yul\":8562:8563   */\n      dup3\n        /* \"#utility.yul\":8544:8564   */\n      tag_115\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":8539:8564   */\n      swap2\n      pop\n        /* \"#utility.yul\":8578:8598   */\n      tag_244\n        /* \"#utility.yul\":8596:8597   */\n      dup4\n        /* \"#utility.yul\":8578:8598   */\n      tag_115\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":8573:8598   */\n      swap3\n      pop\n        /* \"#utility.yul\":8617:8618   */\n      dup3\n        /* \"#utility.yul\":8607:8642   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":8622:8640   */\n      tag_246\n      tag_141\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":8607:8642   */\n    tag_245:\n        /* \"#utility.yul\":8664:8665   */\n      dup3\n        /* \"#utility.yul\":8661:8662   */\n      dup3\n        /* \"#utility.yul\":8657:8666   */\n      div\n        /* \"#utility.yul\":8652:8666   */\n      swap1\n      pop\n        /* \"#utility.yul\":8487:8672   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8678:8869   */\n    tag_111:\n        /* \"#utility.yul\":8718:8722   */\n      0x00\n        /* \"#utility.yul\":8738:8758   */\n      tag_248\n        /* \"#utility.yul\":8756:8757   */\n      dup3\n        /* \"#utility.yul\":8738:8758   */\n      tag_115\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":8733:8758   */\n      swap2\n      pop\n        /* \"#utility.yul\":8772:8792   */\n      tag_249\n        /* \"#utility.yul\":8790:8791   */\n      dup4\n        /* \"#utility.yul\":8772:8792   */\n      tag_115\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":8767:8792   */\n      swap3\n      pop\n        /* \"#utility.yul\":8811:8812   */\n      dup3\n        /* \"#utility.yul\":8808:8809   */\n      dup3\n        /* \"#utility.yul\":8805:8813   */\n      lt\n        /* \"#utility.yul\":8802:8836   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":8816:8834   */\n      tag_251\n      tag_140\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8802:8836   */\n    tag_250:\n        /* \"#utility.yul\":8861:8862   */\n      dup3\n        /* \"#utility.yul\":8858:8859   */\n      dup3\n        /* \"#utility.yul\":8854:8863   */\n      sub\n        /* \"#utility.yul\":8846:8863   */\n      swap1\n      pop\n        /* \"#utility.yul\":8678:8869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202c281707c59e5cb6e1dd3fe5ef42c6276b4be7e0150cf5483c4b17d8d01c22ca64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1088": {
									"entryPoint": null,
									"id": 1088,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 284,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1048:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:1",
														"type": ""
													}
												],
												"src": "545:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "817:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:32:1"
															},
															"nodeType": "YulIf",
															"src": "781:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "910:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "929:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "954:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "741:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "752:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "764:6:1",
														"type": ""
													}
												],
												"src": "694:351:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040527396f76e450f441436221a166ab0c3c73c59849b726000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507396f76e450f441436221a166ab0c3c73c59849b72600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405161111838038061111883398181016040528101906100ce9190610157565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060028190555050610184565b600080fd5b6000819050919050565b61013481610121565b811461013f57600080fd5b50565b6000815190506101518161012b565b92915050565b60006020828403121561016d5761016c61011c565b5b600061017b84828501610142565b91505092915050565b610f85806101936000396000f3fe6080604052600436106100555760003560e01c80633a23bf491461005a57806341a7726a1461009757806394756aa7146100b357806397dedb1d146100dc578063c3c6467414610119578063dac3fad414610142575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190610a82565b610159565b60405161008e9190610abe565b60405180910390f35b6100b160048036038101906100ac9190610b37565b61037a565b005b3480156100bf57600080fd5b506100da60048036038101906100d59190610ba2565b610487565b005b3480156100e857600080fd5b5061010360048036038101906100fe9190610a82565b6105cc565b6040516101109190610abe565b60405180910390f35b34801561012557600080fd5b50610140600480360381019061013b9190610c1a565b6106c5565b005b34801561014e57600080fd5b506101576107b0565b005b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101bb9190610c69565b602060405180830381865afa1580156101d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fc9190610c99565b905060006102138583610a0590919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a49190610c99565b81111561033d5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610316573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033a9190610c99565b90505b600061035482600254610a1b90919063ffffffff16565b9050600061036b8286610a3190919063ffffffff16565b90508095505050505050919050565b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146103d757600080fd5b60006103e2346105cc565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161043f929190610cc6565b6020604051808303816000875af115801561045e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104829190610d04565b505050565b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146104e457600080fd5b60006104ef82610159565b90508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610537573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379cc679084846040518363ffffffff1660e01b8152600401610595929190610d90565b600060405180830381600087803b1580156105af57600080fd5b505af11580156105c3573d6000803e3d6000fd5b50505050505050565b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161062e9190610c69565b602060405180830381865afa15801561064b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066f9190610c99565b905060006106868584610a0590919063ffffffff16565b9050600061069f82600254610a1b90919063ffffffff16565b905060006106b68285610a3190919063ffffffff16565b90508095505050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610755576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074c90610e16565b60405180910390fd5b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610840576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083790610e16565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156108a8573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109619190610c69565b602060405180830381865afa15801561097e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a29190610c99565b6040518363ffffffff1660e01b81526004016109bf929190610cc6565b6020604051808303816000875af11580156109de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a029190610d04565b50565b60008183610a139190610e65565b905092915050565b60008183610a299190610eea565b905092915050565b60008183610a3f9190610f1b565b905092915050565b600080fd5b6000819050919050565b610a5f81610a4c565b8114610a6a57600080fd5b50565b600081359050610a7c81610a56565b92915050565b600060208284031215610a9857610a97610a47565b5b6000610aa684828501610a6d565b91505092915050565b610ab881610a4c565b82525050565b6000602082019050610ad36000830184610aaf565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b0482610ad9565b9050919050565b610b1481610af9565b8114610b1f57600080fd5b50565b600081359050610b3181610b0b565b92915050565b600060208284031215610b4d57610b4c610a47565b5b6000610b5b84828501610b22565b91505092915050565b6000610b6f82610ad9565b9050919050565b610b7f81610b64565b8114610b8a57600080fd5b50565b600081359050610b9c81610b76565b92915050565b60008060408385031215610bb957610bb8610a47565b5b6000610bc785828601610b8d565b9250506020610bd885828601610a6d565b9150509250929050565b60008115159050919050565b610bf781610be2565b8114610c0257600080fd5b50565b600081359050610c1481610bee565b92915050565b60008060408385031215610c3157610c30610a47565b5b6000610c3f85828601610b22565b9250506020610c5085828601610c05565b9150509250929050565b610c6381610af9565b82525050565b6000602082019050610c7e6000830184610c5a565b92915050565b600081519050610c9381610a56565b92915050565b600060208284031215610caf57610cae610a47565b5b6000610cbd84828501610c84565b91505092915050565b6000604082019050610cdb6000830185610c5a565b610ce86020830184610aaf565b9392505050565b600081519050610cfe81610bee565b92915050565b600060208284031215610d1a57610d19610a47565b5b6000610d2884828501610cef565b91505092915050565b6000819050919050565b6000610d56610d51610d4c84610ad9565b610d31565b610ad9565b9050919050565b6000610d6882610d3b565b9050919050565b6000610d7a82610d5d565b9050919050565b610d8a81610d6f565b82525050565b6000604082019050610da56000830185610d81565b610db26020830184610aaf565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e00602083610db9565b9150610e0b82610dca565b602082019050919050565b60006020820190508181036000830152610e2f81610df3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e7082610a4c565b9150610e7b83610a4c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eb057610eaf610e36565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ef582610a4c565b9150610f0083610a4c565b925082610f1057610f0f610ebb565b5b828204905092915050565b6000610f2682610a4c565b9150610f3183610a4c565b925082821015610f4457610f43610e36565b5b82820390509291505056fea26469706673582212202c281707c59e5cb6e1dd3fe5ef42c6276b4be7e0150cf5483c4b17d8d01c22ca64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x96F76E450F441436221A166AB0C3C73C59849B72 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x96F76E450F441436221A166AB0C3C73C59849B72 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0x1118 CODESIZE SUB DUP1 PUSH2 0x1118 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x157 JUMP JUMPDEST CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP PUSH2 0x184 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x134 DUP2 PUSH2 0x121 JUMP JUMPDEST DUP2 EQ PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x151 DUP2 PUSH2 0x12B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D JUMPI PUSH2 0x16C PUSH2 0x11C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17B DUP5 DUP3 DUP6 ADD PUSH2 0x142 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF85 DUP1 PUSH2 0x193 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3A23BF49 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x41A7726A EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x94756AA7 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xDAC3FAD4 EQ PUSH2 0x142 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0xABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0xB37 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x487 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0xABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0xC1A JUMP JUMPDEST PUSH2 0x6C5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x7B0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x213 DUP6 DUP4 PUSH2 0xA05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x280 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x316 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x354 DUP3 PUSH1 0x2 SLOAD PUSH2 0xA1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x36B DUP3 DUP7 PUSH2 0xA31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E2 CALLVALUE PUSH2 0x5CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43F SWAP3 SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x45E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x482 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4EF DUP3 PUSH2 0x159 JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x537 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x79CC6790 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x595 SWAP3 SWAP2 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP2 SWAP1 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x66F SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x686 DUP6 DUP5 PUSH2 0xA05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x69F DUP3 PUSH1 0x2 SLOAD PUSH2 0xA1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6B6 DUP3 DUP6 PUSH2 0xA31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74C SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x840 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x961 SWAP2 SWAP1 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x97E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BF SWAP3 SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA13 SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA3F SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA5F DUP2 PUSH2 0xA4C JUMP JUMPDEST DUP2 EQ PUSH2 0xA6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA7C DUP2 PUSH2 0xA56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA98 JUMPI PUSH2 0xA97 PUSH2 0xA47 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAA6 DUP5 DUP3 DUP6 ADD PUSH2 0xA6D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAB8 DUP2 PUSH2 0xA4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAD3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB04 DUP3 PUSH2 0xAD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB14 DUP2 PUSH2 0xAF9 JUMP JUMPDEST DUP2 EQ PUSH2 0xB1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB31 DUP2 PUSH2 0xB0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4D JUMPI PUSH2 0xB4C PUSH2 0xA47 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB5B DUP5 DUP3 DUP6 ADD PUSH2 0xB22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6F DUP3 PUSH2 0xAD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7F DUP2 PUSH2 0xB64 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB9C DUP2 PUSH2 0xB76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBB9 JUMPI PUSH2 0xBB8 PUSH2 0xA47 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBC7 DUP6 DUP3 DUP7 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBD8 DUP6 DUP3 DUP7 ADD PUSH2 0xA6D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF7 DUP2 PUSH2 0xBE2 JUMP JUMPDEST DUP2 EQ PUSH2 0xC02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC14 DUP2 PUSH2 0xBEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC31 JUMPI PUSH2 0xC30 PUSH2 0xA47 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC3F DUP6 DUP3 DUP7 ADD PUSH2 0xB22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC50 DUP6 DUP3 DUP7 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC63 DUP2 PUSH2 0xAF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC93 DUP2 PUSH2 0xA56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCAF JUMPI PUSH2 0xCAE PUSH2 0xA47 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCBD DUP5 DUP3 DUP6 ADD PUSH2 0xC84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCDB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC5A JUMP JUMPDEST PUSH2 0xCE8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAAF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCFE DUP2 PUSH2 0xBEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1A JUMPI PUSH2 0xD19 PUSH2 0xA47 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD28 DUP5 DUP3 DUP6 ADD PUSH2 0xCEF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD56 PUSH2 0xD51 PUSH2 0xD4C DUP5 PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0xD31 JUMP JUMPDEST PUSH2 0xAD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD68 DUP3 PUSH2 0xD3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7A DUP3 PUSH2 0xD5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8A DUP2 PUSH2 0xD6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDA5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD81 JUMP JUMPDEST PUSH2 0xDB2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAAF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE00 PUSH1 0x20 DUP4 PUSH2 0xDB9 JUMP JUMPDEST SWAP2 POP PUSH2 0xE0B DUP3 PUSH2 0xDCA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE2F DUP2 PUSH2 0xDF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE70 DUP3 PUSH2 0xA4C JUMP JUMPDEST SWAP2 POP PUSH2 0xE7B DUP4 PUSH2 0xA4C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xEB0 JUMPI PUSH2 0xEAF PUSH2 0xE36 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEF5 DUP3 PUSH2 0xA4C JUMP JUMPDEST SWAP2 POP PUSH2 0xF00 DUP4 PUSH2 0xA4C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF10 JUMPI PUSH2 0xF0F PUSH2 0xEBB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF26 DUP3 PUSH2 0xA4C JUMP JUMPDEST SWAP2 POP PUSH2 0xF31 DUP4 PUSH2 0xA4C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xF44 JUMPI PUSH2 0xF43 PUSH2 0xE36 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x28 OR SMOD 0xC5 SWAP15 0x5C 0xB6 0xE1 0xDD EXTCODEHASH 0xE5 0xEF TIMESTAMP 0xC6 0x27 PUSH12 0x4BE7E0150CF5483C4B17D8D0 SHR 0x22 0xCA PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "24917:2047:0:-:0;;;24992:42;24969:66;;;;;;;;;;;;;;;;;;;;25080:42;25039:84;;;;;;;;;;;;;;;;;;;;25150:68;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25191:10;25183:5;;:18;;;;;;;;;;;;;;;;;;25211:2;25207:1;:6;;;;25150:68;24917:2047;;88:117:1;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;24917:2047:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DCF_ETH_1249": {
									"entryPoint": 345,
									"id": 1249,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ETH_DCF_1298": {
									"entryPoint": 1484,
									"id": 1298,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@Warning_protect_1329": {
									"entryPoint": 1968,
									"id": 1329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_196": {
									"entryPoint": 2565,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_241": {
									"entryPoint": 2587,
									"id": 241,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@market_1187": {
									"entryPoint": 1159,
									"id": 1187,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setRouter_1122": {
									"entryPoint": 1733,
									"id": 1122,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_211": {
									"entryPoint": 2609,
									"id": 211,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@subscribe_1151": {
									"entryPoint": 890,
									"id": 1151,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 2957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 3077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 2978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_fromStack": {
									"entryPoint": 3457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3472,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3270,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 2916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_address_payable_to_t_address": {
									"entryPoint": 3439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3638,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3771,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2631,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 3530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 2934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8872:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:1",
														"type": ""
													}
												],
												"src": "1025:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													}
												],
												"src": "1149:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:1",
														"type": ""
													}
												],
												"src": "1377:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:1",
														"type": ""
													}
												],
												"src": "1509:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:1"
															},
															"nodeType": "YulIf",
															"src": "1664:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:1",
														"type": ""
													}
												],
												"src": "1611:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:1",
														"type": ""
													}
												],
												"src": "1739:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1950:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1996:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:32:1"
															},
															"nodeType": "YulIf",
															"src": "1960:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2089:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2133:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1920:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1931:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1943:6:1",
														"type": ""
													}
												],
												"src": "1884:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2272:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2282:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2311:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2293:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2293:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2282:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2254:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2264:7:1",
														"type": ""
													}
												],
												"src": "2219:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2380:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2445:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2454:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2457:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2447:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2447:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2447:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2403:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2436:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "2410:25:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2410:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2400:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2400:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2393:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2393:51:1"
															},
															"nodeType": "YulIf",
															"src": "2390:71:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2373:5:1",
														"type": ""
													}
												],
												"src": "2329:138:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2533:95:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2543:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2565:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2552:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2552:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2543:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2616:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "2581:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2581:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2581:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2511:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2519:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2527:5:1",
														"type": ""
													}
												],
												"src": "2473:155:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2725:399:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2771:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2773:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2773:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2773:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2746:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2755:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2742:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2742:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2767:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2738:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2738:32:1"
															},
															"nodeType": "YulIf",
															"src": "2735:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2864:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2879:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2893:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2883:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2908:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2951:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2962:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2971:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "2918:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2918:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2908:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2999:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3014:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3028:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3018:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3044:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3079:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3090:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3075:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3075:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3099:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3054:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3044:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2687:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2698:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2710:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2718:6:1",
														"type": ""
													}
												],
												"src": "2634:490:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3172:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3182:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3207:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3200:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3200:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3193:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3182:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3154:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3164:7:1",
														"type": ""
													}
												],
												"src": "3130:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3266:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3320:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3329:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3332:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3322:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3322:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3322:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3289:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3311:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "3296:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3296:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3286:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3286:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3279:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3279:40:1"
															},
															"nodeType": "YulIf",
															"src": "3276:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3259:5:1",
														"type": ""
													}
												],
												"src": "3226:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3397:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3407:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3416:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3416:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3407:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3469:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3445:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3445:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3445:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3375:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3383:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3391:5:1",
														"type": ""
													}
												],
												"src": "3348:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3567:388:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3613:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3615:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3615:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3615:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3588:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3597:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3584:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3584:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3609:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3580:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3580:32:1"
															},
															"nodeType": "YulIf",
															"src": "3577:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3706:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3721:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3735:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3725:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3750:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3785:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3796:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3781:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3781:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3805:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3760:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3760:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3750:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3833:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3848:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3862:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3852:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3878:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3910:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3921:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3906:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3906:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3930:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3888:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3888:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3878:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3529:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3540:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3552:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3560:6:1",
														"type": ""
													}
												],
												"src": "3487:468:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4026:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4043:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4066:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4048:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4048:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4036:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4036:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4036:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4014:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4021:3:1",
														"type": ""
													}
												],
												"src": "3961:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4183:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4193:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4205:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4216:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4201:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4201:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4193:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4273:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4286:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4297:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4282:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4282:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4229:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4229:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4229:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4155:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4167:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4178:4:1",
														"type": ""
													}
												],
												"src": "4085:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4376:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4386:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4401:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4395:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4395:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4386:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4444:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4417:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4417:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4417:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4354:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4362:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4370:5:1",
														"type": ""
													}
												],
												"src": "4313:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4539:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4585:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4587:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4587:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4587:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4560:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4569:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4556:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4556:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4581:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4552:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4552:32:1"
															},
															"nodeType": "YulIf",
															"src": "4549:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4678:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4693:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4707:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4697:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4722:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4768:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4779:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4764:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4764:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4788:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4732:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4732:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4722:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4509:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4520:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4532:6:1",
														"type": ""
													}
												],
												"src": "4462:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4945:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4955:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4967:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4978:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4963:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4963:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4955:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5035:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5048:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5059:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5044:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5044:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4991:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4991:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4991:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5116:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5129:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5140:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5125:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5072:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5072:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5072:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4909:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4921:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4929:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4940:4:1",
														"type": ""
													}
												],
												"src": "4819:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5217:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5227:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5242:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5236:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5236:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5227:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5282:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5258:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5258:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5258:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5195:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5203:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5211:5:1",
														"type": ""
													}
												],
												"src": "5157:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5374:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5420:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5422:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5422:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5422:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5395:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5404:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5391:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5391:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5416:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5387:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5387:32:1"
															},
															"nodeType": "YulIf",
															"src": "5384:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5513:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5528:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5542:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5532:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5557:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5600:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5611:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5596:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5596:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5620:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5567:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5567:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5557:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5344:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5355:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5367:6:1",
														"type": ""
													}
												],
												"src": "5300:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5683:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5693:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5700:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5693:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5669:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5679:3:1",
														"type": ""
													}
												],
												"src": "5651:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5777:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5787:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5845:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "5827:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5827:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5818:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5818:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5800:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5800:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5787:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5757:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5767:9:1",
														"type": ""
													}
												],
												"src": "5717:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5925:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5935:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5979:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5948:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5948:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5935:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5905:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5915:9:1",
														"type": ""
													}
												],
												"src": "5865:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6065:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6075:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6119:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6088:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6088:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6075:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_address_payable_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6045:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6055:9:1",
														"type": ""
													}
												],
												"src": "5997:134:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6210:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6227:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6271:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_address_payable_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6232:38:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6232:45:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6220:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6220:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6220:58:1"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6198:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6205:3:1",
														"type": ""
													}
												],
												"src": "6137:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6424:214:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6434:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6446:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6457:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6442:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6442:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6434:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6522:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6535:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6546:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6531:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6531:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6470:51:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6470:79:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6470:79:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6603:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6616:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6627:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6612:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6612:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6559:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6559:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6559:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6388:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6400:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6408:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6419:4:1",
														"type": ""
													}
												],
												"src": "6290:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6740:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6757:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6762:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6750:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6750:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6778:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6797:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6802:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6793:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6793:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6778:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6712:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6717:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6728:11:1",
														"type": ""
													}
												],
												"src": "6644:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6925:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6947:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6955:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6943:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6943:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6959:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6936:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6936:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6936:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6917:6:1",
														"type": ""
													}
												],
												"src": "6819:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7153:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7163:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7229:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7234:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7170:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7170:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7163:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7335:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "7246:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7246:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7246:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7348:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7359:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7364:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7355:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7355:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7348:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7141:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7149:3:1",
														"type": ""
													}
												],
												"src": "7007:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7550:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7560:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7572:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7583:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7568:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7568:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7560:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7607:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7618:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7603:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7603:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7626:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7632:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7622:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7622:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7596:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7596:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7596:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7652:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7786:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7660:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7660:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7652:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7530:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7545:4:1",
														"type": ""
													}
												],
												"src": "7379:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7832:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7849:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7852:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7842:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7842:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7842:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7946:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7949:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7939:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7939:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7939:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7970:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7973:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7963:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7963:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7963:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7804:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8034:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8044:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8067:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8049:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8049:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8044:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8078:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8101:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8083:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8083:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8078:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8241:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8243:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8243:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8243:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8162:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8169:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8237:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8165:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8165:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8159:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8159:81:1"
															},
															"nodeType": "YulIf",
															"src": "8156:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8273:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8284:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8287:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8280:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8280:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8273:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8021:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8024:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8030:3:1",
														"type": ""
													}
												],
												"src": "7990:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8329:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8346:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8349:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8339:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8339:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8339:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8443:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8446:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8436:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8436:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8436:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8467:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8470:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8460:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8460:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8460:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "8301:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8529:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8539:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8562:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8544:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8544:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8539:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8573:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8596:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8578:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8578:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8573:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8620:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8622:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8622:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8622:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8617:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8610:9:1"
															},
															"nodeType": "YulIf",
															"src": "8607:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8652:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8661:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8664:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8657:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8657:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8652:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8518:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8521:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8527:1:1",
														"type": ""
													}
												],
												"src": "8487:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8723:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8733:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8756:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8738:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8738:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8733:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8767:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8790:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8772:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8767:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8814:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8816:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8816:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8816:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8808:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8811:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8805:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8805:8:1"
															},
															"nodeType": "YulIf",
															"src": "8802:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8846:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8858:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8861:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8854:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8854:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8846:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8709:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8712:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8718:4:1",
														"type": ""
													}
												],
												"src": "8678:191:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100555760003560e01c80633a23bf491461005a57806341a7726a1461009757806394756aa7146100b357806397dedb1d146100dc578063c3c6467414610119578063dac3fad414610142575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190610a82565b610159565b60405161008e9190610abe565b60405180910390f35b6100b160048036038101906100ac9190610b37565b61037a565b005b3480156100bf57600080fd5b506100da60048036038101906100d59190610ba2565b610487565b005b3480156100e857600080fd5b5061010360048036038101906100fe9190610a82565b6105cc565b6040516101109190610abe565b60405180910390f35b34801561012557600080fd5b50610140600480360381019061013b9190610c1a565b6106c5565b005b34801561014e57600080fd5b506101576107b0565b005b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101bb9190610c69565b602060405180830381865afa1580156101d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fc9190610c99565b905060006102138583610a0590919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a49190610c99565b81111561033d5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610316573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033a9190610c99565b90505b600061035482600254610a1b90919063ffffffff16565b9050600061036b8286610a3190919063ffffffff16565b90508095505050505050919050565b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146103d757600080fd5b60006103e2346105cc565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161043f929190610cc6565b6020604051808303816000875af115801561045e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104829190610d04565b505050565b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146104e457600080fd5b60006104ef82610159565b90508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610537573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379cc679084846040518363ffffffff1660e01b8152600401610595929190610d90565b600060405180830381600087803b1580156105af57600080fd5b505af11580156105c3573d6000803e3d6000fd5b50505050505050565b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161062e9190610c69565b602060405180830381865afa15801561064b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066f9190610c99565b905060006106868584610a0590919063ffffffff16565b9050600061069f82600254610a1b90919063ffffffff16565b905060006106b68285610a3190919063ffffffff16565b90508095505050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610755576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074c90610e16565b60405180910390fd5b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610840576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083790610e16565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156108a8573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109619190610c69565b602060405180830381865afa15801561097e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a29190610c99565b6040518363ffffffff1660e01b81526004016109bf929190610cc6565b6020604051808303816000875af11580156109de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a029190610d04565b50565b60008183610a139190610e65565b905092915050565b60008183610a299190610eea565b905092915050565b60008183610a3f9190610f1b565b905092915050565b600080fd5b6000819050919050565b610a5f81610a4c565b8114610a6a57600080fd5b50565b600081359050610a7c81610a56565b92915050565b600060208284031215610a9857610a97610a47565b5b6000610aa684828501610a6d565b91505092915050565b610ab881610a4c565b82525050565b6000602082019050610ad36000830184610aaf565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b0482610ad9565b9050919050565b610b1481610af9565b8114610b1f57600080fd5b50565b600081359050610b3181610b0b565b92915050565b600060208284031215610b4d57610b4c610a47565b5b6000610b5b84828501610b22565b91505092915050565b6000610b6f82610ad9565b9050919050565b610b7f81610b64565b8114610b8a57600080fd5b50565b600081359050610b9c81610b76565b92915050565b60008060408385031215610bb957610bb8610a47565b5b6000610bc785828601610b8d565b9250506020610bd885828601610a6d565b9150509250929050565b60008115159050919050565b610bf781610be2565b8114610c0257600080fd5b50565b600081359050610c1481610bee565b92915050565b60008060408385031215610c3157610c30610a47565b5b6000610c3f85828601610b22565b9250506020610c5085828601610c05565b9150509250929050565b610c6381610af9565b82525050565b6000602082019050610c7e6000830184610c5a565b92915050565b600081519050610c9381610a56565b92915050565b600060208284031215610caf57610cae610a47565b5b6000610cbd84828501610c84565b91505092915050565b6000604082019050610cdb6000830185610c5a565b610ce86020830184610aaf565b9392505050565b600081519050610cfe81610bee565b92915050565b600060208284031215610d1a57610d19610a47565b5b6000610d2884828501610cef565b91505092915050565b6000819050919050565b6000610d56610d51610d4c84610ad9565b610d31565b610ad9565b9050919050565b6000610d6882610d3b565b9050919050565b6000610d7a82610d5d565b9050919050565b610d8a81610d6f565b82525050565b6000604082019050610da56000830185610d81565b610db26020830184610aaf565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610e00602083610db9565b9150610e0b82610dca565b602082019050919050565b60006020820190508181036000830152610e2f81610df3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e7082610a4c565b9150610e7b83610a4c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eb057610eaf610e36565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ef582610a4c565b9150610f0083610a4c565b925082610f1057610f0f610ebb565b5b828204905092915050565b6000610f2682610a4c565b9150610f3183610a4c565b925082821015610f4457610f43610e36565b5b82820390509291505056fea26469706673582212202c281707c59e5cb6e1dd3fe5ef42c6276b4be7e0150cf5483c4b17d8d01c22ca64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3A23BF49 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x41A7726A EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x94756AA7 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xDAC3FAD4 EQ PUSH2 0x142 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0xABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0xB37 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x487 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0xABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0xC1A JUMP JUMPDEST PUSH2 0x6C5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x7B0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x213 DUP6 DUP4 PUSH2 0xA05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x280 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x316 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x354 DUP3 PUSH1 0x2 SLOAD PUSH2 0xA1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x36B DUP3 DUP7 PUSH2 0xA31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E2 CALLVALUE PUSH2 0x5CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43F SWAP3 SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x45E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x482 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4EF DUP3 PUSH2 0x159 JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x537 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x79CC6790 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x595 SWAP3 SWAP2 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP2 SWAP1 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x66F SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x686 DUP6 DUP5 PUSH2 0xA05 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x69F DUP3 PUSH1 0x2 SLOAD PUSH2 0xA1B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6B6 DUP3 DUP6 PUSH2 0xA31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74C SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x840 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x961 SWAP2 SWAP1 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x97E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BF SWAP3 SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0xD04 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA13 SWAP2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA3F SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA5F DUP2 PUSH2 0xA4C JUMP JUMPDEST DUP2 EQ PUSH2 0xA6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA7C DUP2 PUSH2 0xA56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA98 JUMPI PUSH2 0xA97 PUSH2 0xA47 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAA6 DUP5 DUP3 DUP6 ADD PUSH2 0xA6D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAB8 DUP2 PUSH2 0xA4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAD3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB04 DUP3 PUSH2 0xAD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB14 DUP2 PUSH2 0xAF9 JUMP JUMPDEST DUP2 EQ PUSH2 0xB1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB31 DUP2 PUSH2 0xB0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4D JUMPI PUSH2 0xB4C PUSH2 0xA47 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB5B DUP5 DUP3 DUP6 ADD PUSH2 0xB22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6F DUP3 PUSH2 0xAD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7F DUP2 PUSH2 0xB64 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB9C DUP2 PUSH2 0xB76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBB9 JUMPI PUSH2 0xBB8 PUSH2 0xA47 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBC7 DUP6 DUP3 DUP7 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBD8 DUP6 DUP3 DUP7 ADD PUSH2 0xA6D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF7 DUP2 PUSH2 0xBE2 JUMP JUMPDEST DUP2 EQ PUSH2 0xC02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC14 DUP2 PUSH2 0xBEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC31 JUMPI PUSH2 0xC30 PUSH2 0xA47 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC3F DUP6 DUP3 DUP7 ADD PUSH2 0xB22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC50 DUP6 DUP3 DUP7 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC63 DUP2 PUSH2 0xAF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC93 DUP2 PUSH2 0xA56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCAF JUMPI PUSH2 0xCAE PUSH2 0xA47 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCBD DUP5 DUP3 DUP6 ADD PUSH2 0xC84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCDB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC5A JUMP JUMPDEST PUSH2 0xCE8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAAF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCFE DUP2 PUSH2 0xBEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1A JUMPI PUSH2 0xD19 PUSH2 0xA47 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD28 DUP5 DUP3 DUP6 ADD PUSH2 0xCEF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD56 PUSH2 0xD51 PUSH2 0xD4C DUP5 PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0xD31 JUMP JUMPDEST PUSH2 0xAD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD68 DUP3 PUSH2 0xD3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7A DUP3 PUSH2 0xD5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8A DUP2 PUSH2 0xD6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDA5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD81 JUMP JUMPDEST PUSH2 0xDB2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAAF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE00 PUSH1 0x20 DUP4 PUSH2 0xDB9 JUMP JUMPDEST SWAP2 POP PUSH2 0xE0B DUP3 PUSH2 0xDCA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE2F DUP2 PUSH2 0xDF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE70 DUP3 PUSH2 0xA4C JUMP JUMPDEST SWAP2 POP PUSH2 0xE7B DUP4 PUSH2 0xA4C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xEB0 JUMPI PUSH2 0xEAF PUSH2 0xE36 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEF5 DUP3 PUSH2 0xA4C JUMP JUMPDEST SWAP2 POP PUSH2 0xF00 DUP4 PUSH2 0xA4C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF10 JUMPI PUSH2 0xF0F PUSH2 0xEBB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF26 DUP3 PUSH2 0xA4C JUMP JUMPDEST SWAP2 POP PUSH2 0xF31 DUP4 PUSH2 0xA4C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xF44 JUMPI PUSH2 0xF43 PUSH2 0xE36 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x28 OR SMOD 0xC5 SWAP15 0x5C 0xB6 0xE1 0xDD EXTCODEHASH 0xE5 0xEF TIMESTAMP 0xC6 0x27 PUSH12 0x4BE7E0150CF5483C4B17D8D0 SHR 0x22 0xCA PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "24917:2047:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25980:449;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25508:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;25713:262;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;26434:351;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25405:98;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;26790:159;;;;;;;;;;;;;:::i;:::-;;25980:449;26036:7;26050:19;26072:21;26050:43;;26099:19;26121:5;;;;;;;;;;;:15;;;26145:4;26121:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26099:52;;26161:20;26184:27;26200:10;26184:11;:15;;:27;;;;:::i;:::-;26161:50;;26236:5;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26221:12;:34;26218:87;;;26279:5;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26264:34;;26218:87;26311:20;26334:19;26340:12;26334:1;;:5;;:19;;;;:::i;:::-;26311:42;;26359:14;26376:29;26392:12;26376:11;:15;;:29;;;;:::i;:::-;26359:46;;26418:6;26411:13;;;;;;;25980:449;;;:::o;25508:200::-;25605:4;25578:31;;:11;:23;25590:10;25578:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;25570:40;;;;;;25618:18;25639;25647:9;25639:7;:18::i;:::-;25618:39;;25665:5;;;;;;;;;;:14;;;25680:10;25691;25665:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;25562:146;25508:200;:::o;25713:262::-;25824:4;25797:31;;:11;:23;25809:10;25797:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;25789:40;;;;;;25837:18;25858:19;25866:10;25858:7;:19::i;:::-;25837:40;;25885:6;:15;;:27;25901:10;25885:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25920:10;;;;;;;;;;;:19;;;25940:6;25947:10;25920:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25781:194;25713:262;;:::o;26434:351::-;26490:7;26504:19;26526:21;26504:43;;26553:19;26575:5;;;;;;;;;;;:15;;;26599:4;26575:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26553:52;;26611:20;26634:27;26650:10;26634:11;:15;;:27;;;;:::i;:::-;26611:50;;26667:20;26690:19;26696:12;26690:1;;:5;;:19;;;;:::i;:::-;26667:42;;26715:14;26732:29;26748:12;26732:11;:15;;:29;;;;:::i;:::-;26715:46;;26774:6;26767:13;;;;;;;26434:351;;;:::o;25405:98::-;25335:10;25326:19;;:5;;;;;;;;;;;:19;;;25318:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;25493:5:::1;25473:11;:17;25485:4;25473:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;25405:98:::0;;:::o;26790:159::-;25335:10;25326:19;;:5;;;;;;;;;;;:19;;;25318:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;26848:5:::1;;;;;;;;;;;26840:23;;:46;26864:21;26840:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;26892:5;::::0;::::1;;;;;;;;:14;;;26907:5;;;;;;;;;;;26913;::::0;::::1;;;;;;;;:15;;;26937:4;26913:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26892:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;26790:159::o:0;3649:96::-;3707:7;3737:1;3733;:5;;;;:::i;:::-;3726:12;;3649:96;;;;:::o;4744:::-;4802:7;4832:1;4828;:5;;;;:::i;:::-;4821:12;;4744:96;;;;:::o;4016:::-;4074:7;4104:1;4100;:5;;;;:::i;:::-;4093:12;;4016:96;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:104::-;2264:7;2293:24;2311:5;2293:24;:::i;:::-;2282:35;;2219:104;;;:::o;2329:138::-;2410:32;2436:5;2410:32;:::i;:::-;2403:5;2400:43;2390:71;;2457:1;2454;2447:12;2390:71;2329:138;:::o;2473:155::-;2527:5;2565:6;2552:20;2543:29;;2581:41;2616:5;2581:41;:::i;:::-;2473:155;;;;:::o;2634:490::-;2710:6;2718;2767:2;2755:9;2746:7;2742:23;2738:32;2735:119;;;2773:79;;:::i;:::-;2735:119;2893:1;2918:61;2971:7;2962:6;2951:9;2947:22;2918:61;:::i;:::-;2908:71;;2864:125;3028:2;3054:53;3099:7;3090:6;3079:9;3075:22;3054:53;:::i;:::-;3044:63;;2999:118;2634:490;;;;;:::o;3130:90::-;3164:7;3207:5;3200:13;3193:21;3182:32;;3130:90;;;:::o;3226:116::-;3296:21;3311:5;3296:21;:::i;:::-;3289:5;3286:32;3276:60;;3332:1;3329;3322:12;3276:60;3226:116;:::o;3348:133::-;3391:5;3429:6;3416:20;3407:29;;3445:30;3469:5;3445:30;:::i;:::-;3348:133;;;;:::o;3487:468::-;3552:6;3560;3609:2;3597:9;3588:7;3584:23;3580:32;3577:119;;;3615:79;;:::i;:::-;3577:119;3735:1;3760:53;3805:7;3796:6;3785:9;3781:22;3760:53;:::i;:::-;3750:63;;3706:117;3862:2;3888:50;3930:7;3921:6;3910:9;3906:22;3888:50;:::i;:::-;3878:60;;3833:115;3487:468;;;;;:::o;3961:118::-;4048:24;4066:5;4048:24;:::i;:::-;4043:3;4036:37;3961:118;;:::o;4085:222::-;4178:4;4216:2;4205:9;4201:18;4193:26;;4229:71;4297:1;4286:9;4282:17;4273:6;4229:71;:::i;:::-;4085:222;;;;:::o;4313:143::-;4370:5;4401:6;4395:13;4386:22;;4417:33;4444:5;4417:33;:::i;:::-;4313:143;;;;:::o;4462:351::-;4532:6;4581:2;4569:9;4560:7;4556:23;4552:32;4549:119;;;4587:79;;:::i;:::-;4549:119;4707:1;4732:64;4788:7;4779:6;4768:9;4764:22;4732:64;:::i;:::-;4722:74;;4678:128;4462:351;;;;:::o;4819:332::-;4940:4;4978:2;4967:9;4963:18;4955:26;;4991:71;5059:1;5048:9;5044:17;5035:6;4991:71;:::i;:::-;5072:72;5140:2;5129:9;5125:18;5116:6;5072:72;:::i;:::-;4819:332;;;;;:::o;5157:137::-;5211:5;5242:6;5236:13;5227:22;;5258:30;5282:5;5258:30;:::i;:::-;5157:137;;;;:::o;5300:345::-;5367:6;5416:2;5404:9;5395:7;5391:23;5387:32;5384:119;;;5422:79;;:::i;:::-;5384:119;5542:1;5567:61;5620:7;5611:6;5600:9;5596:22;5567:61;:::i;:::-;5557:71;;5513:125;5300:345;;;;:::o;5651:60::-;5679:3;5700:5;5693:12;;5651:60;;;:::o;5717:142::-;5767:9;5800:53;5818:34;5827:24;5845:5;5827:24;:::i;:::-;5818:34;:::i;:::-;5800:53;:::i;:::-;5787:66;;5717:142;;;:::o;5865:126::-;5915:9;5948:37;5979:5;5948:37;:::i;:::-;5935:50;;5865:126;;;:::o;5997:134::-;6055:9;6088:37;6119:5;6088:37;:::i;:::-;6075:50;;5997:134;;;:::o;6137:147::-;6232:45;6271:5;6232:45;:::i;:::-;6227:3;6220:58;6137:147;;:::o;6290:348::-;6419:4;6457:2;6446:9;6442:18;6434:26;;6470:79;6546:1;6535:9;6531:17;6522:6;6470:79;:::i;:::-;6559:72;6627:2;6616:9;6612:18;6603:6;6559:72;:::i;:::-;6290:348;;;;;:::o;6644:169::-;6728:11;6762:6;6757:3;6750:19;6802:4;6797:3;6793:14;6778:29;;6644:169;;;;:::o;6819:182::-;6959:34;6955:1;6947:6;6943:14;6936:58;6819:182;:::o;7007:366::-;7149:3;7170:67;7234:2;7229:3;7170:67;:::i;:::-;7163:74;;7246:93;7335:3;7246:93;:::i;:::-;7364:2;7359:3;7355:12;7348:19;;7007:366;;;:::o;7379:419::-;7545:4;7583:2;7572:9;7568:18;7560:26;;7632:9;7626:4;7622:20;7618:1;7607:9;7603:17;7596:47;7660:131;7786:4;7660:131;:::i;:::-;7652:139;;7379:419;;;:::o;7804:180::-;7852:77;7849:1;7842:88;7949:4;7946:1;7939:15;7973:4;7970:1;7963:15;7990:305;8030:3;8049:20;8067:1;8049:20;:::i;:::-;8044:25;;8083:20;8101:1;8083:20;:::i;:::-;8078:25;;8237:1;8169:66;8165:74;8162:1;8159:81;8156:107;;;8243:18;;:::i;:::-;8156:107;8287:1;8284;8280:9;8273:16;;7990:305;;;;:::o;8301:180::-;8349:77;8346:1;8339:88;8446:4;8443:1;8436:15;8470:4;8467:1;8460:15;8487:185;8527:1;8544:20;8562:1;8544:20;:::i;:::-;8539:25;;8578:20;8596:1;8578:20;:::i;:::-;8573:25;;8617:1;8607:35;;8622:18;;:::i;:::-;8607:35;8664:1;8661;8657:9;8652:14;;8487:185;;;;:::o;8678:191::-;8718:4;8738:20;8756:1;8738:20;:::i;:::-;8733:25;;8772:20;8790:1;8772:20;:::i;:::-;8767:25;;8811:1;8808;8805:8;8802:34;;;8816:18;;:::i;:::-;8802:34;8861:1;8858;8854:9;8846:17;;8678:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "794600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DCF_ETH(uint256)": "infinite",
								"ETH_DCF(uint256)": "infinite",
								"Warning_protect()": "infinite",
								"market(address,uint256)": "infinite",
								"setRouter(address,bool)": "27227",
								"subscribe(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24917,
									"end": 26964,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 24917,
									"end": 26964,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24917,
									"end": 26964,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24992,
									"end": 25034,
									"name": "PUSH",
									"source": 0,
									"value": "96F76E450F441436221A166AB0C3C73C59849B72"
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24969,
									"end": 25035,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25080,
									"end": 25122,
									"name": "PUSH",
									"source": 0,
									"value": "96F76E450F441436221A166AB0C3C73C59849B72"
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25039,
									"end": 25123,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25150,
									"end": 25218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25191,
									"end": 25201,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 25183,
									"end": 25188,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 25183,
									"end": 25188,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25183,
									"end": 25201,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25183,
									"end": 25201,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25183,
									"end": 25201,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25183,
									"end": 25201,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25183,
									"end": 25201,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25183,
									"end": 25201,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25183,
									"end": 25201,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25183,
									"end": 25201,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 25183,
									"end": 25201,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25183,
									"end": 25201,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25183,
									"end": 25201,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25183,
									"end": 25201,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25183,
									"end": 25201,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25183,
									"end": 25201,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25183,
									"end": 25201,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25183,
									"end": 25201,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25183,
									"end": 25201,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25183,
									"end": 25201,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25211,
									"end": 25213,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25207,
									"end": 25208,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25207,
									"end": 25213,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25207,
									"end": 25213,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25207,
									"end": 25213,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25207,
									"end": 25213,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25150,
									"end": 25218,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24917,
									"end": 26964,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24917,
									"end": 26964,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 24917,
									"end": 26964,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24917,
									"end": 26964,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24917,
									"end": 26964,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24917,
									"end": 26964,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24917,
									"end": 26964,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24917,
									"end": 26964,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24917,
									"end": 26964,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24917,
									"end": 26964,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24917,
									"end": 26964,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c281707c59e5cb6e1dd3fe5ef42c6276b4be7e0150cf5483c4b17d8d01c22ca64736f6c634300080e0033",
									".code": [
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH",
											"source": 0,
											"value": "3A23BF49"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH",
											"source": 0,
											"value": "41A7726A"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH",
											"source": 0,
											"value": "94756AA7"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH",
											"source": 0,
											"value": "97DEDB1D"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH",
											"source": 0,
											"value": "C3C64674"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH",
											"source": 0,
											"value": "DAC3FAD4"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24917,
											"end": 26964,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25980,
											"end": 26429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25980,
											"end": 26429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 25980,
											"end": 26429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 25508,
											"end": 25708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 25508,
											"end": 25708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 25713,
											"end": 25975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 25713,
											"end": 25975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 26434,
											"end": 26785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 26434,
											"end": 26785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26434,
											"end": 26785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 25405,
											"end": 25503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 25405,
											"end": 25503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 26790,
											"end": 26949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26036,
											"end": 26043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26050,
											"end": 26069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26072,
											"end": 26093,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 26050,
											"end": 26093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26050,
											"end": 26093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26099,
											"end": 26118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26121,
											"end": 26126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26121,
											"end": 26126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26126,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26121,
											"end": 26126,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26121,
											"end": 26126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26121,
											"end": 26136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26136,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 26145,
											"end": 26149,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 26121,
											"end": 26151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26121,
											"end": 26151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 26121,
											"end": 26151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26099,
											"end": 26151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26099,
											"end": 26151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26161,
											"end": 26181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26184,
											"end": 26211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26200,
											"end": 26210,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 26195,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 26199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 26184,
											"end": 26199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 26211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 26211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 26211,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26184,
											"end": 26211,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 26211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 26211,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26184,
											"end": 26211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26161,
											"end": 26211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26161,
											"end": 26211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26236,
											"end": 26241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26241,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26236,
											"end": 26241,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26241,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26236,
											"end": 26241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26253,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26236,
											"end": 26253,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26253,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26236,
											"end": 26255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 26236,
											"end": 26255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26221,
											"end": 26233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26221,
											"end": 26255,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 26218,
											"end": 26305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26279,
											"end": 26284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26284,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26279,
											"end": 26284,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26284,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26284,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26279,
											"end": 26284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26296,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26279,
											"end": 26296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26296,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26279,
											"end": 26298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 26279,
											"end": 26298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26264,
											"end": 26298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26264,
											"end": 26298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26305,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 26218,
											"end": 26305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26311,
											"end": 26331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26334,
											"end": 26353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 26340,
											"end": 26352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26334,
											"end": 26335,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26334,
											"end": 26335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26334,
											"end": 26339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 26334,
											"end": 26339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26334,
											"end": 26353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26334,
											"end": 26353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26334,
											"end": 26353,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26334,
											"end": 26353,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26334,
											"end": 26353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26334,
											"end": 26353,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 26334,
											"end": 26353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26311,
											"end": 26353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26311,
											"end": 26353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26359,
											"end": 26373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26376,
											"end": 26405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 26392,
											"end": 26404,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26387,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 26376,
											"end": 26391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26376,
											"end": 26405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26405,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 26376,
											"end": 26405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26359,
											"end": 26405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26359,
											"end": 26405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26418,
											"end": 26424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26411,
											"end": 26424,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 26411,
											"end": 26424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26411,
											"end": 26424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26411,
											"end": 26424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26411,
											"end": 26424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26411,
											"end": 26424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26411,
											"end": 26424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25980,
											"end": 26429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25605,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25578,
											"end": 25609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25589,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25590,
											"end": 25600,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25578,
											"end": 25601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25578,
											"end": 25609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25570,
											"end": 25610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 25570,
											"end": 25610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25570,
											"end": 25610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25570,
											"end": 25610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25570,
											"end": 25610,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25570,
											"end": 25610,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 25570,
											"end": 25610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25618,
											"end": 25636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25639,
											"end": 25657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 25647,
											"end": 25656,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25639,
											"end": 25646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 25639,
											"end": 25657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25639,
											"end": 25657,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 25639,
											"end": 25657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25618,
											"end": 25657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25618,
											"end": 25657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25665,
											"end": 25670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25670,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25670,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25665,
											"end": 25670,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25670,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25665,
											"end": 25670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25679,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25665,
											"end": 25679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25679,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 25680,
											"end": 25690,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25691,
											"end": 25701,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 25665,
											"end": 25702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 25665,
											"end": 25702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25665,
											"end": 25702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25562,
											"end": 25708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25508,
											"end": 25708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25508,
											"end": 25708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25824,
											"end": 25828,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25797,
											"end": 25828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25809,
											"end": 25819,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25797,
											"end": 25820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 25828,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25789,
											"end": 25829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 25789,
											"end": 25829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25789,
											"end": 25829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25789,
											"end": 25829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25789,
											"end": 25829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25789,
											"end": 25829,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 25789,
											"end": 25829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25837,
											"end": 25855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25858,
											"end": 25877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 25866,
											"end": 25876,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25858,
											"end": 25865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25858,
											"end": 25877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25858,
											"end": 25877,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 25858,
											"end": 25877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25837,
											"end": 25877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25837,
											"end": 25877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25891,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25900,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25885,
											"end": 25900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 25901,
											"end": 25911,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25885,
											"end": 25912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25930,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25920,
											"end": 25930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25920,
											"end": 25930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25930,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25930,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25920,
											"end": 25930,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25930,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25930,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25920,
											"end": 25930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25939,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25920,
											"end": 25939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25939,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 25940,
											"end": 25946,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 25957,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 25920,
											"end": 25958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25920,
											"end": 25958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25781,
											"end": 25975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25713,
											"end": 25975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26490,
											"end": 26497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26504,
											"end": 26523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26526,
											"end": 26547,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 26504,
											"end": 26547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26504,
											"end": 26547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26553,
											"end": 26572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26575,
											"end": 26580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26575,
											"end": 26580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26580,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26580,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26575,
											"end": 26580,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26580,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26580,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26575,
											"end": 26580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26590,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26575,
											"end": 26590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26590,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 26599,
											"end": 26603,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 26575,
											"end": 26605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26575,
											"end": 26605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26575,
											"end": 26605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26553,
											"end": 26605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26553,
											"end": 26605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26611,
											"end": 26631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26634,
											"end": 26661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 26650,
											"end": 26660,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26634,
											"end": 26645,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26634,
											"end": 26649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 26634,
											"end": 26649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26634,
											"end": 26661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26634,
											"end": 26661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26634,
											"end": 26661,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26634,
											"end": 26661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26634,
											"end": 26661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26634,
											"end": 26661,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 26634,
											"end": 26661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26611,
											"end": 26661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26611,
											"end": 26661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26667,
											"end": 26687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26690,
											"end": 26709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 26696,
											"end": 26708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26690,
											"end": 26691,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26690,
											"end": 26691,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26690,
											"end": 26695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 26690,
											"end": 26695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26690,
											"end": 26709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26690,
											"end": 26709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26690,
											"end": 26709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26690,
											"end": 26709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26690,
											"end": 26709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26690,
											"end": 26709,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 26690,
											"end": 26709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26667,
											"end": 26709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26667,
											"end": 26709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26715,
											"end": 26729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26732,
											"end": 26761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 26748,
											"end": 26760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 26732,
											"end": 26747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26732,
											"end": 26761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26761,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 26732,
											"end": 26761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26715,
											"end": 26761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26715,
											"end": 26761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26774,
											"end": 26780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26767,
											"end": 26780,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 26767,
											"end": 26780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26767,
											"end": 26780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26767,
											"end": 26780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26767,
											"end": 26780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26767,
											"end": 26780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26767,
											"end": 26780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25345,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25345,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25326,
											"end": 25345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25345,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25326,
											"end": 25345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25345,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 25318,
											"end": 25382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25493,
											"end": 25498,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25473,
											"end": 25490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25485,
											"end": 25489,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25473,
											"end": 25490,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25473,
											"end": 25490,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25490,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25490,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25473,
											"end": 25490,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25490,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25490,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25490,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25473,
											"end": 25490,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25473,
											"end": 25490,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25473,
											"end": 25498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25473,
											"end": 25498,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25498,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25498,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25498,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25473,
											"end": 25498,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25498,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25498,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25498,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25498,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25498,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25498,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25498,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25498,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25473,
											"end": 25498,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 26790,
											"end": 26949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25335,
											"end": 25345,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25345,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25326,
											"end": 25345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25326,
											"end": 25331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25345,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25326,
											"end": 25345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25326,
											"end": 25345,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 25318,
											"end": 25382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 25318,
											"end": 25382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26848,
											"end": 26853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26848,
											"end": 26853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26848,
											"end": 26853,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26848,
											"end": 26853,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26848,
											"end": 26853,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26848,
											"end": 26853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26848,
											"end": 26853,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26848,
											"end": 26853,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26848,
											"end": 26853,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26848,
											"end": 26853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26848,
											"end": 26853,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26840,
											"end": 26863,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 26864,
											"end": 26885,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26840,
											"end": 26886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26840,
											"end": 26886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26892,
											"end": 26897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26897,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26897,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26892,
											"end": 26897,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26897,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26897,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26892,
											"end": 26897,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26892,
											"end": 26906,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 26907,
											"end": 26912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26907,
											"end": 26912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26907,
											"end": 26912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26912,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26907,
											"end": 26912,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26912,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26907,
											"end": 26912,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26913,
											"end": 26918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26918,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26918,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26913,
											"end": 26918,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26918,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26918,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26913,
											"end": 26918,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26913,
											"end": 26928,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 26937,
											"end": 26941,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 26913,
											"end": 26943,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26913,
											"end": 26943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26913,
											"end": 26943,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 26913,
											"end": 26943,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 26892,
											"end": 26944,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26892,
											"end": 26944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 26892,
											"end": 26944,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26944,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26790,
											"end": 26949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3745,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3649,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3737,
											"end": 3738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3733,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3733,
											"end": 3738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3733,
											"end": 3738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3733,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3733,
											"end": 3738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3733,
											"end": 3738,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3733,
											"end": 3738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3745,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4840,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4744,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4802,
											"end": 4809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4832,
											"end": 4833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4828,
											"end": 4829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4828,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4828,
											"end": 4833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4828,
											"end": 4833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4828,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4828,
											"end": 4833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4828,
											"end": 4833,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4828,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4821,
											"end": 4833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4821,
											"end": 4833,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4840,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4016,
											"end": 4112,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4016,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4074,
											"end": 4081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4100,
											"end": 4101,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4100,
											"end": 4105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4016,
											"end": 4112,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4016,
											"end": 4112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4016,
											"end": 4112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4016,
											"end": 4112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4016,
											"end": 4112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2219,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2311,
											"end": 2316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2293,
											"end": 2317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2323,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2467,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2329,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2410,
											"end": 2442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2442,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2410,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2443,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2628,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2473,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2532,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2552,
											"end": 2572,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 2616,
											"end": 2621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2581,
											"end": 2622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2622,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 2581,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2628,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2769,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2755,
											"end": 2764,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2753,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2765,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2770,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2854,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2735,
											"end": 2854,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2773,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2773,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2852,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2773,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2854,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2735,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 2894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2971,
											"end": 2978,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 2968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2960,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2918,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2918,
											"end": 2979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2918,
											"end": 2979,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2918,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2979,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3030,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3099,
											"end": 3106,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3090,
											"end": 3096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3088,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3054,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3107,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3054,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 3124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3220,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3130,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3171,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3207,
											"end": 3212,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3200,
											"end": 3213,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3342,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3226,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 3311,
											"end": 3316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3296,
											"end": 3317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3317,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 3296,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3318,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 3276,
											"end": 3336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3330,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3336,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 3276,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3348,
											"end": 3481,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3348,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3391,
											"end": 3396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3436,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3445,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 3469,
											"end": 3474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3445,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3445,
											"end": 3475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3445,
											"end": 3475,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 3445,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3348,
											"end": 3481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3348,
											"end": 3481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3348,
											"end": 3481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3348,
											"end": 3481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3348,
											"end": 3481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3552,
											"end": 3558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3560,
											"end": 3566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3609,
											"end": 3611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3607,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3580,
											"end": 3612,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 3615,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3615,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3694,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 3615,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3805,
											"end": 3812,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3802,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3794,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3760,
											"end": 3813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3813,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3706,
											"end": 3823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3864,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 3930,
											"end": 3937,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3906,
											"end": 3928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3888,
											"end": 3938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 3938,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 3888,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3878,
											"end": 3938,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3878,
											"end": 3938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3487,
											"end": 3955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 4079,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3961,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 4066,
											"end": 4071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4048,
											"end": 4072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4072,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 4048,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4046,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4036,
											"end": 4073,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 4079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 4079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 4079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4205,
											"end": 4214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4201,
											"end": 4219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4219,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 4295,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4273,
											"end": 4279,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4229,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4085,
											"end": 4307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4456,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 4313,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4386,
											"end": 4408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4386,
											"end": 4408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 4444,
											"end": 4449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4417,
											"end": 4450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4450,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 4417,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4456,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4813,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4462,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4581,
											"end": 4583,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4569,
											"end": 4578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4560,
											"end": 4567,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4556,
											"end": 4579,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4584,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4549,
											"end": 4668,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4549,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 4549,
											"end": 4668,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4587,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 4587,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4587,
											"end": 4666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4587,
											"end": 4666,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 4587,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4549,
											"end": 4668,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 4549,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4732,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4788,
											"end": 4795,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4779,
											"end": 4785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4777,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4764,
											"end": 4786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4732,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 4732,
											"end": 4796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4732,
											"end": 4796,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4732,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4796,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4678,
											"end": 4806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4813,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 4944,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 4980,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4967,
											"end": 4976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4955,
											"end": 4981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4955,
											"end": 4981,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4991,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 5059,
											"end": 5060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5048,
											"end": 5057,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5035,
											"end": 5041,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4991,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4991,
											"end": 5062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4991,
											"end": 5062,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 4991,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 5140,
											"end": 5142,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5129,
											"end": 5138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5125,
											"end": 5143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5122,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5072,
											"end": 5144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5144,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 5072,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 5151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5294,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5157,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5211,
											"end": 5216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5242,
											"end": 5248,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5249,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5282,
											"end": 5287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5258,
											"end": 5288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5288,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5258,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5294,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5645,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5300,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5416,
											"end": 5418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5395,
											"end": 5402,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5391,
											"end": 5414,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5419,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5384,
											"end": 5503,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5384,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 5384,
											"end": 5503,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5422,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 5422,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5422,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5422,
											"end": 5501,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 5422,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5384,
											"end": 5503,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 5384,
											"end": 5503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 5620,
											"end": 5627,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5609,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5567,
											"end": 5628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5557,
											"end": 5628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5557,
											"end": 5628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5513,
											"end": 5638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5645,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5645,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5711,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5651,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5700,
											"end": 5705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5711,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 5859,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 5717,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5800,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 5818,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 5827,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5845,
											"end": 5850,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5827,
											"end": 5851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5851,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5827,
											"end": 5851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5818,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 5852,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 5818,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5800,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5800,
											"end": 5853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5800,
											"end": 5853,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 5800,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 5859,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 5859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 5859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 5859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5865,
											"end": 5991,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 5865,
											"end": 5991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5915,
											"end": 5924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5948,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5979,
											"end": 5984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5948,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 5948,
											"end": 5985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5948,
											"end": 5985,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5948,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5935,
											"end": 5985,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5935,
											"end": 5985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5865,
											"end": 5991,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5865,
											"end": 5991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5865,
											"end": 5991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5865,
											"end": 5991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6131,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 5997,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6055,
											"end": 6064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6088,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 6119,
											"end": 6124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6088,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6088,
											"end": 6125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6088,
											"end": 6125,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 6088,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6284,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6137,
											"end": 6284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 6271,
											"end": 6276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6232,
											"end": 6277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6277,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 6232,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6220,
											"end": 6278,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6638,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 6290,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6459,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6446,
											"end": 6455,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6470,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 6546,
											"end": 6547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6535,
											"end": 6544,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6531,
											"end": 6548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6470,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6470,
											"end": 6549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6470,
											"end": 6549,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 6470,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6559,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 6627,
											"end": 6629,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6616,
											"end": 6625,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6609,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6559,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6559,
											"end": 6631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6559,
											"end": 6631,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 6559,
											"end": 6631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6638,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6638,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6644,
											"end": 6813,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6644,
											"end": 6813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6762,
											"end": 6768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6750,
											"end": 6769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 6806,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6793,
											"end": 6807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6778,
											"end": 6807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6778,
											"end": 6807,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6644,
											"end": 6813,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6644,
											"end": 6813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6644,
											"end": 6813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6644,
											"end": 6813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6644,
											"end": 6813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 7001,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6819,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6959,
											"end": 6993,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6955,
											"end": 6956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6947,
											"end": 6953,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 6994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 7001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 7001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7007,
											"end": 7373,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7007,
											"end": 7373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7170,
											"end": 7237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 7234,
											"end": 7236,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7229,
											"end": 7232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7170,
											"end": 7237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7170,
											"end": 7237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7170,
											"end": 7237,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 7170,
											"end": 7237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7163,
											"end": 7237,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7163,
											"end": 7237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 7335,
											"end": 7338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7246,
											"end": 7339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7339,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 7246,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7359,
											"end": 7362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7007,
											"end": 7373,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7007,
											"end": 7373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7007,
											"end": 7373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7007,
											"end": 7373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7798,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 7379,
											"end": 7798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7583,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7572,
											"end": 7581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7568,
											"end": 7586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7632,
											"end": 7641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7630,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7642,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7607,
											"end": 7616,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7603,
											"end": 7620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7596,
											"end": 7643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7660,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 7786,
											"end": 7790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7660,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7660,
											"end": 7791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7660,
											"end": 7791,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 7660,
											"end": 7791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7804,
											"end": 7984,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7804,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7852,
											"end": 7929,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7849,
											"end": 7850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7842,
											"end": 7930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 7953,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7946,
											"end": 7947,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7939,
											"end": 7954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7970,
											"end": 7971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7963,
											"end": 7978,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7990,
											"end": 8295,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 7990,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8030,
											"end": 8033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8049,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 8067,
											"end": 8068,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8049,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 8049,
											"end": 8069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8049,
											"end": 8069,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 8049,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8069,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8083,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 8101,
											"end": 8102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8083,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 8083,
											"end": 8103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8083,
											"end": 8103,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 8083,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8078,
											"end": 8103,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8078,
											"end": 8103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8169,
											"end": 8235,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8165,
											"end": 8239,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8162,
											"end": 8163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8240,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8156,
											"end": 8263,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8156,
											"end": 8263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 8156,
											"end": 8263,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8243,
											"end": 8261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 8243,
											"end": 8261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8243,
											"end": 8261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8243,
											"end": 8261,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 8243,
											"end": 8261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8156,
											"end": 8263,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 8156,
											"end": 8263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8288,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8280,
											"end": 8289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7990,
											"end": 8295,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7990,
											"end": 8295,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7990,
											"end": 8295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7990,
											"end": 8295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7990,
											"end": 8295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8301,
											"end": 8481,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 8301,
											"end": 8481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8426,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8346,
											"end": 8347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8339,
											"end": 8427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8446,
											"end": 8450,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 8443,
											"end": 8444,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8436,
											"end": 8451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8470,
											"end": 8474,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8467,
											"end": 8468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8460,
											"end": 8475,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8672,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 8487,
											"end": 8672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8527,
											"end": 8528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8544,
											"end": 8564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 8562,
											"end": 8563,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8544,
											"end": 8564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 8544,
											"end": 8564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8544,
											"end": 8564,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 8544,
											"end": 8564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8539,
											"end": 8564,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8539,
											"end": 8564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 8596,
											"end": 8597,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 8578,
											"end": 8598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8598,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 8578,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8573,
											"end": 8598,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8573,
											"end": 8598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8617,
											"end": 8618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8607,
											"end": 8642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 8607,
											"end": 8642,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8622,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 8622,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 8622,
											"end": 8640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8622,
											"end": 8640,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 8622,
											"end": 8640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8607,
											"end": 8642,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 8607,
											"end": 8642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8664,
											"end": 8665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8661,
											"end": 8662,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8657,
											"end": 8666,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8652,
											"end": 8666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8652,
											"end": 8666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8672,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8678,
											"end": 8869,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 8678,
											"end": 8869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8718,
											"end": 8722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8738,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 8756,
											"end": 8757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8738,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 8738,
											"end": 8758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8738,
											"end": 8758,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 8738,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8772,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 8790,
											"end": 8791,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8772,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 8772,
											"end": 8792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8772,
											"end": 8792,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 8772,
											"end": 8792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8767,
											"end": 8792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8767,
											"end": 8792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8811,
											"end": 8812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8808,
											"end": 8809,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8805,
											"end": 8813,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 8836,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 8836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 8802,
											"end": 8836,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 8834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 8816,
											"end": 8834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8816,
											"end": 8834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 8834,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 8816,
											"end": 8834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 8836,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 8802,
											"end": 8836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8861,
											"end": 8862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8858,
											"end": 8859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8854,
											"end": 8863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8846,
											"end": 8863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8846,
											"end": 8863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8678,
											"end": 8869,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8678,
											"end": 8869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8678,
											"end": 8869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8678,
											"end": 8869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8678,
											"end": 8869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"treasury_flat.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DCF_ETH(uint256)": "3a23bf49",
							"ETH_DCF(uint256)": "97dedb1d",
							"Warning_protect()": "dac3fad4",
							"market(address,uint256)": "94756aa7",
							"setRouter(address,bool)": "c3c64674",
							"subscribe(address)": "41a7726a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_k\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"DCF_ETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"ETH_DCF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Warning_protect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"market\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"power\",\"type\":\"bool\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"}],\"name\":\"subscribe\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"treasury_flat.sol\":\"treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"treasury_flat.sol\":{\"keccak256\":\"0x98135fb3717076a62558f6542be17f0b4d1c28ee14d097b4c5fafb6014b21a8a\",\"urls\":[\"bzz-raw://a1461c5fde3b10830f36dce8f61fe2bb4b572a0c7d2b87faf75665e9a93debd3\",\"dweb:/ipfs/QmbivuoGpfywb5YBChFYGzq5FkASujh734iX9Uo2NSaaVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1065,
								"contract": "treasury_flat.sol:treasury",
								"label": "dcoff",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)409"
							},
							{
								"astId": 1071,
								"contract": "treasury_flat.sol:treasury",
								"label": "dcoff_burn",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ERC20Burnable)1055"
							},
							{
								"astId": 1073,
								"contract": "treasury_flat.sol:treasury",
								"label": "K",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1090,
								"contract": "treasury_flat.sol:treasury",
								"label": "owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1094,
								"contract": "treasury_flat.sol:treasury",
								"label": "RouterAdmin",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ERC20Burnable)1055": {
								"encoding": "inplace",
								"label": "contract ERC20Burnable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)409": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> treasury_flat.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "treasury_flat.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"treasury_flat.sol": {
				"ast": {
					"absolutePath": "treasury_flat.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							1014
						],
						"ERC20Burnable": [
							1055
						],
						"IERC20": [
							409
						],
						"IERC20Metadata": [
							432
						],
						"SafeMath": [
							332
						],
						"treasury": [
							1330
						]
					},
					"id": 1331,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "133:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "648:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "724:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "741:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "741:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "734:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "671:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "681:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "715:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:9:0"
									},
									"scope": 21,
									"src": "662:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "831:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "848:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "848:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "841:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "773:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "781:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "815:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "815:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:16:0"
									},
									"scope": 21,
									"src": "764:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1331,
							"src": "630:235:0",
							"usedErrors": []
						},
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1001:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "1179:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 332,
							"linearizedBaseContracts": [
								332
							],
							"name": "SafeMath",
							"nameLocation": "1384:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "1611:140:0",
										"statements": [
											{
												"id": 53,
												"nodeType": "UncheckedBlock",
												"src": "1621:124:0",
												"statements": [
													{
														"assignments": [
															36
														],
														"declarations": [
															{
																"constant": false,
																"id": 36,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1653:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 53,
																"src": "1645:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 35,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1645:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 40,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 37,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1657:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 38,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1661:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1657:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1645:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 41,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "1680:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 42,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1684:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1680:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 48,
														"nodeType": "IfStatement",
														"src": "1676:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 44,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1695:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 45,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1702:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 46,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1694:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 34,
															"id": 47,
															"nodeType": "Return",
															"src": "1687:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 49,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1726:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 50,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "1732:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 51,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1725:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 34,
														"id": 52,
														"nodeType": "Return",
														"src": "1718:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "1399:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 55,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "1544:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1559:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1551:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1570:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1562:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1550:22:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1596:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1596:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1602:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1595:15:0"
									},
									"scope": 332,
									"src": "1535:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1972:113:0",
										"statements": [
											{
												"id": 81,
												"nodeType": "UncheckedBlock",
												"src": "1982:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 67,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "2010:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 68,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "2014:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2010:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 74,
														"nodeType": "IfStatement",
														"src": "2006:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 70,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2025:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2032:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 72,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2024:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 66,
															"id": 73,
															"nodeType": "Return",
															"src": "2017:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2056:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 76,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "2062:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 77,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 60,
																		"src": "2066:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2062:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 79,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2055:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 66,
														"id": 80,
														"nodeType": "Return",
														"src": "2048:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "1757:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1905:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1920:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1912:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1931:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1923:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:22:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1957:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 62,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1957:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1963:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:15:0"
									},
									"scope": 332,
									"src": "1896:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2309:417:0",
										"statements": [
											{
												"id": 123,
												"nodeType": "UncheckedBlock",
												"src": "2319:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 95,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "2577:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2582:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2577:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 102,
														"nodeType": "IfStatement",
														"src": "2573:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 98,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2593:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 99,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2599:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 100,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2592:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 94,
															"id": 101,
															"nodeType": "Return",
															"src": "2585:16:0"
														}
													},
													{
														"assignments": [
															104
														],
														"declarations": [
															{
																"constant": false,
																"id": 104,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "2623:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 123,
																"src": "2615:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 103,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2615:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 108,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 105,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "2627:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 106,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "2631:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2627:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2615:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 109,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "2650:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 110,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "2654:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2650:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 112,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "2659:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2650:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 118,
														"nodeType": "IfStatement",
														"src": "2646:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2670:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2677:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 116,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2669:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 94,
															"id": 117,
															"nodeType": "Return",
															"src": "2662:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2701:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 120,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "2707:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 121,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2700:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 94,
														"id": 122,
														"nodeType": "Return",
														"src": "2693:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2091:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "2242:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2257:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2249:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2268:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2260:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2260:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:22:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2294:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 90,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2294:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2300:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2293:15:0"
									},
									"scope": 332,
									"src": "2233:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "2951:114:0",
										"statements": [
											{
												"id": 151,
												"nodeType": "UncheckedBlock",
												"src": "2961:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 137,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "2989:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2994:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2989:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 144,
														"nodeType": "IfStatement",
														"src": "2985:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3005:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3012:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 142,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3004:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 136,
															"id": 143,
															"nodeType": "Return",
															"src": "2997:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3036:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 146,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 128,
																		"src": "3042:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 147,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 130,
																		"src": "3046:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3042:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 149,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3035:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 136,
														"id": 150,
														"nodeType": "Return",
														"src": "3028:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "2732:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2884:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2899:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2891:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2910:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2902:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2890:22:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2936:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 132,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2936:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2942:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2942:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2935:15:0"
									},
									"scope": 332,
									"src": "2875:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "3300:114:0",
										"statements": [
											{
												"id": 179,
												"nodeType": "UncheckedBlock",
												"src": "3310:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 165,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "3338:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3343:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3338:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 172,
														"nodeType": "IfStatement",
														"src": "3334:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3354:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3361:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 170,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3353:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 164,
															"id": 171,
															"nodeType": "Return",
															"src": "3346:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3385:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 174,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 156,
																		"src": "3391:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 175,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 158,
																		"src": "3395:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3391:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 177,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3384:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 164,
														"id": 178,
														"nodeType": "Return",
														"src": "3377:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "3071:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "3233:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3248:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "3240:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3259:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "3251:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3239:22:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "3285:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3285:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "3291:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3284:15:0"
									},
									"scope": 332,
									"src": "3224:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "3716:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 191,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "3733:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 192,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "3737:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3733:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 190,
												"id": 194,
												"nodeType": "Return",
												"src": "3726:12:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "3420:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "3658:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3670:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3662:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3681:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3673:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3661:22:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3707:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3706:9:0"
									},
									"scope": 332,
									"src": "3649:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "4083:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "4100:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 207,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "4104:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4100:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "4093:12:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "3751:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4025:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "4029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4048:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "4040:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:22:0"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "4074:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4073:9:0"
									},
									"scope": 332,
									"src": "4016:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "4426:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 221,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "4443:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 222,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "4447:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4443:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 224,
												"nodeType": "Return",
												"src": "4436:12:0"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "4118:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "4368:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4380:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "4372:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4391:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "4383:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4371:22:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "4417:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4416:9:0"
									},
									"scope": 332,
									"src": "4359:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "4811:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 236,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4828:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 237,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "4832:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4828:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 235,
												"id": 239,
												"nodeType": "Return",
												"src": "4821:12:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "4461:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "4753:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4765:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "4757:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "4768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4756:22:0"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "4802:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4801:9:0"
									},
									"scope": 332,
									"src": "4744:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "5360:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "5377:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "5381:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5377:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 250,
												"id": 254,
												"nodeType": "Return",
												"src": "5370:12:0"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "4846:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5302:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5314:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5306:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5325:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5317:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5317:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5305:22:0"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5351:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5350:9:0"
									},
									"scope": 332,
									"src": "5293:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "5978:106:0",
										"statements": [
											{
												"id": 279,
												"nodeType": "UncheckedBlock",
												"src": "5988:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 269,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6020:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 270,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6025:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6020:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 272,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "6028:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 268,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6012:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 274,
														"nodeType": "ExpressionStatement",
														"src": "6012:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 275,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "6062:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 276,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "6066:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6062:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 267,
														"id": 278,
														"nodeType": "Return",
														"src": "6055:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "5395:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5862:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5883:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "5875:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5902:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "5894:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5927:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "5913:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 262,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5913:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5865:80:0"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "5969:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5968:9:0"
									},
									"scope": 332,
									"src": "5853:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "6693:105:0",
										"statements": [
											{
												"id": 304,
												"nodeType": "UncheckedBlock",
												"src": "6703:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 294,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "6735:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6739:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6735:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 297,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "6742:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 293,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6727:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6727:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 299,
														"nodeType": "ExpressionStatement",
														"src": "6727:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 300,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "6776:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 301,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "6780:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6776:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 292,
														"id": 303,
														"nodeType": "Return",
														"src": "6769:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "6090:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "6577:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6598:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "6590:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6617:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "6609:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6642:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "6628:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6628:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6580:80:0"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "6684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6683:9:0"
									},
									"scope": 332,
									"src": "6568:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "7569:105:0",
										"statements": [
											{
												"id": 329,
												"nodeType": "UncheckedBlock",
												"src": "7579:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 319,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 311,
																		"src": "7611:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7615:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7611:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 322,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "7618:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 318,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "7603:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7603:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 324,
														"nodeType": "ExpressionStatement",
														"src": "7603:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 325,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "7652:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 326,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "7656:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7652:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 317,
														"id": 328,
														"nodeType": "Return",
														"src": "7645:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "6804:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "7453:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7474:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "7466:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7466:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7493:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "7485:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7485:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7518:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "7504:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 312,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7504:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7456:80:0"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "7560:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7559:9:0"
									},
									"scope": 332,
									"src": "7444:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1331,
							"src": "1376:6300:0",
							"usedErrors": []
						},
						{
							"id": 333,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "7810:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 334,
								"nodeType": "StructuredDocumentation",
								"src": "7835:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 409,
							"linearizedBaseContracts": [
								409
							],
							"name": "IERC20",
							"nameLocation": "7916:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "7929:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 343,
									"name": "Transfer",
									"nameLocation": "8098:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8123:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "8107:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8107:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8145:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "8129:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8157:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "8149:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8106:57:0"
									},
									"src": "8092:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "8170:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 352,
									"name": "Approval",
									"nameLocation": "8329:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8354:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "8338:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8338:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8377:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "8361:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8394:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "8386:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8337:63:0"
									},
									"src": "8323:78:0"
								},
								{
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "8407:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "8487:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8498:2:0"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "8524:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8523:9:0"
									},
									"scope": 409,
									"src": "8478:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "8539:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8625:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8643:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "8635:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:17:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "8675:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8674:9:0"
									},
									"scope": 409,
									"src": "8616:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "8690:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8906:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8923:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "8915:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8935:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "8927:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8927:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8914:28:0"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "8961:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8961:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8960:6:0"
									},
									"scope": 409,
									"src": "8897:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "8973:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "9251:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9269:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9261:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9284:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9276:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9260:32:0"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "9316:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9315:9:0"
									},
									"scope": 409,
									"src": "9242:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "9331:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "9987:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10003:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "9995:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10020:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "10012:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9994:33:0"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "10046:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 393,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10046:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10045:6:0"
									},
									"scope": 409,
									"src": "9978:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "10058:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "10359:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10389:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10381:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10411:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10403:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10431:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10423:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10371:72:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10462:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10462:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10461:6:0"
									},
									"scope": 409,
									"src": "10350:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1331,
							"src": "7906:2564:0",
							"usedErrors": []
						},
						{
							"id": 410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "10627:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 412,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "10798:6:0"
									},
									"id": 413,
									"nodeType": "InheritanceSpecifier",
									"src": "10798:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 411,
								"nodeType": "StructuredDocumentation",
								"src": "10653:116:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 432,
							"linearizedBaseContracts": [
								432,
								409
							],
							"name": "IERC20Metadata",
							"nameLocation": "10780:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "10811:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 419,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10879:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10883:2:0"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "10909:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 416,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10909:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10908:15:0"
									},
									"scope": 432,
									"src": "10870:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "10930:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 425,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "11000:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11006:2:0"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "11032:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11032:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11031:15:0"
									},
									"scope": 432,
									"src": "10991:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "11053:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "11132:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11140:2:0"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "11166:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 428,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11166:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11165:7:0"
									},
									"scope": 432,
									"src": "11123:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1331,
							"src": "10770:405:0",
							"usedErrors": []
						},
						{
							"id": 433,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "11307:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 435,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "12526:7:0"
									},
									"id": 436,
									"nodeType": "InheritanceSpecifier",
									"src": "12526:7:0"
								},
								{
									"baseName": {
										"id": 437,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "12535:6:0"
									},
									"id": 438,
									"nodeType": "InheritanceSpecifier",
									"src": "12535:6:0"
								},
								{
									"baseName": {
										"id": 439,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 432,
										"src": "12543:14:0"
									},
									"id": 440,
									"nodeType": "InheritanceSpecifier",
									"src": "12543:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 434,
								"nodeType": "StructuredDocumentation",
								"src": "11335:1172:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1014,
							"linearizedBaseContracts": [
								1014,
								432,
								409,
								21
							],
							"name": "ERC20",
							"nameLocation": "12517:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 444,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12600:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "12564:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 443,
										"keyType": {
											"id": 441,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12572:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12564:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 442,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12583:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 450,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12672:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "12616:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 449,
										"keyType": {
											"id": 445,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12624:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12616:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 448,
											"keyType": {
												"id": 446,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12643:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12635:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 447,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12654:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 452,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12706:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "12690:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 451,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12690:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 454,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12740:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "12725:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 453,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12725:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 456,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12766:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "12751:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 455,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12751:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "13139:57:0",
										"statements": [
											{
												"expression": {
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 464,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "13149:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 465,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "13157:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "13149:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "13149:13:0"
											},
											{
												"expression": {
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 468,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "13172:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 469,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "13182:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "13172:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "13172:17:0"
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "12780:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 473,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "13109:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "13095:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13095:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "13130:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "13116:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 460,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13116:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13094:44:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13139:0:0"
									},
									"scope": 1014,
									"src": "13083:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										419
									],
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "13330:29:0",
										"statements": [
											{
												"expression": {
													"id": 480,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 454,
													"src": "13347:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 479,
												"id": 481,
												"nodeType": "Return",
												"src": "13340:12:0"
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "13202:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "13270:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 476,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13297:8:0"
									},
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13274:2:0"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "13315:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13315:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13314:15:0"
									},
									"scope": 1014,
									"src": "13261:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										425
									],
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "13543:31:0",
										"statements": [
											{
												"expression": {
													"id": 490,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 456,
													"src": "13560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 489,
												"id": 491,
												"nodeType": "Return",
												"src": "13553:14:0"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "13365:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "13481:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 486,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13510:8:0"
									},
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13487:2:0"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "13528:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 487,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13528:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13527:15:0"
									},
									"scope": 1014,
									"src": "13472:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										431
									],
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "14263:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14280:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 499,
												"id": 501,
												"nodeType": "Return",
												"src": "14273:9:0"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "13580:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "14207:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 496,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14238:8:0"
									},
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14215:2:0"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "14256:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 497,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14256:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14255:7:0"
									},
									"scope": 1014,
									"src": "14198:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										358
									],
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "14419:36:0",
										"statements": [
											{
												"expression": {
													"id": 510,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 452,
													"src": "14436:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 509,
												"id": 511,
												"nodeType": "Return",
												"src": "14429:19:0"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "14295:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "14358:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 506,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14392:8:0"
									},
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14369:2:0"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "14410:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14410:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14409:9:0"
									},
									"scope": 1014,
									"src": "14349:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										366
									],
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "14596:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 522,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "14613:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 524,
													"indexExpression": {
														"id": 523,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "14623:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14613:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 521,
												"id": 525,
												"nodeType": "Return",
												"src": "14606:25:0"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "14461:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "14522:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 518,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14569:8:0"
									},
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14540:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "14532:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14531:17:0"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "14587:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14586:9:0"
									},
									"scope": 1014,
									"src": "14513:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										376
									],
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "14919:104:0",
										"statements": [
											{
												"assignments": [
													539
												],
												"declarations": [
													{
														"constant": false,
														"id": 539,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14937:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 551,
														"src": "14929:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 538,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14929:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 542,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 540,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "14945:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14945:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14929:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 544,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "14977:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "14984:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 546,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "14988:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 543,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "14967:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14967:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "14967:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15012:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 537,
												"id": 550,
												"nodeType": "Return",
												"src": "15005:11:0"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "14644:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14843:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 534,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14895:8:0"
									},
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14860:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "14852:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14872:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "14864:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:28:0"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "14913:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 535,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14913:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14912:6:0"
									},
									"scope": 1014,
									"src": "14834:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										386
									],
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "15179:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 563,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "15196:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 565,
														"indexExpression": {
															"id": 564,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "15208:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15196:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 567,
													"indexExpression": {
														"id": 566,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "15215:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15196:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 562,
												"id": 568,
												"nodeType": "Return",
												"src": "15189:34:0"
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "15029:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "15090:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 559,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15152:8:0"
									},
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "15100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15123:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "15115:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15115:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15099:32:0"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "15170:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15169:9:0"
									},
									"scope": 1014,
									"src": "15081:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										396
									],
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "15627:108:0",
										"statements": [
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15645:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "15637:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 581,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15637:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 585,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 583,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "15653:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15653:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15637:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 587,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "15684:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 588,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "15691:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "15700:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 586,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "15675:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15675:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "15675:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15724:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 580,
												"id": 593,
												"nodeType": "Return",
												"src": "15717:11:0"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "15236:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15547:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 577,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15603:8:0"
									},
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15563:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "15555:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15580:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "15572:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15554:33:0"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "15621:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 578,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15621:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15620:6:0"
									},
									"scope": 1014,
									"src": "15538:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										408
									],
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "16430:153:0",
										"statements": [
											{
												"assignments": [
													609
												],
												"declarations": [
													{
														"constant": false,
														"id": 609,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "16448:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "16440:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 608,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16440:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 612,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 610,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "16458:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16458:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16440:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 614,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "16496:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 615,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "16502:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "16511:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 613,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "16480:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16480:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "16480:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 620,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "16538:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "16544:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 622,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "16548:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "16528:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16528:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "16528:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16572:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 607,
												"id": 626,
												"nodeType": "Return",
												"src": "16565:11:0"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "15741:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "16306:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 604,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16406:8:0"
									},
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16336:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "16328:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16358:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "16350:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16350:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16378:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "16370:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16318:72:0"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "16424:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 605,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16424:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16423:6:0"
									},
									"scope": 1014,
									"src": "16297:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "17072:140:0",
										"statements": [
											{
												"assignments": [
													639
												],
												"declarations": [
													{
														"constant": false,
														"id": 639,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "17090:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "17082:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 638,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17082:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 642,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 640,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "17098:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17098:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17082:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "17129:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "17136:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 647,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "17155:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 648,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "17162:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 646,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "17145:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17145:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 650,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "17173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17145:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 643,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "17120:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17120:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "17120:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17201:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 637,
												"id": 655,
												"nodeType": "Return",
												"src": "17194:11:0"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "16589:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "16987:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17013:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "17005:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17005:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "17030:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "17022:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17004:37:0"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "17066:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17066:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17065:6:0"
									},
									"scope": 1014,
									"src": "16978:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "17798:328:0",
										"statements": [
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "17816:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 697,
														"src": "17808:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 667,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17808:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 669,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "17824:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17824:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17808:28:0"
											},
											{
												"assignments": [
													673
												],
												"declarations": [
													{
														"constant": false,
														"id": 673,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "17854:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 697,
														"src": "17846:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 672,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17846:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 678,
												"initialValue": {
													"arguments": [
														{
															"id": 675,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "17883:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 676,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "17890:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 674,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "17873:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17873:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17846:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 680,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "17916:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 681,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "17936:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17916:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17953:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 679,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17908:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17908:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "17908:85:0"
											},
											{
												"id": 694,
												"nodeType": "UncheckedBlock",
												"src": "18003:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 687,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "18036:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 688,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 660,
																	"src": "18043:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 689,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 673,
																		"src": "18052:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 690,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "18071:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18052:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 686,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "18027:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18027:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 693,
														"nodeType": "ExpressionStatement",
														"src": "18027:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18115:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 666,
												"id": 696,
												"nodeType": "Return",
												"src": "18108:11:0"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "17218:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "17708:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17734:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "17726:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "17751:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "17743:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17725:42:0"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "17792:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17792:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17791:6:0"
									},
									"scope": 1014,
									"src": "17699:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 774,
										"nodeType": "Block",
										"src": "18697:543:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 709,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "18715:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18731:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18723:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 710,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18723:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18723:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18715:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18735:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 708,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18707:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18707:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "18707:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 719,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 703,
																"src": "18793:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18807:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18799:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 720,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18799:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18799:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18793:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18811:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 718,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18785:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18785:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "18785:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 729,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "18881:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 730,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "18887:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "18891:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 728,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "18860:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18860:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "18860:38:0"
											},
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "18917:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 774,
														"src": "18909:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 734,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18909:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 739,
												"initialValue": {
													"baseExpression": {
														"id": 736,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "18931:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 738,
													"indexExpression": {
														"id": 737,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "18941:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18931:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18909:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 741,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "18964:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 742,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "18979:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18964:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18987:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 740,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18956:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18956:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "18956:72:0"
											},
											{
												"id": 755,
												"nodeType": "UncheckedBlock",
												"src": "19038:73:0",
												"statements": [
													{
														"expression": {
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 747,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "19062:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 749,
																"indexExpression": {
																	"id": 748,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "19072:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "19062:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 750,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "19080:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 751,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "19094:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19080:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19062:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 754,
														"nodeType": "ExpressionStatement",
														"src": "19062:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 756,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "19120:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 758,
														"indexExpression": {
															"id": 757,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "19130:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19120:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 759,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "19137:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19120:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "19120:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 763,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "19168:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "19174:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "19178:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 762,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "19159:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19159:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "EmitStatement",
												"src": "19154:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 769,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "19216:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "19222:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "19226:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 768,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "19196:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19196:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "19196:37:0"
											}
										]
									},
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "18132:452:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "18598:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18625:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "18617:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18647:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "18639:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18667:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "18659:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18659:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18607:72:0"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18697:0:0"
									},
									"scope": 1014,
									"src": "18589:651:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "19581:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 784,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "19599:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19618:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19610:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 785,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19610:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19610:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19599:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19622:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 783,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19591:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19591:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "19591:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19696:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19688:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 794,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19688:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19688:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 798,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "19700:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 799,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "19709:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 793,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "19667:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19667:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "19667:49:0"
											},
											{
												"expression": {
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 802,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "19727:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 803,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "19743:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19727:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "19727:22:0"
											},
											{
												"expression": {
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 806,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "19759:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 808,
														"indexExpression": {
															"id": 807,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "19769:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19759:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 809,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "19781:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19759:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "19759:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19819:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19811:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 813,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19811:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19811:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "19823:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "19832:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 812,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "19802:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19802:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 820,
												"nodeType": "EmitStatement",
												"src": "19797:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19878:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19870:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 822,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19870:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19870:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 826,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "19882:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 827,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "19891:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 821,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "19850:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19850:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "19850:48:0"
											}
										]
									},
									"documentation": {
										"id": 776,
										"nodeType": "StructuredDocumentation",
										"src": "19246:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "19525:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19539:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "19531:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19556:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "19548:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19530:33:0"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19581:0:0"
									},
									"scope": 1014,
									"src": "19516:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "20290:511:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 840,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "20308:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20327:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20319:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 841,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20319:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20319:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20308:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20331:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 839,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20300:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20300:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "20300:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 850,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "20399:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20416:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20408:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 851,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20408:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20408:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "20420:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 849,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "20378:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20378:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "20378:49:0"
											},
											{
												"assignments": [
													859
												],
												"declarations": [
													{
														"constant": false,
														"id": 859,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "20446:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 902,
														"src": "20438:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 858,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20438:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 863,
												"initialValue": {
													"baseExpression": {
														"id": 860,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "20463:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 862,
													"indexExpression": {
														"id": 861,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "20473:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20463:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20438:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 865,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "20499:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 866,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "20517:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20499:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20525:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 864,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20491:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20491:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "20491:71:0"
											},
											{
												"id": 879,
												"nodeType": "UncheckedBlock",
												"src": "20572:79:0",
												"statements": [
													{
														"expression": {
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 871,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "20596:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 873,
																"indexExpression": {
																	"id": 872,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "20606:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "20596:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 874,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "20617:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 875,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "20634:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20617:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20596:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 878,
														"nodeType": "ExpressionStatement",
														"src": "20596:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 880,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "20660:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 881,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "20676:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20660:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "20660:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 885,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "20707:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20724:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20716:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 886,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20716:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20716:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 890,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "20728:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 884,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "20698:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20698:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 892,
												"nodeType": "EmitStatement",
												"src": "20693:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "20766:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20783:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20775:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 895,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20775:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20775:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "20787:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "20746:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20746:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "20746:48:0"
											}
										]
									},
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "19911:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "20234:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20248:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "20240:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20240:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "20265:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "20257:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20257:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20239:33:0"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20290:0:0"
									},
									"scope": 1014,
									"src": "20225:576:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "21337:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 914,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "21355:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21372:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21364:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 915,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21364:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21364:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21355:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21376:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 913,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21347:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21347:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "21347:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 924,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 908,
																"src": "21433:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21452:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21444:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 925,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21444:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21444:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21433:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21456:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 923,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21425:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21425:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "21425:68:0"
											},
											{
												"expression": {
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 933,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "21504:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 936,
															"indexExpression": {
																"id": 934,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "21516:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21504:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 937,
														"indexExpression": {
															"id": 935,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "21523:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21504:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 938,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "21534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21504:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "21504:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 942,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "21564:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "21571:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "21580:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 941,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "21555:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21555:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "EmitStatement",
												"src": "21550:37:0"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "20807:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "21233:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21259:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "21251:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21282:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "21274:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21307:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "21299:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21241:78:0"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21337:0:0"
									},
									"scope": 1014,
									"src": "21224:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "21995:321:0",
										"statements": [
											{
												"assignments": [
													959
												],
												"declarations": [
													{
														"constant": false,
														"id": 959,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "22013:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 990,
														"src": "22005:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 958,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22005:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 964,
												"initialValue": {
													"arguments": [
														{
															"id": 961,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "22042:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "22049:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 960,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "22032:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22032:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22005:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 965,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "22071:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22096:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 967,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "22096:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 966,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "22091:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22091:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "22091:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22071:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 989,
												"nodeType": "IfStatement",
												"src": "22067:243:0",
												"trueBody": {
													"id": 988,
													"nodeType": "Block",
													"src": "22110:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 973,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "22132:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 974,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "22152:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22132:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22160:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 972,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "22124:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22124:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 978,
															"nodeType": "ExpressionStatement",
															"src": "22124:68:0"
														},
														{
															"id": 987,
															"nodeType": "UncheckedBlock",
															"src": "22206:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 980,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 951,
																				"src": "22243:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 981,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 953,
																				"src": "22250:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 984,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 982,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "22259:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 983,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 955,
																					"src": "22278:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22259:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 979,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "22234:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22234:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 986,
																	"nodeType": "ExpressionStatement",
																	"src": "22234:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "21600:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21884:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21917:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "21909:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21940:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "21932:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21965:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "21957:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21899:78:0"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21995:0:0"
									},
									"scope": 1014,
									"src": "21875:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "23019:2:0",
										"statements": []
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "22322:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "22909:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22947:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "22939:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22969:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "22961:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "22989:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "22981:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22929:72:0"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23019:0:0"
									},
									"scope": 1014,
									"src": "22900:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "23727:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "23027:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "23618:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23655:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "23647:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23647:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23677:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "23669:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23697:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "23689:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23637:72:0"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23727:0:0"
									},
									"scope": 1014,
									"src": "23609:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1331,
							"src": "12508:11223:0",
							"usedErrors": []
						},
						{
							"id": 1015,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "23901:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1017,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "24172:7:0"
									},
									"id": 1018,
									"nodeType": "InheritanceSpecifier",
									"src": "24172:7:0"
								},
								{
									"baseName": {
										"id": 1019,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1014,
										"src": "24181:5:0"
									},
									"id": 1020,
									"nodeType": "InheritanceSpecifier",
									"src": "24181:5:0"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1016,
								"nodeType": "StructuredDocumentation",
								"src": "23928:208:0",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": false,
							"id": 1055,
							"linearizedBaseContracts": [
								1055,
								1014,
								432,
								409,
								21
							],
							"name": "ERC20Burnable",
							"nameLocation": "24155:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "24341:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1027,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "24357:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24357:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "24371:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1026,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "24351:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24351:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "24351:27:0"
											}
										]
									},
									"documentation": {
										"id": 1021,
										"nodeType": "StructuredDocumentation",
										"src": "24193:98:0",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "24305:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24318:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "24310:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24309:16:0"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24341:0:0"
									},
									"scope": 1055,
									"src": "24296:89:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "24757:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1042,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "24783:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1043,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "24792:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24792:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "24806:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1041,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "24767:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24767:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "24767:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1049,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "24829:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "24838:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1048,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "24823:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24823:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "24823:22:0"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "24391:295:0",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "24700:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "24717:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "24709:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24734:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "24726:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24708:33:0"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24757:0:0"
									},
									"scope": 1055,
									"src": "24691:161:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1331,
							"src": "24137:717:0",
							"usedErrors": []
						},
						{
							"id": 1056,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "24888:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "treasury",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1330,
							"linearizedBaseContracts": [
								1330
							],
							"name": "treasury",
							"nameLocation": "24926:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1059,
									"libraryName": {
										"id": 1057,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 332,
										"src": "24945:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "24939:24:0",
									"typeName": {
										"id": 1058,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "24958:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1065,
									"mutability": "mutable",
									"name": "dcoff",
									"nameLocation": "24976:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1330,
									"src": "24969:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$409",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1061,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1060,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 409,
											"src": "24969:6:0"
										},
										"referencedDeclaration": 409,
										"src": "24969:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$409",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307839364637364534353066343431343336323231413136366142306333433733433539383439423732",
												"id": 1063,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "24992:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x96F76E450f441436221A166aB0c3C73C59849B72"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1062,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 409,
											"src": "24985:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$409_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 1064,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "24985:50:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$409",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1071,
									"mutability": "mutable",
									"name": "dcoff_burn",
									"nameLocation": "25053:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1330,
									"src": "25039:84:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20Burnable_$1055",
										"typeString": "contract ERC20Burnable"
									},
									"typeName": {
										"id": 1067,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1066,
											"name": "ERC20Burnable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1055,
											"src": "25039:13:0"
										},
										"referencedDeclaration": 1055,
										"src": "25039:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Burnable_$1055",
											"typeString": "contract ERC20Burnable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307839364637364534353066343431343336323231413136366142306333433733433539383439423732",
												"id": 1069,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "25080:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x96F76E450f441436221A166aB0c3C73C59849B72"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1068,
											"name": "ERC20Burnable",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1055,
											"src": "25066:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$1055_$",
												"typeString": "type(contract ERC20Burnable)"
											}
										},
										"id": 1070,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "25066:57:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Burnable_$1055",
											"typeString": "contract ERC20Burnable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1073,
									"mutability": "mutable",
									"name": "K",
									"nameLocation": "25144:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 1330,
									"src": "25128:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1072,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25128:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "25177:41:0",
										"statements": [
											{
												"expression": {
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1078,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "25183:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1079,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "25191:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "25191:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25183:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "25183:18:0"
											},
											{
												"expression": {
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1083,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "25207:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1084,
														"name": "_k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "25211:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25207:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "25207:6:0"
											}
										]
									},
									"id": 1088,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "_k",
												"nameLocation": "25167:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "25162:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "25162:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25161:9:0"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25177:0:0"
									},
									"scope": 1330,
									"src": "25150:68:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1090,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "25230:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1330,
									"src": "25222:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1089,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "25222:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1094,
									"mutability": "mutable",
									"name": "RouterAdmin",
									"nameLocation": "25271:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1330,
									"src": "25239:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1093,
										"keyType": {
											"id": 1091,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "25247:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "25239:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1092,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "25258:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "25308:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1097,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "25326:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1098,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "25335:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "25335:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "25326:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25347:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1096,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25318:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25318:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "25318:64:0"
											},
											{
												"id": 1104,
												"nodeType": "PlaceholderStatement",
												"src": "25392:1:0"
											}
										]
									},
									"id": 1106,
									"name": "onlyOwner",
									"nameLocation": "25296:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25305:2:0"
									},
									"src": "25287:111:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "25467:36:0",
										"statements": [
											{
												"expression": {
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1115,
															"name": "RouterAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "25473:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1117,
														"indexExpression": {
															"id": 1116,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "25485:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25473:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1118,
														"name": "power",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "25493:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "25473:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "25473:25:0"
											}
										]
									},
									"functionSelector": "c3c64674",
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1113,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1112,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1106,
												"src": "25458:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25458:9:0"
										}
									],
									"name": "setRouter",
									"nameLocation": "25414:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "25432:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "25424:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "power",
												"nameLocation": "25443:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "25438:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25438:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25423:26:0"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25467:0:0"
									},
									"scope": 1330,
									"src": "25405:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "25562:146:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1128,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1094,
																	"src": "25578:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1131,
																"indexExpression": {
																	"expression": {
																		"id": 1129,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "25590:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "25590:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25578:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25605:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "25578:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25570:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25570:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "25570:40:0"
											},
											{
												"assignments": [
													1137
												],
												"declarations": [
													{
														"constant": false,
														"id": 1137,
														"mutability": "mutable",
														"name": "dcf_amount",
														"nameLocation": "25626:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1150,
														"src": "25618:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25618:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1142,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1139,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "25647:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "25647:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1138,
														"name": "ETH_DCF",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "25639:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25639:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25618:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1146,
															"name": "subscriber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "25680:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1147,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "25691:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1143,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "25665:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															}
														},
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 376,
														"src": "25665:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25665:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "25665:37:0"
											}
										]
									},
									"functionSelector": "41a7726a",
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "subscribe",
									"nameLocation": "25517:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "subscriber",
												"nameLocation": "25535:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "25527:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25527:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25526:20:0"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25562:0:0"
									},
									"scope": 1330,
									"src": "25508:200:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "25781:194:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1159,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1094,
																	"src": "25797:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1162,
																"indexExpression": {
																	"expression": {
																		"id": 1160,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "25809:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "25809:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25797:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25824:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "25797:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25789:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25789:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "25789:40:0"
											},
											{
												"assignments": [
													1168
												],
												"declarations": [
													{
														"constant": false,
														"id": 1168,
														"mutability": "mutable",
														"name": "eth_amount",
														"nameLocation": "25845:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1186,
														"src": "25837:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1167,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25837:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1172,
												"initialValue": {
													"arguments": [
														{
															"id": 1170,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "25866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1169,
														"name": "DCF_ETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "25858:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25858:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25837:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1176,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "25901:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1173,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "25885:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "25885:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25885:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "25885:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1182,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "25940:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1183,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "25947:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1179,
															"name": "dcoff_burn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "25920:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20Burnable_$1055",
																"typeString": "contract ERC20Burnable"
															}
														},
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burnFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1054,
														"src": "25920:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25920:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "25920:38:0"
											}
										]
									},
									"functionSelector": "94756aa7",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "market",
									"nameLocation": "25722:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "25745:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "25729:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25729:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "25761:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "25753:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25728:44:0"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25781:0:0"
									},
									"scope": 1330,
									"src": "25713:262:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "26044:385:0",
										"statements": [
											{
												"assignments": [
													1195
												],
												"declarations": [
													{
														"constant": false,
														"id": 1195,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "26058:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "26050:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1194,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26050:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1198,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "26080:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_treasury_$1330",
																	"typeString": "contract treasury"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_treasury_$1330",
																	"typeString": "contract treasury"
																}
															],
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26072:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1196,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "26072:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26072:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "26072:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26050:43:0"
											},
											{
												"assignments": [
													1203
												],
												"declarations": [
													{
														"constant": false,
														"id": 1203,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "26107:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "26099:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1202,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26099:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1211,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1208,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "26145:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$1330",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$1330",
																		"typeString": "contract treasury"
																	}
																],
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26137:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1206,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26137:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26137:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1204,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "26121:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 366,
														"src": "26121:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26121:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26099:52:0"
											},
											{
												"assignments": [
													1213
												],
												"declarations": [
													{
														"constant": false,
														"id": 1213,
														"mutability": "mutable",
														"name": "Variable_dcf",
														"nameLocation": "26169:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "26161:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1212,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26161:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1218,
												"initialValue": {
													"arguments": [
														{
															"id": 1216,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "26200:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1214,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "26184:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 196,
														"src": "26184:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26184:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26161:50:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1219,
														"name": "Variable_dcf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "26221:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1220,
																"name": "dcoff",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "26236:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$409",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 358,
															"src": "26236:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26236:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26221:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1231,
												"nodeType": "IfStatement",
												"src": "26218:87:0",
												"trueBody": {
													"id": 1230,
													"nodeType": "Block",
													"src": "26256:49:0",
													"statements": [
														{
															"expression": {
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1224,
																	"name": "Variable_dcf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1213,
																	"src": "26264:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1225,
																			"name": "dcoff",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1065,
																			"src": "26279:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$409",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 358,
																		"src": "26279:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26279:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26264:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1229,
															"nodeType": "ExpressionStatement",
															"src": "26264:34:0"
														}
													]
												}
											},
											{
												"assignments": [
													1233
												],
												"declarations": [
													{
														"constant": false,
														"id": 1233,
														"mutability": "mutable",
														"name": "Variable_eth",
														"nameLocation": "26319:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "26311:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1232,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26311:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1238,
												"initialValue": {
													"arguments": [
														{
															"id": 1236,
															"name": "Variable_dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "26340:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1234,
															"name": "K",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "26334:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 241,
														"src": "26334:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26334:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26311:42:0"
											},
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "26367:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "26359:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1239,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26359:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1245,
												"initialValue": {
													"arguments": [
														{
															"id": 1243,
															"name": "Variable_eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "26392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1241,
															"name": "_eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "26376:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "26376:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26376:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26359:46:0"
											},
											{
												"expression": {
													"id": 1246,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1240,
													"src": "26418:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1193,
												"id": 1247,
												"nodeType": "Return",
												"src": "26411:13:0"
											}
										]
									},
									"functionSelector": "3a23bf49",
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DCF_ETH",
									"nameLocation": "25989:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "26005:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "25997:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25996:20:0"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "26036:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26035:9:0"
									},
									"scope": 1330,
									"src": "25980:449:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "26498:287:0",
										"statements": [
											{
												"assignments": [
													1257
												],
												"declarations": [
													{
														"constant": false,
														"id": 1257,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "26512:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1297,
														"src": "26504:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1256,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26504:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1263,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1260,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "26534:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_treasury_$1330",
																	"typeString": "contract treasury"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_treasury_$1330",
																	"typeString": "contract treasury"
																}
															],
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26526:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1258,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "26526:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26526:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "26526:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26504:43:0"
											},
											{
												"assignments": [
													1265
												],
												"declarations": [
													{
														"constant": false,
														"id": 1265,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "26561:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1297,
														"src": "26553:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1264,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26553:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1273,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1270,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "26599:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$1330",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$1330",
																		"typeString": "contract treasury"
																	}
																],
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26591:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1268,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26591:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26591:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1266,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "26575:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															}
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 366,
														"src": "26575:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26575:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26553:52:0"
											},
											{
												"assignments": [
													1275
												],
												"declarations": [
													{
														"constant": false,
														"id": 1275,
														"mutability": "mutable",
														"name": "Variable_eth",
														"nameLocation": "26619:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1297,
														"src": "26611:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1274,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26611:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1280,
												"initialValue": {
													"arguments": [
														{
															"id": 1278,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "26650:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1276,
															"name": "_eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "26634:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 196,
														"src": "26634:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26634:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26611:50:0"
											},
											{
												"assignments": [
													1282
												],
												"declarations": [
													{
														"constant": false,
														"id": 1282,
														"mutability": "mutable",
														"name": "Variable_dcf",
														"nameLocation": "26675:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1297,
														"src": "26667:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26667:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1287,
												"initialValue": {
													"arguments": [
														{
															"id": 1285,
															"name": "Variable_eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "26696:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1283,
															"name": "K",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "26690:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 241,
														"src": "26690:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26690:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26667:42:0"
											},
											{
												"assignments": [
													1289
												],
												"declarations": [
													{
														"constant": false,
														"id": 1289,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "26723:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1297,
														"src": "26715:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1288,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26715:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1294,
												"initialValue": {
													"arguments": [
														{
															"id": 1292,
															"name": "Variable_dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "26748:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1290,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "26732:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "26732:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26732:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26715:46:0"
											},
											{
												"expression": {
													"id": 1295,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1289,
													"src": "26774:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1255,
												"id": 1296,
												"nodeType": "Return",
												"src": "26767:13:0"
											}
										]
									},
									"functionSelector": "97dedb1d",
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ETH_DCF",
									"nameLocation": "26443:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "26459:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "26451:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26450:20:0"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "26490:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26490:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26489:9:0"
									},
									"scope": 1330,
									"src": "26434:351:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "26834:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1310,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "26872:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_treasury_$1330",
																			"typeString": "contract treasury"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_treasury_$1330",
																			"typeString": "contract treasury"
																		}
																	],
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26864:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1308,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "26864:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26864:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "26864:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1305,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "26848:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26840:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1303,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26840:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26840:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "26840:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26840:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "26840:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1318,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "26907:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1323,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "26937:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_treasury_$1330",
																				"typeString": "contract treasury"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_treasury_$1330",
																				"typeString": "contract treasury"
																			}
																		],
																		"id": 1322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "26929:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1321,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "26929:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26929:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1319,
																	"name": "dcoff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "26913:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$409",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 366,
																"src": "26913:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26913:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1315,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "26892:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															}
														},
														"id": 1317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 376,
														"src": "26892:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26892:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "26892:52:0"
											}
										]
									},
									"functionSelector": "dac3fad4",
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1301,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1300,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1106,
												"src": "26825:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26825:9:0"
										}
									],
									"name": "Warning_protect",
									"nameLocation": "26799:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26814:2:0"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26834:0:0"
									},
									"scope": 1330,
									"src": "26790:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1331,
							"src": "24917:2047:0",
							"usedErrors": []
						}
					],
					"src": "108:26856:0"
				},
				"id": 0
			}
		}
	}
}