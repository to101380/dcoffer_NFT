{
	"id": "8ab110f6a36aa6510b9b0dbb0a10c03c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"subscribe.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\n\r\ninterface IERC20 {   \r\n    function transfer(address to, uint256 amount) external returns (bool);   \r\n}\r\n\r\n\r\ncontract  RaiseFunds{\r\n    using SafeMath for uint;\r\n\r\n    IERC20 dcf = IERC20(address(0xB1Cd8ad16899318DA9F0A2c9933d599eB9cdC10c));\r\n\r\n    uint price = 3000000000000;\r\n    address owner;\r\n\r\n    constructor(){\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function subscribe()external payable{\r\n        require(msg.value >= 1e16);\r\n        uint dcf_amount = uint(1e18).mul(msg.value).div(price);\r\n        dcf.transfer(msg.sender,dcf_amount);        \r\n    }\r\n\r\n\r\n    function SafeTrans()external{\r\n        require(msg.sender == owner);\r\n        payable(owner).transfer(address(this).balance);\r\n    }  \r\n\r\n\r\n    function ViewPrice()public view returns(uint){\r\n        return price;\r\n    } \r\n\r\n    function setPrice(uint _price)external {\r\n        require(msg.sender == owner);\r\n        price = _price;\r\n    } \r\n\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"subscribe.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"subscribe.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"subscribe.sol\":{\"keccak256\":\"0x1ab25a9e8818e15bc83090b5f1c32c105dc5b6beae9f963e82b34f28048c19ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c29e59f8ffb0782184c0dcf1ec7329f82fe27c878112235b0af3323e0fb3d976\",\"dweb:/ipfs/QmYoVShTyinWdbTvsFaN6HYgAQYDGxP16W1C5oFo8mrtoL\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"RaiseFunds": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "SafeTrans",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ViewPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "subscribe",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"subscribe.sol\":7047:7860  contract  RaiseFunds{... */\n  mstore(0x40, 0x80)\n    /* \"subscribe.sol\":7134:7176  0xB1Cd8ad16899318DA9F0A2c9933d599eB9cdC10c */\n  0xb1cd8ad16899318da9f0a2c9933d599eb9cdc10c\n    /* \"subscribe.sol\":7106:7178  IERC20 dcf = IERC20(address(0xB1Cd8ad16899318DA9F0A2c9933d599eB9cdC10c)) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"subscribe.sol\":7200:7213  3000000000000 */\n  0x02ba7def3000\n    /* \"subscribe.sol\":7187:7213  uint price = 3000000000000 */\n  0x01\n  sstore\n    /* \"subscribe.sol\":7242:7292  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"subscribe.sol\":7274:7284  msg.sender */\n  caller\n    /* \"subscribe.sol\":7266:7271  owner */\n  0x02\n  0x00\n    /* \"subscribe.sol\":7266:7284  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"subscribe.sol\":7047:7860  contract  RaiseFunds{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"subscribe.sol\":7047:7860  contract  RaiseFunds{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x72dc1cae\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x7a2b37b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8f449a05\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x91b7f5ed\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"subscribe.sol\":7510:7642  function SafeTrans()external{... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"subscribe.sol\":7654:7730  function ViewPrice()public view returns(uint){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"subscribe.sol\":7300:7500  function subscribe()external payable{... */\n    tag_4:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"subscribe.sol\":7739:7850  function setPrice(uint _price)external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"subscribe.sol\":7510:7642  function SafeTrans()external{... */\n    tag_8:\n        /* \"subscribe.sol\":7571:7576  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"subscribe.sol\":7557:7576  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"subscribe.sol\":7557:7567  msg.sender */\n      caller\n        /* \"subscribe.sol\":7557:7576  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"subscribe.sol\":7549:7577  require(msg.sender == owner) */\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n        /* \"subscribe.sol\":7596:7601  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"subscribe.sol\":7588:7611  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"subscribe.sol\":7588:7634  payable(owner).transfer(address(this).balance) */\n      0x08fc\n        /* \"subscribe.sol\":7612:7633  address(this).balance */\n      selfbalance\n        /* \"subscribe.sol\":7588:7634  payable(owner).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n        /* \"subscribe.sol\":7510:7642  function SafeTrans()external{... */\n      jump\t// out\n        /* \"subscribe.sol\":7654:7730  function ViewPrice()public view returns(uint){... */\n    tag_11:\n        /* \"subscribe.sol\":7694:7698  uint */\n      0x00\n        /* \"subscribe.sol\":7717:7722  price */\n      sload(0x01)\n        /* \"subscribe.sol\":7710:7722  return price */\n      swap1\n      pop\n        /* \"subscribe.sol\":7654:7730  function ViewPrice()public view returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"subscribe.sol\":7300:7500  function subscribe()external payable{... */\n    tag_15:\n        /* \"subscribe.sol\":7368:7372  1e16 */\n      0x2386f26fc10000\n        /* \"subscribe.sol\":7355:7364  msg.value */\n      callvalue\n        /* \"subscribe.sol\":7355:7372  msg.value >= 1e16 */\n      lt\n      iszero\n        /* \"subscribe.sol\":7347:7373  require(msg.value >= 1e16) */\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n        /* \"subscribe.sol\":7384:7399  uint dcf_amount */\n      0x00\n        /* \"subscribe.sol\":7402:7438  uint(1e18).mul(msg.value).div(price) */\n      tag_28\n        /* \"subscribe.sol\":7432:7437  price */\n      sload(0x01)\n        /* \"subscribe.sol\":7402:7427  uint(1e18).mul(msg.value) */\n      tag_29\n        /* \"subscribe.sol\":7417:7426  msg.value */\n      callvalue\n        /* \"subscribe.sol\":7407:7411  1e18 */\n      0x0de0b6b3a7640000\n        /* \"subscribe.sol\":7402:7416  uint(1e18).mul */\n      tag_30\n      swap1\n        /* \"subscribe.sol\":7402:7427  uint(1e18).mul(msg.value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_29:\n        /* \"subscribe.sol\":7402:7431  uint(1e18).mul(msg.value).div */\n      tag_31\n      swap1\n        /* \"subscribe.sol\":7402:7438  uint(1e18).mul(msg.value).div(price) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_28:\n        /* \"subscribe.sol\":7384:7438  uint dcf_amount = uint(1e18).mul(msg.value).div(price) */\n      swap1\n      pop\n        /* \"subscribe.sol\":7449:7452  dcf */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"subscribe.sol\":7449:7461  dcf.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"subscribe.sol\":7462:7472  msg.sender */\n      caller\n        /* \"subscribe.sol\":7473:7483  dcf_amount */\n      dup4\n        /* \"subscribe.sol\":7449:7484  dcf.transfer(msg.sender,dcf_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_32\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      pop\n        /* \"subscribe.sol\":7336:7500  {... */\n      pop\n        /* \"subscribe.sol\":7300:7500  function subscribe()external payable{... */\n      jump\t// out\n        /* \"subscribe.sol\":7739:7850  function setPrice(uint _price)external {... */\n    tag_20:\n        /* \"subscribe.sol\":7811:7816  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"subscribe.sol\":7797:7816  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"subscribe.sol\":7797:7807  msg.sender */\n      caller\n        /* \"subscribe.sol\":7797:7816  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"subscribe.sol\":7789:7817  require(msg.sender == owner) */\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n        /* \"subscribe.sol\":7836:7842  _price */\n      dup1\n        /* \"subscribe.sol\":7828:7833  price */\n      0x01\n        /* \"subscribe.sol\":7828:7842  price = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"subscribe.sol\":7739:7850  function setPrice(uint _price)external {... */\n      pop\n      jump\t// out\n        /* \"subscribe.sol\":3509:3607  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_30:\n        /* \"subscribe.sol\":3567:3574  uint256 */\n      0x00\n        /* \"subscribe.sol\":3598:3599  b */\n      dup2\n        /* \"subscribe.sol\":3594:3595  a */\n      dup4\n        /* \"subscribe.sol\":3594:3599  a * b */\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"subscribe.sol\":3587:3599  return a * b */\n      swap1\n      pop\n        /* \"subscribe.sol\":3509:3607  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"subscribe.sol\":3908:4006  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_31:\n        /* \"subscribe.sol\":3966:3973  uint256 */\n      0x00\n        /* \"subscribe.sol\":3997:3998  b */\n      dup2\n        /* \"subscribe.sol\":3993:3994  a */\n      dup4\n        /* \"subscribe.sol\":3993:3998  a / b */\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"subscribe.sol\":3986:3998  return a / b */\n      swap1\n      pop\n        /* \"subscribe.sol\":3908:4006  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_46:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_47:\n        /* \"#utility.yul\":177:201   */\n      tag_64\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_46\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_13:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_66\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_47\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_49:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_51:\n        /* \"#utility.yul\":842:866   */\n      tag_71\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_46\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_72\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_72:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_52:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_74\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_51\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_19:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_77\n      tag_49\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1118:1237   */\n    tag_76:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_78\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_52\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_53:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_54:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_81\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_53\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_55:\n        /* \"#utility.yul\":1698:1722   */\n      tag_83\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_54\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:2067   */\n    tag_33:\n        /* \"#utility.yul\":1856:1860   */\n      0x00\n        /* \"#utility.yul\":1894:1896   */\n      0x40\n        /* \"#utility.yul\":1883:1892   */\n      dup3\n        /* \"#utility.yul\":1879:1897   */\n      add\n        /* \"#utility.yul\":1871:1897   */\n      swap1\n      pop\n        /* \"#utility.yul\":1907:1978   */\n      tag_85\n        /* \"#utility.yul\":1975:1976   */\n      0x00\n        /* \"#utility.yul\":1964:1973   */\n      dup4\n        /* \"#utility.yul\":1960:1977   */\n      add\n        /* \"#utility.yul\":1951:1957   */\n      dup6\n        /* \"#utility.yul\":1907:1978   */\n      tag_55\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1988:2060   */\n      tag_86\n        /* \"#utility.yul\":2056:2058   */\n      0x20\n        /* \"#utility.yul\":2045:2054   */\n      dup4\n        /* \"#utility.yul\":2041:2059   */\n      add\n        /* \"#utility.yul\":2032:2038   */\n      dup5\n        /* \"#utility.yul\":1988:2060   */\n      tag_47\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1735:2067   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2073:2163   */\n    tag_56:\n        /* \"#utility.yul\":2107:2114   */\n      0x00\n        /* \"#utility.yul\":2150:2155   */\n      dup2\n        /* \"#utility.yul\":2143:2156   */\n      iszero\n        /* \"#utility.yul\":2136:2157   */\n      iszero\n        /* \"#utility.yul\":2125:2157   */\n      swap1\n      pop\n        /* \"#utility.yul\":2073:2163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2169:2285   */\n    tag_57:\n        /* \"#utility.yul\":2239:2260   */\n      tag_89\n        /* \"#utility.yul\":2254:2259   */\n      dup2\n        /* \"#utility.yul\":2239:2260   */\n      tag_56\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2232:2237   */\n      dup2\n        /* \"#utility.yul\":2229:2261   */\n      eq\n        /* \"#utility.yul\":2219:2279   */\n      tag_90\n      jumpi\n        /* \"#utility.yul\":2275:2276   */\n      0x00\n        /* \"#utility.yul\":2272:2273   */\n      dup1\n        /* \"#utility.yul\":2265:2277   */\n      revert\n        /* \"#utility.yul\":2219:2279   */\n    tag_90:\n        /* \"#utility.yul\":2169:2285   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2291:2428   */\n    tag_58:\n        /* \"#utility.yul\":2345:2350   */\n      0x00\n        /* \"#utility.yul\":2376:2382   */\n      dup2\n        /* \"#utility.yul\":2370:2383   */\n      mload\n        /* \"#utility.yul\":2361:2383   */\n      swap1\n      pop\n        /* \"#utility.yul\":2392:2422   */\n      tag_92\n        /* \"#utility.yul\":2416:2421   */\n      dup2\n        /* \"#utility.yul\":2392:2422   */\n      tag_57\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2291:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2779   */\n    tag_37:\n        /* \"#utility.yul\":2501:2507   */\n      0x00\n        /* \"#utility.yul\":2550:2552   */\n      0x20\n        /* \"#utility.yul\":2538:2547   */\n      dup3\n        /* \"#utility.yul\":2529:2536   */\n      dup5\n        /* \"#utility.yul\":2525:2548   */\n      sub\n        /* \"#utility.yul\":2521:2553   */\n      slt\n        /* \"#utility.yul\":2518:2637   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":2556:2635   */\n      tag_95\n      tag_49\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2518:2637   */\n    tag_94:\n        /* \"#utility.yul\":2676:2677   */\n      0x00\n        /* \"#utility.yul\":2701:2762   */\n      tag_96\n        /* \"#utility.yul\":2754:2761   */\n      dup5\n        /* \"#utility.yul\":2745:2751   */\n      dup3\n        /* \"#utility.yul\":2734:2743   */\n      dup6\n        /* \"#utility.yul\":2730:2752   */\n      add\n        /* \"#utility.yul\":2701:2762   */\n      tag_58\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2691:2762   */\n      swap2\n      pop\n        /* \"#utility.yul\":2647:2772   */\n      pop\n        /* \"#utility.yul\":2434:2779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2785:2965   */\n    tag_59:\n        /* \"#utility.yul\":2833:2910   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2830:2831   */\n      0x00\n        /* \"#utility.yul\":2823:2911   */\n      mstore\n        /* \"#utility.yul\":2930:2934   */\n      0x11\n        /* \"#utility.yul\":2927:2928   */\n      0x04\n        /* \"#utility.yul\":2920:2935   */\n      mstore\n        /* \"#utility.yul\":2954:2958   */\n      0x24\n        /* \"#utility.yul\":2951:2952   */\n      0x00\n        /* \"#utility.yul\":2944:2959   */\n      revert\n        /* \"#utility.yul\":2971:3319   */\n    tag_42:\n        /* \"#utility.yul\":3011:3018   */\n      0x00\n        /* \"#utility.yul\":3034:3054   */\n      tag_99\n        /* \"#utility.yul\":3052:3053   */\n      dup3\n        /* \"#utility.yul\":3034:3054   */\n      tag_46\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3029:3054   */\n      swap2\n      pop\n        /* \"#utility.yul\":3068:3088   */\n      tag_100\n        /* \"#utility.yul\":3086:3087   */\n      dup4\n        /* \"#utility.yul\":3068:3088   */\n      tag_46\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3063:3088   */\n      swap3\n      pop\n        /* \"#utility.yul\":3256:3257   */\n      dup2\n        /* \"#utility.yul\":3188:3254   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3184:3258   */\n      div\n        /* \"#utility.yul\":3181:3182   */\n      dup4\n        /* \"#utility.yul\":3178:3259   */\n      gt\n        /* \"#utility.yul\":3173:3174   */\n      dup3\n        /* \"#utility.yul\":3166:3175   */\n      iszero\n        /* \"#utility.yul\":3159:3176   */\n      iszero\n        /* \"#utility.yul\":3155:3260   */\n      and\n        /* \"#utility.yul\":3152:3283   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":3263:3281   */\n      tag_102\n      tag_59\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3152:3283   */\n    tag_101:\n        /* \"#utility.yul\":3311:3312   */\n      dup3\n        /* \"#utility.yul\":3308:3309   */\n      dup3\n        /* \"#utility.yul\":3304:3313   */\n      mul\n        /* \"#utility.yul\":3293:3313   */\n      swap1\n      pop\n        /* \"#utility.yul\":2971:3319   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3325:3505   */\n    tag_60:\n        /* \"#utility.yul\":3373:3450   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3370:3371   */\n      0x00\n        /* \"#utility.yul\":3363:3451   */\n      mstore\n        /* \"#utility.yul\":3470:3474   */\n      0x12\n        /* \"#utility.yul\":3467:3468   */\n      0x04\n        /* \"#utility.yul\":3460:3475   */\n      mstore\n        /* \"#utility.yul\":3494:3498   */\n      0x24\n        /* \"#utility.yul\":3491:3492   */\n      0x00\n        /* \"#utility.yul\":3484:3499   */\n      revert\n        /* \"#utility.yul\":3511:3696   */\n    tag_45:\n        /* \"#utility.yul\":3551:3552   */\n      0x00\n        /* \"#utility.yul\":3568:3588   */\n      tag_105\n        /* \"#utility.yul\":3586:3587   */\n      dup3\n        /* \"#utility.yul\":3568:3588   */\n      tag_46\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3563:3588   */\n      swap2\n      pop\n        /* \"#utility.yul\":3602:3622   */\n      tag_106\n        /* \"#utility.yul\":3620:3621   */\n      dup4\n        /* \"#utility.yul\":3602:3622   */\n      tag_46\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3597:3622   */\n      swap3\n      pop\n        /* \"#utility.yul\":3641:3642   */\n      dup3\n        /* \"#utility.yul\":3631:3666   */\n      tag_107\n      jumpi\n        /* \"#utility.yul\":3646:3664   */\n      tag_108\n      tag_60\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3631:3666   */\n    tag_107:\n        /* \"#utility.yul\":3688:3689   */\n      dup3\n        /* \"#utility.yul\":3685:3686   */\n      dup3\n        /* \"#utility.yul\":3681:3690   */\n      div\n        /* \"#utility.yul\":3676:3690   */\n      swap1\n      pop\n        /* \"#utility.yul\":3511:3696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220289aeba1478e655946dab94c366804d5dc20b990f0e9eb8f1294ae65caa169c064736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_347": {
									"entryPoint": null,
									"id": 347,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273b1cd8ad16899318da9f0a2c9933d599eb9cdc10c6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506502ba7def300060015534801561006e57600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610581806100bf6000396000f3fe60806040526004361061003f5760003560e01c806372dc1cae146100445780637a2b37b31461005b5780638f449a051461008657806391b7f5ed14610090575b600080fd5b34801561005057600080fd5b506100596100b9565b005b34801561006757600080fd5b5061007061017e565b60405161007d919061031a565b60405180910390f35b61008e610188565b005b34801561009c57600080fd5b506100b760048036038101906100b29190610366565b610271565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011357600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561017b573d6000803e3d6000fd5b50565b6000600154905090565b662386f26fc1000034101561019c57600080fd5b60006101cd6001546101bf34670de0b6b3a76400006102d590919063ffffffff16565b6102eb90919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161022a9291906103d4565b6020604051808303816000875af1158015610249573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026d9190610435565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102cb57600080fd5b8060018190555050565b600081836102e39190610491565b905092915050565b600081836102f9919061051a565b905092915050565b6000819050919050565b61031481610301565b82525050565b600060208201905061032f600083018461030b565b92915050565b600080fd5b61034381610301565b811461034e57600080fd5b50565b6000813590506103608161033a565b92915050565b60006020828403121561037c5761037b610335565b5b600061038a84828501610351565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103be82610393565b9050919050565b6103ce816103b3565b82525050565b60006040820190506103e960008301856103c5565b6103f6602083018461030b565b9392505050565b60008115159050919050565b610412816103fd565b811461041d57600080fd5b50565b60008151905061042f81610409565b92915050565b60006020828403121561044b5761044a610335565b5b600061045984828501610420565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061049c82610301565b91506104a783610301565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104e0576104df610462565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061052582610301565b915061053083610301565b9250826105405761053f6104eb565b5b82820490509291505056fea2646970667358221220289aeba1478e655946dab94c366804d5dc20b990f0e9eb8f1294ae65caa169c064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xB1CD8AD16899318DA9F0A2C9933D599EB9CDC10C PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH6 0x2BA7DEF3000 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x581 DUP1 PUSH2 0xBF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72DC1CAE EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x7A2B37B3 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8F449A05 EQ PUSH2 0x86 JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0x90 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xB9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x31A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E PUSH2 0x188 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x366 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x17B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE LT ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CD PUSH1 0x1 SLOAD PUSH2 0x1BF CALLVALUE PUSH8 0xDE0B6B3A7640000 PUSH2 0x2D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2EB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22A SWAP3 SWAP2 SWAP1 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x249 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x435 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x491 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x51A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x314 DUP2 PUSH2 0x301 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x343 DUP2 PUSH2 0x301 JUMP JUMPDEST DUP2 EQ PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x360 DUP2 PUSH2 0x33A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37C JUMPI PUSH2 0x37B PUSH2 0x335 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38A DUP5 DUP3 DUP6 ADD PUSH2 0x351 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BE DUP3 PUSH2 0x393 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CE DUP2 PUSH2 0x3B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3E9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x3F6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x30B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x412 DUP2 PUSH2 0x3FD JUMP JUMPDEST DUP2 EQ PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x42F DUP2 PUSH2 0x409 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44B JUMPI PUSH2 0x44A PUSH2 0x335 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x459 DUP5 DUP3 DUP6 ADD PUSH2 0x420 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x49C DUP3 PUSH2 0x301 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A7 DUP4 PUSH2 0x301 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4E0 JUMPI PUSH2 0x4DF PUSH2 0x462 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x525 DUP3 PUSH2 0x301 JUMP JUMPDEST SWAP2 POP PUSH2 0x530 DUP4 PUSH2 0x301 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x540 JUMPI PUSH2 0x53F PUSH2 0x4EB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SWAP11 0xEB LOG1 SELFBALANCE DUP15 PUSH6 0x5946DAB94C36 PUSH9 0x4D5DC20B990F0E9EB DUP16 SLT SWAP5 0xAE PUSH6 0xCAA169C06473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "7047:813:0:-:0;;;7134:42;7106:72;;;;;;;;;;;;;;;;;;;;7200:13;7187:26;;7242:50;;;;;;;;;;7274:10;7266:5;;:18;;;;;;;;;;;;;;;;;;7047:813;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@SafeTrans_403": {
									"entryPoint": 185,
									"id": 403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ViewPrice_411": {
									"entryPoint": 382,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@div_220": {
									"entryPoint": 747,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_205": {
									"entryPoint": 725,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@setPrice_428": {
									"entryPoint": 625,
									"id": 428,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@subscribe_380": {
									"entryPoint": 392,
									"id": 380,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 980,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1122,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1259,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3699:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"src": "442:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:1"
															},
															"nodeType": "YulIf",
															"src": "822:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:1",
														"type": ""
													}
												],
												"src": "769:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:1",
														"type": ""
													}
												],
												"src": "897:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:1"
															},
															"nodeType": "YulIf",
															"src": "1118:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1247:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1291:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:1",
														"type": ""
													}
												],
												"src": "1042:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:1",
														"type": ""
													}
												],
												"src": "1377:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:1",
														"type": ""
													}
												],
												"src": "1509:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1671:3:1",
														"type": ""
													}
												],
												"src": "1611:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1861:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1871:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1883:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1894:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1879:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1879:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1871:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1951:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1964:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1975:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1960:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1960:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1907:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1907:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1907:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2032:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2045:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2056:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2041:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2041:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1988:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1988:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1988:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1825:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1837:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1845:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1856:4:1",
														"type": ""
													}
												],
												"src": "1735:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2115:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2125:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2150:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2143:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2136:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2136:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2125:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2097:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2107:7:1",
														"type": ""
													}
												],
												"src": "2073:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2209:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2263:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2272:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2275:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2265:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2265:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2265:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2232:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2254:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2239:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2239:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2229:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2229:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2222:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2222:40:1"
															},
															"nodeType": "YulIf",
															"src": "2219:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2202:5:1",
														"type": ""
													}
												],
												"src": "2169:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2351:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2361:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2376:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2370:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2361:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2416:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2392:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2392:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2392:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2329:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2337:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2345:5:1",
														"type": ""
													}
												],
												"src": "2291:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2508:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2554:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2556:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2556:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2556:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2529:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2538:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2525:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2525:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2550:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2521:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2521:32:1"
															},
															"nodeType": "YulIf",
															"src": "2518:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2647:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2662:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2676:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2666:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2691:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2734:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2745:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2730:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2730:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2754:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2701:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2701:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2691:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2478:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2489:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2501:6:1",
														"type": ""
													}
												],
												"src": "2434:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2813:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2830:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2823:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2823:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2823:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2927:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2930:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2920:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2920:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2951:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2954:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2944:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2944:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2785:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3019:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3029:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3052:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3034:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3034:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3029:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3063:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3086:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3068:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3068:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3063:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3261:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3263:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3263:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3263:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3173:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3166:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3166:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3159:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3159:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3181:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3188:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3256:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "3184:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3184:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3178:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3178:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3155:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3155:105:1"
															},
															"nodeType": "YulIf",
															"src": "3152:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3293:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3308:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3311:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3304:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3304:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3293:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3002:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3005:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3011:7:1",
														"type": ""
													}
												],
												"src": "2971:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3353:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3370:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3373:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3363:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3363:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3363:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3467:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3470:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3460:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3460:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3460:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3491:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3494:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3484:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3484:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3484:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "3325:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3553:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3563:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3586:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3568:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3568:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3563:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3597:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3620:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3602:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3602:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3597:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3644:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "3646:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3646:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3646:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3641:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3634:9:1"
															},
															"nodeType": "YulIf",
															"src": "3631:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3676:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3685:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3688:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3681:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3681:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3676:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3542:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3545:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3551:1:1",
														"type": ""
													}
												],
												"src": "3511:185:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061003f5760003560e01c806372dc1cae146100445780637a2b37b31461005b5780638f449a051461008657806391b7f5ed14610090575b600080fd5b34801561005057600080fd5b506100596100b9565b005b34801561006757600080fd5b5061007061017e565b60405161007d919061031a565b60405180910390f35b61008e610188565b005b34801561009c57600080fd5b506100b760048036038101906100b29190610366565b610271565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011357600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561017b573d6000803e3d6000fd5b50565b6000600154905090565b662386f26fc1000034101561019c57600080fd5b60006101cd6001546101bf34670de0b6b3a76400006102d590919063ffffffff16565b6102eb90919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161022a9291906103d4565b6020604051808303816000875af1158015610249573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026d9190610435565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102cb57600080fd5b8060018190555050565b600081836102e39190610491565b905092915050565b600081836102f9919061051a565b905092915050565b6000819050919050565b61031481610301565b82525050565b600060208201905061032f600083018461030b565b92915050565b600080fd5b61034381610301565b811461034e57600080fd5b50565b6000813590506103608161033a565b92915050565b60006020828403121561037c5761037b610335565b5b600061038a84828501610351565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103be82610393565b9050919050565b6103ce816103b3565b82525050565b60006040820190506103e960008301856103c5565b6103f6602083018461030b565b9392505050565b60008115159050919050565b610412816103fd565b811461041d57600080fd5b50565b60008151905061042f81610409565b92915050565b60006020828403121561044b5761044a610335565b5b600061045984828501610420565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061049c82610301565b91506104a783610301565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104e0576104df610462565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061052582610301565b915061053083610301565b9250826105405761053f6104eb565b5b82820490509291505056fea2646970667358221220289aeba1478e655946dab94c366804d5dc20b990f0e9eb8f1294ae65caa169c064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72DC1CAE EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x7A2B37B3 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8F449A05 EQ PUSH2 0x86 JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0x90 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xB9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x31A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E PUSH2 0x188 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x366 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x17B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE LT ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CD PUSH1 0x1 SLOAD PUSH2 0x1BF CALLVALUE PUSH8 0xDE0B6B3A7640000 PUSH2 0x2D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2EB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22A SWAP3 SWAP2 SWAP1 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x249 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x435 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x491 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x51A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x314 DUP2 PUSH2 0x301 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x343 DUP2 PUSH2 0x301 JUMP JUMPDEST DUP2 EQ PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x360 DUP2 PUSH2 0x33A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37C JUMPI PUSH2 0x37B PUSH2 0x335 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38A DUP5 DUP3 DUP6 ADD PUSH2 0x351 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BE DUP3 PUSH2 0x393 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CE DUP2 PUSH2 0x3B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3E9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x3F6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x30B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x412 DUP2 PUSH2 0x3FD JUMP JUMPDEST DUP2 EQ PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x42F DUP2 PUSH2 0x409 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44B JUMPI PUSH2 0x44A PUSH2 0x335 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x459 DUP5 DUP3 DUP6 ADD PUSH2 0x420 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x49C DUP3 PUSH2 0x301 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A7 DUP4 PUSH2 0x301 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4E0 JUMPI PUSH2 0x4DF PUSH2 0x462 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x525 DUP3 PUSH2 0x301 JUMP JUMPDEST SWAP2 POP PUSH2 0x530 DUP4 PUSH2 0x301 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x540 JUMPI PUSH2 0x53F PUSH2 0x4EB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SWAP11 0xEB LOG1 SELFBALANCE DUP15 PUSH6 0x5946DAB94C36 PUSH9 0x4D5DC20B990F0E9EB DUP16 SLT SWAP5 0xAE PUSH6 0xCAA169C06473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "7047:813:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7510:132;;;;;;;;;;;;;:::i;:::-;;7654:76;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7300:200;;;:::i;:::-;;7739:111;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7510:132;7571:5;;;;;;;;;;;7557:19;;:10;:19;;;7549:28;;;;;;7596:5;;;;;;;;;;;7588:23;;:46;7612:21;7588:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7510:132::o;7654:76::-;7694:4;7717:5;;7710:12;;7654:76;:::o;7300:200::-;7368:4;7355:9;:17;;7347:26;;;;;;7384:15;7402:36;7432:5;;7402:25;7417:9;7407:4;7402:14;;:25;;;;:::i;:::-;:29;;:36;;;;:::i;:::-;7384:54;;7449:3;;;;;;;;;;:12;;;7462:10;7473;7449:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7336:164;7300:200::o;7739:111::-;7811:5;;;;;;;;;;;7797:19;;:10;:19;;;7789:28;;;;;;7836:6;7828:5;:14;;;;7739:111;:::o;3509:98::-;3567:7;3598:1;3594;:5;;;;:::i;:::-;3587:12;;3509:98;;;;:::o;3908:::-;3966:7;3997:1;3993;:5;;;;:::i;:::-;3986:12;;3908:98;;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:332::-;1856:4;1894:2;1883:9;1879:18;1871:26;;1907:71;1975:1;1964:9;1960:17;1951:6;1907:71;:::i;:::-;1988:72;2056:2;2045:9;2041:18;2032:6;1988:72;:::i;:::-;1735:332;;;;;:::o;2073:90::-;2107:7;2150:5;2143:13;2136:21;2125:32;;2073:90;;;:::o;2169:116::-;2239:21;2254:5;2239:21;:::i;:::-;2232:5;2229:32;2219:60;;2275:1;2272;2265:12;2219:60;2169:116;:::o;2291:137::-;2345:5;2376:6;2370:13;2361:22;;2392:30;2416:5;2392:30;:::i;:::-;2291:137;;;;:::o;2434:345::-;2501:6;2550:2;2538:9;2529:7;2525:23;2521:32;2518:119;;;2556:79;;:::i;:::-;2518:119;2676:1;2701:61;2754:7;2745:6;2734:9;2730:22;2701:61;:::i;:::-;2691:71;;2647:125;2434:345;;;;:::o;2785:180::-;2833:77;2830:1;2823:88;2930:4;2927:1;2920:15;2954:4;2951:1;2944:15;2971:348;3011:7;3034:20;3052:1;3034:20;:::i;:::-;3029:25;;3068:20;3086:1;3068:20;:::i;:::-;3063:25;;3256:1;3188:66;3184:74;3181:1;3178:81;3173:1;3166:9;3159:17;3155:105;3152:131;;;3263:18;;:::i;:::-;3152:131;3311:1;3308;3304:9;3293:20;;2971:348;;;;:::o;3325:180::-;3373:77;3370:1;3363:88;3470:4;3467:1;3460:15;3494:4;3491:1;3484:15;3511:185;3551:1;3568:20;3586:1;3568:20;:::i;:::-;3563:25;;3602:20;3620:1;3602:20;:::i;:::-;3597:25;;3641:1;3631:35;;3646:18;;:::i;:::-;3631:35;3688:1;3685;3681:9;3676:14;;3511:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "281800",
								"executionCost": "70963",
								"totalCost": "352763"
							},
							"external": {
								"SafeTrans()": "infinite",
								"ViewPrice()": "2437",
								"setPrice(uint256)": "24734",
								"subscribe()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7047,
									"end": 7860,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 7047,
									"end": 7860,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7047,
									"end": 7860,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7134,
									"end": 7176,
									"name": "PUSH",
									"source": 0,
									"value": "B1CD8AD16899318DA9F0A2C9933D599EB9CDC10C"
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7106,
									"end": 7178,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7200,
									"end": 7213,
									"name": "PUSH",
									"source": 0,
									"value": "2BA7DEF3000"
								},
								{
									"begin": 7187,
									"end": 7213,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7187,
									"end": 7213,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7242,
									"end": 7292,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 7242,
									"end": 7292,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7242,
									"end": 7292,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7242,
									"end": 7292,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7242,
									"end": 7292,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7242,
									"end": 7292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7242,
									"end": 7292,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7242,
									"end": 7292,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7242,
									"end": 7292,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7242,
									"end": 7292,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7242,
									"end": 7292,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7274,
									"end": 7284,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 7266,
									"end": 7271,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7266,
									"end": 7271,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7266,
									"end": 7284,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7266,
									"end": 7284,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7266,
									"end": 7284,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7266,
									"end": 7284,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7266,
									"end": 7284,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7266,
									"end": 7284,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7266,
									"end": 7284,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7266,
									"end": 7284,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7266,
									"end": 7284,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7266,
									"end": 7284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7266,
									"end": 7284,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7266,
									"end": 7284,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7266,
									"end": 7284,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7266,
									"end": 7284,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7266,
									"end": 7284,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7266,
									"end": 7284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7266,
									"end": 7284,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7266,
									"end": 7284,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7047,
									"end": 7860,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7047,
									"end": 7860,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7047,
									"end": 7860,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7047,
									"end": 7860,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7047,
									"end": 7860,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7047,
									"end": 7860,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7047,
									"end": 7860,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220289aeba1478e655946dab94c366804d5dc20b990f0e9eb8f1294ae65caa169c064736f6c634300080d0033",
									".code": [
										{
											"begin": 7047,
											"end": 7860,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "PUSH",
											"source": 0,
											"value": "72DC1CAE"
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "PUSH",
											"source": 0,
											"value": "7A2B37B3"
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "PUSH",
											"source": 0,
											"value": "8F449A05"
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "PUSH",
											"source": 0,
											"value": "91B7F5ED"
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7860,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7500,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7300,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7300,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7300,
											"end": 7500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7300,
											"end": 7500,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7300,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7500,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7571,
											"end": 7576,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7571,
											"end": 7576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7571,
											"end": 7576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7571,
											"end": 7576,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7571,
											"end": 7576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7571,
											"end": 7576,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7571,
											"end": 7576,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7571,
											"end": 7576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7571,
											"end": 7576,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7571,
											"end": 7576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7571,
											"end": 7576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7557,
											"end": 7576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7557,
											"end": 7576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7557,
											"end": 7567,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7557,
											"end": 7576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7557,
											"end": 7576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7557,
											"end": 7576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7549,
											"end": 7577,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 7577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7577,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7577,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7549,
											"end": 7577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7601,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7596,
											"end": 7601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7596,
											"end": 7601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7601,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7596,
											"end": 7601,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7601,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7596,
											"end": 7601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7588,
											"end": 7611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 7612,
											"end": 7633,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7510,
											"end": 7642,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7694,
											"end": 7698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7722,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7717,
											"end": 7722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7710,
											"end": 7722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7710,
											"end": 7722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7300,
											"end": 7500,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7300,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7372,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 7355,
											"end": 7364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7355,
											"end": 7372,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7355,
											"end": 7372,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7347,
											"end": 7373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7347,
											"end": 7373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7373,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7373,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7347,
											"end": 7373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7402,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7432,
											"end": 7437,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7432,
											"end": 7437,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7402,
											"end": 7427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 7417,
											"end": 7426,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7407,
											"end": 7411,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7402,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7402,
											"end": 7416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7402,
											"end": 7427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7402,
											"end": 7427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7402,
											"end": 7427,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7402,
											"end": 7427,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7402,
											"end": 7427,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7402,
											"end": 7427,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 7402,
											"end": 7427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7402,
											"end": 7431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7402,
											"end": 7431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7402,
											"end": 7438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7402,
											"end": 7438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7402,
											"end": 7438,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7402,
											"end": 7438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7402,
											"end": 7438,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7402,
											"end": 7438,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7402,
											"end": 7438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7461,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7461,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 7462,
											"end": 7472,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7483,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7500,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7816,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7811,
											"end": 7816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7811,
											"end": 7816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7816,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7811,
											"end": 7816,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7816,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7816,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7811,
											"end": 7816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7797,
											"end": 7816,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7797,
											"end": 7816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7797,
											"end": 7807,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7797,
											"end": 7816,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7797,
											"end": 7816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7797,
											"end": 7816,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 7789,
											"end": 7817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7789,
											"end": 7817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7817,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7817,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 7789,
											"end": 7817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7828,
											"end": 7833,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7828,
											"end": 7842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7828,
											"end": 7842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7828,
											"end": 7842,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7828,
											"end": 7842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7850,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3509,
											"end": 3607,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3509,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 3574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3594,
											"end": 3595,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3594,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3594,
											"end": 3599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3594,
											"end": 3599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3594,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3594,
											"end": 3599,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3594,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3594,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3587,
											"end": 3599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3587,
											"end": 3599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3607,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3607,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3908,
											"end": 4006,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3908,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 3998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3993,
											"end": 3994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 3998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 3998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 4006,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 4006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 4006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 4006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 4006,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1883,
											"end": 1892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1973,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1907,
											"end": 1978,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1907,
											"end": 1978,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1907,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2056,
											"end": 2058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2045,
											"end": 2054,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2038,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1988,
											"end": 2060,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1988,
											"end": 2060,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1988,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2073,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2073,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2157,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2073,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2073,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2073,
											"end": 2163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2073,
											"end": 2163,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2169,
											"end": 2285,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2169,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2239,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2254,
											"end": 2259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2239,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2239,
											"end": 2260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2239,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2237,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2261,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2273,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2277,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2285,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2383,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2416,
											"end": 2421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2392,
											"end": 2422,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2392,
											"end": 2422,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2392,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2552,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2529,
											"end": 2536,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2548,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2637,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2518,
											"end": 2637,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2556,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2556,
											"end": 2635,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2556,
											"end": 2635,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2556,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2637,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2518,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2677,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2754,
											"end": 2761,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2734,
											"end": 2743,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2701,
											"end": 2762,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2701,
											"end": 2762,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2701,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2785,
											"end": 2965,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2785,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2830,
											"end": 2831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2934,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2927,
											"end": 2928,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2920,
											"end": 2935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2958,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2951,
											"end": 2952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2944,
											"end": 2959,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 3319,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2971,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3054,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3086,
											"end": 3087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3063,
											"end": 3088,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3063,
											"end": 3088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3257,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3254,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3184,
											"end": 3258,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3181,
											"end": 3182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3259,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3159,
											"end": 3176,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3260,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3152,
											"end": 3283,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3152,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3152,
											"end": 3283,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3152,
											"end": 3283,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3152,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3308,
											"end": 3309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3313,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 3319,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 3319,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 3319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 3319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 3319,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3325,
											"end": 3505,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3325,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3373,
											"end": 3450,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3370,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3363,
											"end": 3451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3467,
											"end": 3468,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3460,
											"end": 3475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3491,
											"end": 3492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3499,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3696,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3511,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3586,
											"end": 3587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3620,
											"end": 3621,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3602,
											"end": 3622,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3602,
											"end": 3622,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3602,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3622,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3646,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3688,
											"end": 3689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3690,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3696,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3696,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"SafeTrans()": "72dc1cae",
							"ViewPrice()": "7a2b37b3",
							"setPrice(uint256)": "91b7f5ed",
							"subscribe()": "8f449a05"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"SafeTrans\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ViewPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subscribe\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"subscribe.sol\":\"RaiseFunds\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"subscribe.sol\":{\"keccak256\":\"0x1ab25a9e8818e15bc83090b5f1c32c105dc5b6beae9f963e82b34f28048c19ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c29e59f8ffb0782184c0dcf1ec7329f82fe27c878112235b0af3323e0fb3d976\",\"dweb:/ipfs/QmYoVShTyinWdbTvsFaN6HYgAQYDGxP16W1C5oFo8mrtoL\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"subscribe.sol\":420:6932  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"subscribe.sol\":420:6932  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e8557ba5c6b1aecaa82575cde0cdce034b2e59e22886c6e6931d2a270ad497b664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e8557ba5c6b1aecaa82575cde0cdce034b2e59e22886c6e6931d2a270ad497b664736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 SSTORE PUSH28 0xA5C6B1AECAA82575CDE0CDCE034B2E59E22886C6E6931D2A270AD497 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "420:6512:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e8557ba5c6b1aecaa82575cde0cdce034b2e59e22886c6e6931d2a270ad497b664736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 SSTORE PUSH28 0xA5C6B1AECAA82575CDE0CDCE034B2E59E22886C6E6931D2A270AD497 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "420:6512:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 420,
									"end": 6932,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e8557ba5c6b1aecaa82575cde0cdce034b2e59e22886c6e6931d2a270ad497b664736f6c634300080d0033",
									".code": [
										{
											"begin": 420,
											"end": 6932,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 420,
											"end": 6932,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 420,
											"end": 6932,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 420,
											"end": 6932,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 420,
											"end": 6932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 6932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 6932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 6932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 6932,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"subscribe.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"subscribe.sol\":{\"keccak256\":\"0x1ab25a9e8818e15bc83090b5f1c32c105dc5b6beae9f963e82b34f28048c19ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c29e59f8ffb0782184c0dcf1ec7329f82fe27c878112235b0af3323e0fb3d976\",\"dweb:/ipfs/QmYoVShTyinWdbTvsFaN6HYgAQYDGxP16W1C5oFo8mrtoL\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"subscribe.sol": {
				"ast": {
					"absolutePath": "subscribe.sol",
					"exportedSymbols": {
						"IERC20": [
							321
						],
						"RaiseFunds": [
							429
						],
						"SafeMath": [
							311
						]
					},
					"id": 430,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "217:201:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "428:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "661:146:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "672:128:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "705:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "697:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "697:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "709:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "713:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "709:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "697:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "729:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "748:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "755:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "747:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "740:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "780:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "786:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "779:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "772:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "444:135:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "601:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "612:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "646:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:0"
									},
									"scope": 311,
									"src": "585:222:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1036:118:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1047:100:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1076:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1080:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1076:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1072:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1091:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1098:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1090:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1083:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1123:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1129:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1133:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1129:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1122:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1115:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "815:139:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "969:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "984:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "976:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "995:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "987:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1021:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1021:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1027:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:15:0"
									},
									"scope": 311,
									"src": "960:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1385:427:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1396:409:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1658:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1663:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1658:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1654:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1674:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1680:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1673:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1666:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1705:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1697:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1697:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1709:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1713:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1709:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1697:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1733:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1737:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1733:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1742:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1729:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1753:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1760:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1752:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1745:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1785:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1791:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1784:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1777:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1162:141:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1318:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1333:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1325:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1344:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1336:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1370:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1370:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1376:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1369:15:0"
									},
									"scope": 311,
									"src": "1309:503:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2044:119:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2055:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2084:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2089:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2084:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2080:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2100:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2107:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2099:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2092:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2132:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2142:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2138:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2131:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2124:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1820:142:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1977:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1992:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1984:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2003:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1995:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1983:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2029:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2029:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2035:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2028:15:0"
									},
									"scope": 311,
									"src": "1968:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2405:119:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:101:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2445:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2450:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2445:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2441:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2461:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2468:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2460:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2453:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2493:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2499:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2503:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2499:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2492:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2485:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2171:152:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2338:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2353:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2345:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2364:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2356:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2344:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2390:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2390:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2389:15:0"
									},
									"scope": 311,
									"src": "2329:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2838:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2856:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2860:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2856:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2849:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2532:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2780:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2792:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2784:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2803:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2795:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2783:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2829:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2828:9:0"
									},
									"scope": 311,
									"src": "2771:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3219:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3237:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3241:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3237:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3230:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2877:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3161:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3165:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3176:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3210:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:0"
									},
									"scope": 311,
									"src": "3152:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3576:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3594:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3598:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3594:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3587:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3258:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3518:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3530:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3522:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3541:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3533:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3521:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3567:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3566:9:0"
									},
									"scope": 311,
									"src": "3509:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3975:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3993:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3997:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3993:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3986:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3615:287:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3917:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3929:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3921:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3940:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3932:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3920:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3966:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3965:9:0"
									},
									"scope": 311,
									"src": "3908:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4540:31:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4558:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4562:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4558:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4551:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "4014:453:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4482:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4494:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4486:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4505:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4497:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4485:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4531:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4530:9:0"
									},
									"scope": 311,
									"src": "4473:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5179:111:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5190:93:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5223:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5228:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5223:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5231:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5215:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5215:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5215:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5266:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5270:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5266:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5259:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4579:465:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5059:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5081:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5073:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5101:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5093:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5127:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5113:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5113:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5062:84:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5170:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5169:9:0"
									},
									"scope": 311,
									"src": "5050:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5917:110:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5928:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5961:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5965:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5961:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5968:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5953:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5953:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5953:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "6003:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "6007:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6003:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5996:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5298:484:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5797:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5819:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5811:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5839:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5831:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5865:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5851:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5851:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5800:84:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5907:9:0"
									},
									"scope": 311,
									"src": "5788:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6819:110:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6830:92:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6863:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6867:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6863:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6870:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6855:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6855:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6855:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6905:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6909:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6905:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6898:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "6035:649:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6699:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6721:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6713:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6741:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6733:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6767:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6753:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6753:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6702:84:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6810:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6810:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6809:9:0"
									},
									"scope": 311,
									"src": "6690:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 430,
							"src": "420:6512:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 321,
							"linearizedBaseContracts": [
								321
							],
							"name": "IERC20",
							"nameLocation": "6948:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a9059cbb",
									"id": 320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "6974:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6991:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "6983:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7003:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "6995:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6982:28:0"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "7029:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7029:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7028:6:0"
									},
									"scope": 321,
									"src": "6965:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 430,
							"src": "6938:103:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "RaiseFunds",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 429,
							"linearizedBaseContracts": [
								429
							],
							"name": "RaiseFunds",
							"nameLocation": "7057:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 324,
									"libraryName": {
										"id": 322,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "7080:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "7074:24:0",
									"typeName": {
										"id": 323,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7093:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 333,
									"mutability": "mutable",
									"name": "dcf",
									"nameLocation": "7113:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 429,
									"src": "7106:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$321",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 326,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 325,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 321,
											"src": "7106:6:0"
										},
										"referencedDeclaration": 321,
										"src": "7106:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$321",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "307842314364386164313638393933313844413946304132633939333364353939654239636443313063",
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7134:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xB1Cd8ad16899318DA9F0A2c9933d599eB9cdC10c"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													],
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "7126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 328,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7126:7:0",
														"typeDescriptions": {}
													}
												},
												"id": 331,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "7126:51:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 327,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 321,
											"src": "7119:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$321_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 332,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7119:59:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$321",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 336,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "7192:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 429,
									"src": "7187:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 334,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7187:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33303030303030303030303030",
										"id": 335,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7200:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3000000000000_by_1",
											"typeString": "int_const 3000000000000"
										},
										"value": "3000000000000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 338,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "7228:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 429,
									"src": "7220:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 337,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7220:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "7255:37:0",
										"statements": [
											{
												"expression": {
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 341,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "7266:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 342,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7274:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7274:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7266:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "7266:18:0"
											}
										]
									},
									"id": 347,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7253:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7255:0:0"
									},
									"scope": 429,
									"src": "7242:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "7336:164:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 351,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7355:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "7355:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31653136",
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7368:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"value": "1e16"
															},
															"src": "7355:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7347:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7347:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "7347:26:0"
											},
											{
												"assignments": [
													358
												],
												"declarations": [
													{
														"constant": false,
														"id": 358,
														"mutability": "mutable",
														"name": "dcf_amount",
														"nameLocation": "7389:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 379,
														"src": "7384:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 357,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7384:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 370,
												"initialValue": {
													"arguments": [
														{
															"id": 368,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "7432:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 364,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7417:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "7417:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31653138",
																			"id": 361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7407:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7402:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 359,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "7402:4:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7402:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "7402:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7402:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "7402:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7402:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7384:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 374,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7462:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7462:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "7473:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 371,
															"name": "dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "7449:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$321",
																"typeString": "contract IERC20"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 320,
														"src": "7449:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7449:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "7449:35:0"
											}
										]
									},
									"functionSelector": "8f449a05",
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "subscribe",
									"nameLocation": "7309:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7318:2:0"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7336:0:0"
									},
									"scope": 429,
									"src": "7300:200:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "7538:104:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 384,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7557:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7557:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 386,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "7571:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7557:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 383,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7549:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7549:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "7549:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 397,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7620:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_RaiseFunds_$429",
																			"typeString": "contract RaiseFunds"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_RaiseFunds_$429",
																			"typeString": "contract RaiseFunds"
																		}
																	],
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7612:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 395,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7612:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7612:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "7612:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 392,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "7596:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7588:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 390,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7588:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7588:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "7588:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7588:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "7588:46:0"
											}
										]
									},
									"functionSelector": "72dc1cae",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "SafeTrans",
									"nameLocation": "7519:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7528:2:0"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7538:0:0"
									},
									"scope": 429,
									"src": "7510:132:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "7699:31:0",
										"statements": [
											{
												"expression": {
													"id": 408,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 336,
													"src": "7717:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 407,
												"id": 409,
												"nodeType": "Return",
												"src": "7710:12:0"
											}
										]
									},
									"functionSelector": "7a2b37b3",
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ViewPrice",
									"nameLocation": "7663:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7672:2:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "7694:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7694:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7693:6:0"
									},
									"scope": 429,
									"src": "7654:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "7778:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 417,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7797:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7797:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 419,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "7811:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7797:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7789:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7789:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "7789:28:0"
											},
											{
												"expression": {
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 423,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "7828:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 424,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "7836:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7828:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "7828:14:0"
											}
										]
									},
									"functionSelector": "91b7f5ed",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setPrice",
									"nameLocation": "7748:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "7762:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "7757:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7757:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7756:13:0"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7778:0:0"
									},
									"scope": 429,
									"src": "7739:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 430,
							"src": "7047:813:0",
							"usedErrors": []
						}
					],
					"src": "33:7827:0"
				},
				"id": 0
			}
		}
	}
}